name: CI

on:
  push:
  pull_request:

jobs:
  compile-windows:
    runs-on: windows-2022
    strategy:
      matrix:
        arch:
          - x64
          - win32
      fail-fast: false

    steps:
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: git clone
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install Dependencies
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install .github/dependencies.config -y

    - run: cp src/metadata/*.h.sig src/metadata/sigs/
    - run: cmake . -A ${{ matrix.arch }}

    # Build things individually just to have some separation in the GHA UI.
    - run: cmake --build . --config Release --target zcsound
    - run: cmake --build . --config Release --target zquest
    - run: cmake --build . --config Release --target zelda
    - run: cmake --build . --config Release --target zscript
    - run: cmake --build . --config Release --target zlauncher

    # Build anything else that may not be covered above.
    - run: cmake --build . --config Release
    
    # Check ZScript
    - run: ./buildpack.bat y
      working-directory: output/_auto
    - run: ./zscript.exe -input "include/std.zh" -unlinked
      working-directory: output/_auto/buildpack
    
    # Run replay tests.
    - run: python3 -Xutf8 ${{ github.workspace }}/tests/run_replay_tests.py --build_folder=${{ github.workspace }}/Release --retries=1 --ci windows
      working-directory: output/_auto/buildpack
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: replays ${{ matrix.arch }}
        path: |
          ${{ github.workspace }}/tests/replays/*.zplay.roundtrip
          ${{ github.workspace }}/tests/replays/*.zplay.unexpected*

  compile-mac:
    runs-on: macos-12

    steps:
    - name: git clone
      uses: actions/checkout@v2
      with:
        lfs: true
    
    - run: brew install ninja dylibbundler create-dmg
    - name: Install Bison
      run: |
        wget http://ftp.gnu.org/gnu/bison/bison-3.6.tar.gz
        tar -zxvf bison-3.6.tar.gz
        cd bison-3.6
        ./configure
        make
        sudo make install

    - run: cp src/metadata/*.h.sig src/metadata/sigs/
    - run: cmake -S . -B build -G 'Ninja Multi-Config' .

    #Build
    - run: cmake --build build --config Release
    
    # Check ZScript
    - run: ./buildpack_osx.sh
      working-directory: output/_auto
    - run: ./zscript -input "include/std.zh" -unlinked
      working-directory: output/_auto/zelda-classic-mac/ZeldaClassic.app/Contents/Resources
    
    # Run replay tests.
    - run: python3 ${{ github.workspace }}/tests/run_replay_tests.py --build_folder=${{ github.workspace }}/build/Release --retries=1 --ci osx
      working-directory: output/_auto/zelda-classic-mac/ZeldaClassic.app/Contents/Resources
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: replays osx
        path: |
          ${{ github.workspace }}/tests/replays/*.zplay.roundtrip
          ${{ github.workspace }}/tests/replays/*.zplay.unexpected*
