namespace ghost3
{
	
	zstruct Metadata
	{
		enum statustype 
		{
			ALPHA, BETA, GAMMA, RELEASE
		};
		
		enum timezones
		{
			GMT, PST, CST, EST
		};
		const int VERSION 	= 3;
		const int SUBVERSION 	= 0;
		const int PATCHVERSION 	= 0;
		
		const statustype STATUS = ALPHA;
		const int STATUSBUILD 	= 9;
		
		const int YEAR 		= 2021;
		const int MONTH 	= 2;
		const int DAY 		= 13;
		const int HOUR 		= 8;
		const int MINUTE 	= 04;
		
		const timezones TIMEZONE = EST;
		
		
		
		int print()
		{
			char32 buildstatus[]={"ALPHA","BETA","GAMMA","RELEASE"};
			char32 versstr[256];
			sprintf(versstr,"Ghost Version %d.%d.%d, %s %d\n", VERSION, SUBVERSION, PATCHVERSION, buildstatus[STATUS], STATUSBUILD);
			
			//Date and time
			
			char32 months[] = { "January", "February", "March", "April", "May", "June", "July", 
				"August", "September", "October", "November", "December" };
				
			char32 tzone[]= { " GMT", " PST", " CST", " EST" };
			char32 dte[5]; 
			appendDay(DAY, dte);	
			char32 datestr[256];
			sprintf(datestr, "Last revised on %s, %s %d at %d:%d hours %s\n", dte, months[MONTH], YEAR, HOUR, MINUTE, tzone[TIMEZONE]); 
			TraceS(versstr);
			TraceS(datestr);
			
		}
		void appendDay(int d, char32 ptr)
		{
			int tmp[5];
			itoa(tmp,d);
			switch(d)
			{
				//nd
				case 2:
				case 22:
					strcat(tmp, "nd");
					break;
				//rd
				case 3:
				case 23:
					strcat(tmp, "rd");
					break;
				//st
				default:
					strcat(tmp, "th");
					break;
			}
			strcpy(ptr, tmp);
		}
	}
	
	//global script test
	//{
	//	void run()
	//	{
	//		MetaData.print();
	//	}
	//}
	
}