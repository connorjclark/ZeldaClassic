//Main weapon launcher item script. 
//D0-D6 are passed to host FFC as arguments (7 arguments). 
//D7 - Script slot for FFC.
//When FFC script is run, it can access item ID that launched this lweapon via this->InitD[7].
//This allows FFC script to obtain itemdata of the said item and use it for his own purposes.
item script WeaponLauncher{
	void run (int d0, int d1, int d2, int d3, int d4, int d5, int d6, int ffcscript){
		int itm = LastItemUsed();
		int args[8] = {d0,d1,d2,d3,d4,d5,d6,itm};
		ffc launch = RunFFCScriptOrQuit(ffcscript, args);
	}
}

//Returns ID of last item used by Link.
int LastItemUsed(){
	if ((Link->ItemJinx==0)&&(Link->InputB)) return (GetEquipmentB());
	if ((Link->SwordJinx==0)&&(Link->InputA)) return (GetEquipmentA());
	return -1;
}

//Returns TRUE if Link is still holding the button associated with given item.
bool IsPressingUseButton(int it){
	if ((Link->ItemJinx==0)&&(GetEquipmentB()==it)){
		if (Link->InputB) return true;
		else return false;
	}
	if ((Link->SwordJinx==0)&&(GetEquipmentA() == it)){
		if (Link->InputA) return true;
		else return false;
	}
	return false;
}

//Obtains ID of the FFC that controls this scripted lweapon.
int GetMasterFFCID(lweapon l){
	if (!LweaponFlagIsSet(l, LWF_GHOSTED)) return -1;//Non-ghosted lweapon returns -1.
	else return l->Misc[LWEAPON_MISC_FFC_ID];
}


//Obtains ID of the item that launched this scripted lweapon.
int GetItemID(lweapon l){
	if (!LweaponFlagIsSet(l, LWF_GHOSTED)) return -1;//Non-ghosted lweapon returns -1.
	ffc master = Screen->LoadFFC(l->Misc[LWEAPON_MISC_FFC_ID]);
	return master->InitD[7];
}