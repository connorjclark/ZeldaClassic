stderr:

Compiling 'std.zs'
Pass 1: Parsing
Pass 2: Preprocessing
Pass 3: Registration
Pass 4: Analyzing Code
Pass 5: Checking code paths
Pass 6: Generating object code
Pass 7: Assembling
Success!
Compile finished with exit code '0' (success)

stdout:

{
  "success": true,
  "diagnostics": [],
  "metadata": {
    "currentFileSymbols": 0,
    "symbols": 5,
    "identifiers": 5,
    "elided": true
  }
}

zasm:

SETV GD13 0; void run() Body Start
ALLOCATEGMEMV D2 18000 0
SETR GD15 D2
SETV GD8 0
SETV GD7 0
ALLOCATEGMEMV D2 90 0
SETR GD6 D2
SETV GD9 0
SETV GD10 0
SETV GD11 0
SETV GD12 0
SETV GD14 0
ALLOCATEGMEMV D2 8 0
SETR GD1 D2
ALLOCATEGMEMV D2 2048 0
SETR GD4 D2
ALLOCATEGMEMV D2 94 0
SETR GD2 D2
ALLOCATEGMEMV D2 48 0
SETR GD5 D2
ALLOCATEGMEMV D2 14 0
PUSHR D2
WRITEPODARRAY D2 {0,0,1024,0,0,256,512,0,1024,1024,256,0,256,512}
POP D2
SETR GD16 D2
ALLOCATEGMEMV D2 480 0
SETR GD3 D2
QUIT; void run() Body End
PUSHV 0; void run() Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1816; UsrFunc[void Tango_Start()] Call
POP D4
PUSHR D4; while(true) #16 Body [Opt:AlwaysOn] Start
CALLFUNC 0.2000; UsrFunc[void Tango_Update1()] Call
POP D4
WAITDRAW; InlineFunc[void Waitdraw()] Body
PUSHR D4
CALLFUNC 0.2951; UsrFunc[void Tango_Update2()] Call
POP D4
WAITFRAME; InlineFunc[void Waitframe()] Body AND while(true) #16 Body [Opt:AlwaysOn] End
GOTO 34; while() #16 End AND [Opt:NeverRet] AND void run() Body End
SETR D4 SP2; Func[int Rand(int, int)] Body Start
SETV D2 0; InlineFunc[int randgen::Rand(int, int)] Params Start AND return Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0001
SETR D3 D2; InlineFunc[int randgen::Rand(int, int)] Params End
POP D2; InlineFunc[int randgen::Rand(int, int)] Body Start
POP REFRNG
RNGRAND3 D2 D3; InlineFunc[int randgen::Rand(int, int)] Body End
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Rand(int, int)] Body End
SETR D4 SP2; Func[int Clamp(int, int, int)] Body Start
LOAD D2 0.0002; if() #389 Test
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 67 ==; Test 'if'
LOAD D2 0.0001; if() #389 Body Start
STORE D2 0.0002
GOTO 77; if() #389 Body End
LOAD D2 0.0002; if() #846 Test AND if() #389 Else Start
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 77 ==; Test 'if'
LOAD D2 0; if() #846 Body Start
STORE D2 0.0002; if() #846 Body End
LOAD D2 0.0002; if() #389 Else End AND return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Clamp(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[int NumTriforcePieces(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 1 0; for() #85 setup
LOAD D2 0; for() #85 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 106 ==; for() #85 TestFail?
LOAD D2 0; if() #258 Test AND for() #85 Body Start
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
GOTOCMP 102 ==; Test 'if'
LOAD D2 0.0001; if() #258 Body Start
ADDV D2 1
STORE D2 0.0001; if() #258 Body End
LOAD D2 0; for() #85 Body End AND for() #85 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 84; for() #85 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int NumTriforcePieces(int)] Body End
SETR D4 SP2; Func[untyped Clamp(untyped, untyped, untyped)] Body Start
LOAD D2 0.0002; if() #391 Test
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 121 ==; Test 'if'
LOAD D2 0.0001; if() #391 Body Start
STORE D2 0.0002
GOTO 131; if() #391 Body End
LOAD D2 0.0002; if() #848 Test AND if() #391 Else Start
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 131 ==; Test 'if'
LOAD D2 0; if() #848 Body Start
STORE D2 0.0002; if() #848 Body End
LOAD D2 0.0002; if() #391 Else End AND return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[untyped Clamp(untyped, untyped, untyped)] Body End
SETR D4 SP2; Func[void Tango_ActivateMenu()] Body Start
SETR D2 GD2; if() #355 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 148 ==; Test 'if'
PUSHR D4; if() #355 Body Start
PUSHV 301; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 163; return (Void) AND if() #355 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.0188; UsrFunc[void __Tango_UnpressMenu()] Call
PEEK D4
PUSHV 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params
CALLFUNC 0.0210; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start AND UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0301; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
RETURNFUNC; Func[void Tango_ActivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_LogError(int)] Body Start
SETR D4 SP2
SETV D2 300; if(true) #509 [Opt:AlwaysOn]
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
ALLOCATEMEMV D2 16 0
WRITEPODSTRING D2 "tango.zh error "
STORE D2 0
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
LOAD D2 0.0002; InlineFunc[void TraceToBase(int, int, int)] Params Start
PUSHR D2
PUSHV 10
PUSHV 0; InlineFunc[void TraceToBase(int, int, int)] Params End
TRACE5; InlineFunc[void TraceToBase(int, int, int)] Body Start
POPARGS D5 0.0003; InlineFunc[void TraceToBase(int, int, int)] Body End
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int)] Body End
SETR D4 SP2; Func[void __Tango_UnpressMenu()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ScrollToMenuCursor(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002; if() #589 Test
COMPAREV D2 0
GOTOCMP 226 <
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
GOTOCMP 226 >=
SETV D2 0
GOTO 227
SETV D2 1
COMPAREV D2 0
GOTOCMP 299 !=; Test 'if' AND return (Void) AND if() #589 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
STORE D2 0.0001
LOAD D2 0.0001; if() #590 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 299 !=; Test 'if' AND return (Void) AND if() #590 Body
SETR D2 GD2
PUSHR D2
LOAD D2 0.0002
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #293 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 274 ==; Test 'if'
PUSHR D4; if() #293 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1582; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4
GOTO 299; if() #293 Body End
LOAD D2 0; if() #591 Test AND if() #293 Else Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 299 ==; Test 'if'
PUSHR D4; if() #591 Body Start
LOAD D2 0.0001; UsrFunc[void Tango_ScrollSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
SUBR D3 D2
PUSHR D3; UsrFunc[void Tango_ScrollSlot(int, int)] Params End
CALLFUNC 0.1582; UsrFunc[void Tango_ScrollSlot(int, int)] Call
POP D4; if() #591 Body End
POPARGS D5 0.0003; if() #293 Else End
RETURNFUNC; Func[void __Tango_ScrollToMenuCursor(int)] Body End
SETR D4 SP2; Func[void __Tango_SetCursorMovement(int, int)] Body Start
LOAD D2 0; if() #295 Test
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 334 ==; Test 'if'
SETV D2 0; if() #295 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1561; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1571; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 386; if() #295 Body End
LOAD D2 0; if() #295 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1561; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 29 D2
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1571; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
LOAD D2 0
POP D3
DIVR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 30 D2; if() #295 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCursorMovement(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuFlags(int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
POP D5
RETURNFUNC; Func[void Tango_SetMenuFlags(int)] Body End
PUSHV 0; Func[bool __Tango_ValidateSlot(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #628 Test
COMPAREV D2 0
GOTOCMP 408 <
LOAD D2 0.0001
COMPAREV D2 1
GOTOCMP 408 >
SETV D2 0
GOTO 409
SETV D2 1
COMPAREV D2 0
GOTOCMP 413 ==; Test 'if'
SETV D2 0; if() #628 Body Start
STORE D2 0; if() #628 Body End
LOAD D2 0.0001; if() #629 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 424 ==; Test 'if'
SETV D2 0; if() #629 Body Start
STORE D2 0; if() #629 Body End
LOAD D2 0; unless() #630 Test
COMPAREV D2 0
GOTOCMP 433 !=; Test 'unless'
PUSHR D4; unless() #630 Body Start
PUSHV 403; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #630 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateSlot(int)] Body End
PUSHV 0; Func[int Tango_GetSlotStyleAttribute(int, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #374 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0397; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 447 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #374 Body Start
GOTO 464; return End AND unless() #374 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
MULTV D2 24
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
MULTV D2 48
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int Tango_GetSlotStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped, untyped)] Body Start
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_LogError(int, untyped, untyped)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_ClearSlotBitmap(int)] Body Start
SETR D4 SP2
LOAD D2 0.0005
MULTV D2 7
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_ClearSlotBitmap(int)] Body End
SETR D4 SP2; Func[void __Tango_IncScreenFreeze()] Body Start
SETR D2 GD2; if() #486 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
SETR D2 GD2; Test 'if'
PUSHR D2
POP D0
READPODARRAYV D2 11
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
RETURNFUNC; Func[void __Tango_IncScreenFreeze()] Body End
SETR D4 SP2; Func[bool __Tango_PressSpeedup()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_PressSuperSpeed()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressSuperSpeed()] Body End
PUSHV 0; Func[void Tango_AddMenuChoice(int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #362 Test
PUSHR D2
POP D0
READPODARRAYV D2 23
COMPAREV D2 20
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 580 ==; Test 'if'
PUSHR D4; if() #362 Body Start
PUSHV 302; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 626; return (Void) AND if() #362 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
MULTV D2 3
ADDV D2 34
STORE D2 0
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
ADDV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_AddMenuChoice(int, int, int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_LoadMessage(int, int, bool, int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #500 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0397; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 696 ==; Test 'unless' AND return (Void) AND unless() #500 Body
PUSHR D4
LOAD D2 0.0006; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2383; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[int __Tango_FindDestStart(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_FindDestStart(bool)] Params End
CALLFUNC 0.5332; UsrFunc[int __Tango_FindDestStart(bool)] Call
POP D4
STORE D2 0.0002
PUSHR D4; unless() #501 Test
LOAD D2 0.0005; UsrFunc[bool __Tango_ValidateMessage(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateMessage(int)] Params End
CALLFUNC 0.7706; UsrFunc[bool __Tango_ValidateMessage(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 670 !=; Test 'unless'
PUSHR D4; unless() #501 Body Start
PUSHV 101; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 696; return (Void) AND unless() #501 Body End
ALLOCATEMEMV D2 256 0
STORE D2 0.0001
LOAD D2 0.0005; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0.0001; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Params End
CALLFUNC 0.5375; UsrFunc[int __Tango_FindSrcStart(char32[], char32)] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3452; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_LoadMessage(int, int, bool, int)] Body End
PUSHARGSV 0 0.0003; Func[void Tango_ClearSlot(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #364 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0397; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 983 ==; Test 'unless' AND return (Void) AND unless() #364 Body
PUSHR D4; if() #365 Test
LOAD D2 0.0003; UsrFunc[bool Tango_SlotIsActive(int)] Params Start
PUSHR D2; UsrFunc[bool Tango_SlotIsActive(int)] Params End
CALLFUNC 0.0985; UsrFunc[bool Tango_SlotIsActive(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 730 ==; Test 'if'
PUSHR D4; if() #365 Body Start
LOAD D2 0.0003; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Params End
CALLFUNC 0.0436; UsrFunc[int Tango_GetSlotStyleAttribute(int, int)] Call
POP D4
STORE D2 0.0002
LOAD D2 0.0002; if() #366 Test
ANDV D2 512
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 730 ==; Test 'if'
PUSHR D4; if() #366 Body Start
CALLFUNC 0.1022; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #366 Body End
LOAD D2 0.0003; if() #365 Body End
MULTV D2 24
STORE D2 0.0002
LOAD D2 0.0003
MULTV D2 7
STORE D2 0.0001
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -10
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 6
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 7
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 8
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 9
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 13
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 -1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 14
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 22
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
ADDV D2 23
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; if() #367 Test
CALLFUNC 0.1041; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 977 ==
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 977 !=
SETV D2 1
GOTO 978
SETV D2 0
COMPAREV D2 0
GOTOCMP 983 ==; Test 'if'
PUSHR D4; if() #367 Body Start
CALLFUNC 0.1049; UsrFunc[void __Tango_MenuCancel()] Call
POP D4; if() #367 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_ClearSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[bool Tango_SlotIsActive(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #397 Test
LOAD D2 0.0002; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0397; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 996 !=; Test 'unless'
SETV D2 0; return Start AND unless() #397 Body Start
GOTO 1020; return End AND unless() #397 Body End
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #398 Test
COMPAREV D2 0
GOTOCMP 1014 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 1014 ==
SETV D2 0
GOTO 1015
SETV D2 1
COMPAREV D2 0
GOTOCMP 1019 ==; Test 'if'
SETV D2 0; return Start AND if() #398 Body Start
GOTO 1020; return End AND if() #398 Body End
SETV D2 1; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[bool Tango_SlotIsActive(int)] Body End
SETR D4 SP2; Func[void __Tango_DecScreenFreeze()] Body Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 11
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
SETR D2 GD2; if() #435 Test
PUSHR D2
POP D0
READPODARRAYV D2 11
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
RETURNFUNC; Test 'if' AND Func[void __Tango_DecScreenFreeze()] Body End
SETR D4 SP2; Func[bool Tango_MenuIsActive()] Body Start
SETR D2 GD2; return Start
PUSHR D2
POP D0
READPODARRAYV D2 15
COMPAREV D2 -214747.9999
SETCMP D2 I>
RETURNFUNC; return End AND Func[bool Tango_MenuIsActive()] Body End
SETR D4 SP2; Func[void __Tango_MenuCancel()] Body Start
SETR D2 GD2; if() #512 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1066 ==; Test 'if'
PUSHR D4; if() #512 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1476; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #512 Body End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 22; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
CALLFUNC 0.1147; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
RETURNFUNC; Func[void __Tango_MenuCancel()] Body End
PUSHV 0; Func[bool __Tango_ValidateStyle(int)] Body Start
SETR D4 SP2
STOREV 1 0
LOAD D2 0.0001; if() #637 Test
COMPAREV D2 0
GOTOCMP 1108 <
LOAD D2 0.0001
COMPAREV D2 9
GOTOCMP 1108 >
SETV D2 0
GOTO 1109
SETV D2 1
COMPAREV D2 0
GOTOCMP 1113 ==; Test 'if'
SETV D2 0; if() #637 Body Start
STORE D2 0; if() #637 Body End
LOAD D2 0.0001; if() #638 Test
PUSHR D2
LOAD D2 0.0001
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1124 ==; Test 'if'
SETV D2 0; if() #638 Body Start
STORE D2 0; if() #638 Body End
LOAD D2 0; unless() #639 Test
COMPAREV D2 0
GOTOCMP 1133 !=; Test 'unless'
PUSHR D4; unless() #639 Body Start
PUSHV 401; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; unless() #639 Body End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[bool __Tango_ValidateStyle(int)] Body End
SETR D4 SP2; Func[void Tango_DeactivateMenu()] Body Start
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
CALLFUNC 0.1147; UsrFunc[void __Tango_MenuNotify()] Call
POP D4
RETURNFUNC; Func[void Tango_DeactivateMenu()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_MenuNotify()] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #144 setup
LOAD D2 0; for() #144 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1182 ==; for() #144 TestFail?
LOAD D2 0; for() #144 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5; if() #513 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1178 !=; Test 'if' AND continue 1; AND if() #513 Body
SETV D2 7
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #144 Body End
LOAD D2 0; for() #144 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1151; for() #144 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuNotify()] Body End
PUSHV 0; Func[bool __Tango_CursorPosIsValid()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
LOAD D2 0; if() #433 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1198 ==; Test 'if'
SETV D2 0; return Start AND if() #433 Body Start
GOTO 1212; return End AND if() #433 Body End
LOAD D2 0; if() #434 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 1211 ==; Test 'if'
SETV D2 0; return Start AND if() #434 Body Start
GOTO 1212; return End AND if() #434 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_CursorPosIsValid()] Body End
SETR D4 SP2; Func[int Tango_GetCustomVar(int)] Body Start
LOAD D2 0; if() #93 Test
COMPAREV D2 0.0055
GOTOCMP 1223 <
LOAD D2 0
COMPAREV D2 0.0062
GOTOCMP 1223 >
SETV D2 1
GOTO 1224
SETV D2 0
COMPAREV D2 0
GOTOCMP 1234 ==; Test 'if'
SETR D2 GD1; return Start AND if() #93 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 0.0055
MULTV D2 10000
POP D0
READPODARRAYR D2 D2
GOTO 1240; return End AND if() #93 Body End
PUSHR D4; if() #93 Else Start
LOAD D2 0; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1242; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4
SETV D2 0; return Start
POP D5; return End AND if() #93 Else End
RETURNFUNC; Func[int Tango_GetCustomVar(int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedVariable(int)] Body Start
PUSHR D4
PUSHV 203; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedVariable(int)] Body End
SETR D4 SP2; Func[int Tango_GetSlotVar(int, int)] Body Start
PUSHR D4; if() #375 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateSlot(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateSlot(int)] Params End
CALLFUNC 0.0397; UsrFunc[bool __Tango_ValidateSlot(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1270 ==; Test 'if'
SETR D2 GD5; return Start AND if() #375 Body Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 24
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
GOTO 1271; return End AND if() #375 Body End
SETV D2 -10; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetSlotVar(int, int)] Body End
PUSHARGSV 0 0.0003; Func[int Tango_GetStringWidth(char32[], int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #111 setup
LOAD D2 0.0004; for() #111 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1331 ==; for() #111 TestFail?
LOAD D2 0.0004; for() #111 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #378 Test
COMPAREV D2 32
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1327 !=; Test 'if' AND continue 1; AND if() #378 Body
LOAD D2 0.0003; if() #94 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1316 ==; Test 'if'
LOAD D2 0.0002; if() #94 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 6
POP D3
ADDR D2 D3
STORE D2 0.0002
GOTO 1327; if() #94 Body End
LOAD D2 0.0002; if() #94 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002; if() #94 Else End
LOAD D2 0; for() #111 Body End AND for() #111 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1278; for() #111 End
LOAD D2 0.0002; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int Tango_GetStringWidth(char32[], int[])] Body End
SETR D4 SP2; Func[int Tango_GetStyleAttribute(int, int)] Body Start
PUSHR D4; unless() #379 Test
LOAD D2 0.0001; UsrFunc[bool __Tango_ValidateStyle(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateStyle(int)] Params End
CALLFUNC 0.1097; UsrFunc[bool __Tango_ValidateStyle(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 1344 !=; Test 'unless'
SETV D2 -10; return Start AND unless() #379 Body Start
GOTO 1354; return End AND unless() #379 Body End
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0.0001
MULTV D2 48
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int Tango_GetStyleAttribute(int, int)] Body End
SETR D4 SP2; Func[void Tango_InitializeMenu()] Body Start
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETV D2 -1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETV D2 214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
RETURNFUNC; Func[void Tango_InitializeMenu()] Body End
SETR D4 SP2; Func[void Tango_LoadMessage(int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHARGSV 0 0.0002; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Params End
CALLFUNC 0.0628; UsrFunc[void __Tango_LoadMessage(int, int, bool, int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_LoadMessage(int, int)] Body End
SETR D4 SP2; Func[void Tango_LogUndefinedFunction(int)] Body Start
PUSHR D4
PUSHV 202; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_LogUndefinedFunction(int)] Body End
SETR D4 SP2; Func[void __Tango_LogError(int, untyped)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void __Tango_LogError(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_LogError(int)] Params End
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_LogError(int, untyped)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SaveMenuState(int[])] Body Start
SETR D4 SP2
SETR D2 GD2; InlineFunc[int SizeOfArray(untyped[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(untyped[])] Body
SUBV D2 14
STORE D2 0.0001
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params AND if() #386 Test
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1501 ==; Test 'if'
PUSHR D4; if() #386 Body Start
PUSHV 405; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params Start
LOAD D2 0.0002; InlineFunc[int SizeOfArray(int[])] Params
ARRAYSIZE D2; InlineFunc[int SizeOfArray(int[])] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Params End
CALLFUNC 0.0466; UsrFunc[void __Tango_LogError(int, untyped, untyped)] Call
POP D4
GOTO 1559; return (Void) AND if() #386 Body End
STOREV 0 0; for() #113 setup
LOAD D2 0; for() #113 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1528 ==; for() #113 TestFail?
SETR D2 GD2; for() #113 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 14
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #113 Body End
LOAD D2 0; for() #113 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1502; for() #113 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1561; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1571; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 14 D2
SETV D2 0
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SaveMenuState(int[])] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceX(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceX(int)] Body End
SETR D4 SP2; Func[int __Tango_GetMenuChoiceY(int)] Body Start
SETR D2 GD2; return Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetMenuChoiceY(int)] Body End
PUSHV 0; Func[void Tango_ScrollSlot(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0
SETR D2 GD5; if() #388 Test
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1701 !=; Test 'if' AND return (Void) AND if() #388 Body
LOAD D2 0.0001; if() #95 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1625 ==; Test 'if'
LOAD D2 0.0001; if() #389 Test AND if() #95 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1664 ==; Test 'if'
SETR D2 GD5; if() #389 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
SUBV2 0 D2
STORE D2 0.0001; if() #389 Body End
GOTO 1664; if() #95 Body End
LOAD D2 0.0001; if() #390 Test AND if() #95 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 1664 ==; Test 'if'
SETR D2 GD5; if() #390 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001; if() #390 Body End
SETR D2 GD5; if() #95 Else End
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2; if() #391 Test
PUSHR D2
POP D0
READPODARRAYV D2 24
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1701 ==; Test 'if'
PUSHR D4; if() #391 Body Start
PUSHV 0; UsrFunc[void __Tango_ShiftMenu(int, int)] Params Start
LOAD D2 0.0001
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_ShiftMenu(int, int)] Params End
CALLFUNC 0.1703; UsrFunc[void __Tango_ShiftMenu(int, int)] Call
POP D4; if() #391 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_ScrollSlot(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenu(int, int)] Body Start
SETR D4 SP2
STOREV 34 0.0001
STOREV 0 0; for() #153 setup
LOAD D2 0; for() #153 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1761 ==; for() #153 TestFail?
SETR D2 GD2; for() #153 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #153 Body End
LOAD D2 0; for() #153 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1707; for() #153 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_ShiftMenu(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetCustomVar(int, int)] Body Start
LOAD D2 0.0001; if() #96 Test
COMPAREV D2 0.0055
GOTOCMP 1772 <
LOAD D2 0.0001
COMPAREV D2 0.0062
GOTOCMP 1772 >
SETV D2 1
GOTO 1773
SETV D2 0
COMPAREV D2 0
GOTOCMP 1787 ==; Test 'if'
LOAD D2 0; if() #96 Body Start
PUSHR D2
SETR D2 GD1
PUSHR D2
LOAD D2 0.0001
SUBV D2 0.0055
MULTV D2 10000
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 1792; if() #96 Body End
PUSHR D4; if() #96 Else Start
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedVariable(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedVariable(int)] Params End
CALLFUNC 0.1242; UsrFunc[void Tango_LogUndefinedVariable(int)] Call
POP D4; if() #96 Else End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_SetCustomVar(int, int)] Body End
SETR D4 SP2; Func[void Tango_SetMenuCursorPosition(int)] Body Start
LOAD D2 0
LSHIFTV D2 0
STORE D2 0
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0210; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
PEEK D4
LOAD D2 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0301; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void Tango_SetMenuCursorPosition(int)] Body End
PUSHV 0; Func[void Tango_Start()] Body Start
SETR D4 SP2
PUSHR D4
CALLFUNC 0.1846; UsrFunc[void __Tango_ValidateSavedVersion()] Call
PEEK D4
CALLFUNC 0.1356; UsrFunc[void Tango_InitializeMenu()] Call
POP D4
STOREV 0 0; for() #114 setup
LOAD D2 0; for() #114 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1838 ==; for() #114 TestFail?
PUSHR D4; for() #114 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0698; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; for() #114 Body End
LOAD D2 0; for() #114 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1824; for() #114 End
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 11 D2
POP D5
RETURNFUNC; Func[void Tango_Start()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_ValidateSavedVersion()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #332 Test
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1863 ==; Test 'if'
SETV D2 3; if() #332 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 7 D2
GOTO 1895; if() #332 Body End
SETR D2 GD2; if() #627 Test AND if() #332 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 7
COMPAREV D2 3
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 1895 ==; Test 'if'
ALLOCATEMEMV D2 81 0; if() #627 Body Start
WRITEPODSTRING D2 "tango.zh error: The saved data is invalid for the current version of this quest."
STORE D2 0.0002
ALLOCATEMEMV D2 70 0
WRITEPODSTRING D2 "Serious errors are likely to occur. Begin a new game to correct this."
STORE D2 0
LOAD D2 0.0002; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
LOAD D2 0; InlineFunc[void TraceS(char32[])] Params Start
SETR D3 D2; InlineFunc[void TraceS(char32[])] Params End
TRACE6 D3; InlineFunc[void TraceS(char32[])] Body
TRACE3; InlineFunc[void TraceNL()] Body
SETV D2 1800
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3
LOAD D3 0.0002
DEALLOCATEMEMR D3; if() #627 Body End
POPARGS D5 0.0004; if() #332 Else End
RETURNFUNC; Func[void __Tango_ValidateSavedVersion()] Body End
PUSHARGSV 0 0.0002; Func[void Tango_SuspendSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
ADDV D2 1
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #400 Test
COMPAREV D2 0
GOTOCMP 1917 ==
LOAD D2 0
COMPAREV D2 4
GOTOCMP 1917 ==
SETV D2 0
GOTO 1918
SETV D2 1
COMPAREV D2 0
GOTOCMP 1931 !=; Test 'if' AND return (Void) AND if() #400 Body
LOAD D2 0
MODV D2 100
ADDV D2 100
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void Tango_SuspendSlot(int)] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_FindSyncingStrings(int)] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #132 setup
LOAD D2 0; for() #132 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 1997 ==; for() #132 TestFail?
LOAD D2 0; for() #132 Body Start
MULTV D2 24
ADDV D2 1
STORE D2 0.0003
SETR D2 GD5; if() #450 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1993 ==; Test 'if'
LOAD D2 0; if() #450 Body Start
MULTV D2 24
ADDV D2 2
STORE D2 0.0002
SETR D2 GD5; if() #451 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 1993 ==; Test 'if'
SETV D2 1; if() #451 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0001; if() #451 Body End
LOAD D2 0; if() #450 Body End AND for() #132 Body End AND for() #132 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 1939; for() #132 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[bool __Tango_FindSyncingStrings(int)] Body End
PUSHARGSV 0 0.0002; Func[void Tango_Update1()] Body Start
SETR D4 SP2
STOREV 0 0.0001
PUSHV 6; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
PUSHR D4
CALLFUNC 0.2151; UsrFunc[void __Tango_CheckScreenChange()] Call
PEEK D4
CALLFUNC 0.1041; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2018 ==; Test 'if'
PUSHR D4; if() #402 Body Start
CALLFUNC 0.2220; UsrFunc[void __Tango_UpdateMenu()] Call
POP D4
SETV D2 1
STORE D2 0.0001; if() #402 Body End
SETR D2 GD2; if() #403 Test
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 8
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2046 ==; Test 'if'
PUSHR D4; if() #97 Test AND if() #403 Body Start
CALLFUNC 0.2372; UsrFunc[bool __Tango_InputMenu()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2036 ==; Test 'if'
PUSHR D4; if() #97 Body Start
CALLFUNC 0.0188; UsrFunc[void __Tango_UnpressMenu()] Call
POP D4
GOTO 2046; if() #97 Body End
SETR D2 GD2; if() #97 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ANDV D2 -9
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #97 Else End
STOREV 0 0; if() #403 Body End AND for() #115 setup
LOAD D2 0; for() #115 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2063 ==; for() #115 TestFail?
PUSHR D4; for() #115 Body Start
LOAD D2 0; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2383; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
CALLFUNC 0.2480; UsrFunc[void __Tango_UpdateCurrentSlot()] Call
POP D4; for() #115 Body End
LOAD D2 0; for() #115 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2047; for() #115 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
STORE D2 0
LOAD D2 0; if() #404 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2086 ==; Test 'if'
PUSHR D4; if() #98 Test AND if() #404 Body Start
CALLFUNC 0.2764; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2083 ==; Test 'if'
PUSHR D4; if() #98 Body Start
CALLFUNC 0.2767; UsrFunc[void __Tango_UnpressSpeedup()] Call
POP D4
GOTO 2086; if() #98 Body End
LOAD D2 0; if() #98 Else Start
ANDV D2 -2
STORE D2 0; if() #98 Else End
LOAD D2 0; if() #404 Body End AND if() #405 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2104 ==; Test 'if'
PUSHR D4; if() #99 Test AND if() #405 Body Start
CALLFUNC 0.2779; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2101 ==; Test 'if'
PUSHR D4; if() #99 Body Start
CALLFUNC 0.2782; UsrFunc[void __Tango_UnpressSuperSpeed()] Call
POP D4
GOTO 2104; if() #99 Body End
LOAD D2 0; if() #99 Else Start
ANDV D2 -3
STORE D2 0; if() #99 Else End
LOAD D2 0; if() #405 Body End AND if() #406 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2122 ==; Test 'if'
PUSHR D4; if() #100 Test AND if() #406 Body Start
CALLFUNC 0.2794; UsrFunc[bool __Tango_InputAdvance()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2119 ==; Test 'if'
PUSHR D4; if() #100 Body Start
CALLFUNC 0.2797; UsrFunc[void __Tango_UnpressAdvance()] Call
POP D4
GOTO 2122; if() #100 Body End
LOAD D2 0; if() #100 Else Start
ANDV D2 -5
STORE D2 0; if() #100 Else End
LOAD D2 0; if() #406 Body End AND if() #407 Test
ANDV D2 16
COMPAREV D2 0
GOTOCMP 2131 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 2131 !=
SETV D2 0
GOTO 2132
SETV D2 1
COMPAREV D2 0
GOTOCMP 2140 ==; Test 'if'
PUSHR D4; if() #407 Body Start
CALLFUNC 0.2809; UsrFunc[void __Tango_UnpressAll()] Call
POP D4
LOAD D2 0
ANDV D2 -17
STORE D2 0; if() #407 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void Tango_Update1()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_CheckScreenChange()] Body Start
SETR D4 SP2
SETR D2 CURDMAP
LSHIFTV D2 8
PUSHR D2
SETR D2 CURDSCR
POP D3
ADDR D2 D3
STORE D2 0.0003
SETR D2 GD2; if() #430 Test
PUSHR D2
POP D0
READPODARRAYV D2 9
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2218 ==; Test 'if'
LOAD D2 0.0003; if() #430 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 9 D2
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0 0; for() #127 setup
LOAD D2 0; for() #127 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2218 ==; for() #127 TestFail?
PUSHR D4; for() #127 Body Start
LOAD D2 0; UsrFunc[int __Tango_GetSlotState(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotState(int)] Params End
CALLFUNC 0.3893; UsrFunc[int __Tango_GetSlotState(int)] Call
POP D4
STORE D2 0.0002
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetSlotFlags(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetSlotFlags(int)] Params End
CALLFUNC 0.3906; UsrFunc[int __Tango_GetSlotFlags(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #431 Test
ANDV D2 8
COMPAREV D2 0
GOTOCMP 2206 ==
LOAD D2 0.0002
COMPAREV D2 4
GOTOCMP 2206 ==
SETV D2 0
GOTO 2207
SETV D2 1
COMPAREV D2 0
GOTOCMP 2214 ==; Test 'if'
PUSHR D4; if() #431 Body Start
LOAD D2 0; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0698; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #431 Body End
LOAD D2 0; for() #127 Body End AND for() #127 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 2180; for() #127 End
POPARGS D5 0.0004; if() #430 Body End
RETURNFUNC; Func[void __Tango_CheckScreenChange()] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_UpdateMenu()] Body Start
SETR D4 SP2
SETR D2 GD2; if() #624 Test
PUSHR D2
POP D0
READPODARRAYV D2 10
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2236 ==; Test 'if'
SETV D2 0; if() #624 Body Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2; if() #624 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0002
STOREV 0 0.0001
PUSHR D4
CALLFUNC 0.1184; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
STORE D2 0
SETR D2 INPUTPRESSUP; if() #323 Test
COMPAREV D2 0
GOTOCMP 2255 ==; Test 'if'
PUSHR D4; if() #323 Body Start
PUSHV 0; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6317; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2284; if() #323 Body End
SETR D2 INPUTPRESSDOWN; if() #324 Test AND if() #323 Else Start
COMPAREV D2 0
GOTOCMP 2264 ==; Test 'if'
PUSHR D4; if() #324 Body Start
PUSHV 1; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6317; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2284; if() #324 Body End
SETR D2 INPUTPRESSLEFT; if() #325 Test AND if() #324 Else Start
COMPAREV D2 0
GOTOCMP 2273 ==; Test 'if'
PUSHR D4; if() #325 Body Start
PUSHV 2; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6317; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2284; if() #325 Body End
SETR D2 INPUTPRESSRIGHT; if() #326 Test AND if() #325 Else Start
COMPAREV D2 0
GOTOCMP 2282 ==; Test 'if'
PUSHR D4; if() #326 Body Start
PUSHV 3; UsrFunc[int __Tango_GetNextMenuPos(int)] Params
CALLFUNC 0.6317; UsrFunc[int __Tango_GetNextMenuPos(int)] Call
POP D4
STORE D2 0.0001
GOTO 2284; if() #326 Body End
LOAD D2 0.0002; if() #326 Else Start
STORE D2 0.0001; if() #326 Else End
PUSHR D4; if() #325 Else End AND if() #324 Else End AND if() #323 Else End AND if() #327 Test
CALLFUNC 0.9311; UsrFunc[bool __Tango_PressMenuSelect()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2296 ==
PUSHR D4
CALLFUNC 0.1184; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2296 ==
SETV D2 1
GOTO 2297
SETV D2 0
COMPAREV D2 0
GOTOCMP 2305 ==; Test 'if'
PUSHR D4; if() #327 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_MenuSelect(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_MenuSelect(int)] Params End
CALLFUNC 0.7727; UsrFunc[void __Tango_MenuSelect(int)] Call
POP D4
GOTO 2370; if() #327 Body End
SETR D2 GD2; if() #328 Test AND if() #327 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 1
COMPAREV D2 0
GOTOCMP 2319 ==
PUSHR D4
CALLFUNC 0.9308; UsrFunc[bool __Tango_PressMenuCancel()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2319 ==
SETV D2 1
GOTO 2320
SETV D2 0
COMPAREV D2 0
GOTOCMP 2326 ==; Test 'if'
PUSHR D4; if() #328 Body Start
CALLFUNC 0.1049; UsrFunc[void __Tango_MenuCancel()] Call
POP D4
GOTO 2370; if() #328 Body End
LOAD D2 0.0001; if() #329 Test AND if() #328 Else Start
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2367 ==; Test 'if'
PUSHR D4; if() #329 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Params End
CALLFUNC 0.0210; UsrFunc[void __Tango_ScrollToMenuCursor(int)] Call
POP D4
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 20; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
LOAD D2 0.0001
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
LOAD D2 0; if() #330 Test
COMPAREV D2 0
GOTOCMP 2360 ==; Test 'if'
PUSHR D4; if() #330 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0301; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4
GOTO 2370; if() #330 Body End
PUSHR D4; if() #330 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetCursorMovement(int, int)] Params End
CALLFUNC 0.0301; UsrFunc[void __Tango_SetCursorMovement(int, int)] Call
POP D4; if() #330 Else End
GOTO 2370; if() #329 Body End
PUSHR D4; if() #329 Else Start
CALLFUNC 1.2454; UsrFunc[void __Tango_UpdateCursorMovement()] Call
POP D4; if() #329 Else End
POPARGS D5 0.0003; if() #328 Else End AND if() #327 Else End
RETURNFUNC; Func[void __Tango_UpdateMenu()] Body End
SETR D4 SP2; Func[bool __Tango_InputMenu()] Body Start
SETR D2 INPUTA; return Start
COMPAREV D2 0
GOTOCMP 2381 !=
SETR D2 INPUTB
COMPAREV D2 0
GOTOCMP 2381 !=
SETV D2 0
GOTO 2382
SETV D2 1
RETURNFUNC; return End AND Func[bool __Tango_InputMenu()] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_SetCurrentSlot(int)] Body Start
SETR D4 SP2
LOAD D2 0.0004
MULTV D2 7
STORE D2 0.0003
LOAD D2 0.0004
MULTV D2 24
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001
MULTV D2 48
STORE D2 0
LOAD D2 0.0004
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 2 D2
LOAD D2 0.0003
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 3 D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 4 D2
LOAD D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
LOAD D2 0.0001; if() #294 Test
COMPAREV D2 -10
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2472 ==; Test 'if'
SETR D2 GD3; if() #294 Body Start
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2
GOTO 2478; if() #294 Body End
SETV D2 -10; if() #294 Else Start
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 6 D2; if() #294 Else End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_SetCurrentSlot(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_UpdateCurrentSlot()] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0004; if() #310 Test
COMPAREV D2 0
GOTOCMP 2500 ==
LOAD D2 0.0004
COMPAREV D2 4
GOTOCMP 2500 ==
SETV D2 0
GOTO 2501
SETV D2 1
COMPAREV D2 0
GOTOCMP 2505 ==; Test 'if'
GOTO 2762; return (Void) AND if() #310 Body Start
GOTO 2524; if() #310 Body End
LOAD D2 0.0004; if() #606 Test AND if() #310 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2524 ==; Test 'if'
SETV D2 1; if() #606 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2762; return (Void) AND if() #606 Body End
PUSHR D4; if() #310 Else End
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0003
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
ADDV D2 19
STORE D2 0.0001
LOAD D2 0.0003; if() #607 Test
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2583 ==; Test 'if'
SETR D2 GD2; if() #607 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #311 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2576 ==; Test 'if'
PUSHR D4; unless() #608 Test AND if() #311 Body Start
CALLFUNC 0.2764; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2583 !=; Test 'unless'
SETV D2 0; unless() #608 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #608 Body End
GOTO 2583; if() #311 Body End
PUSHR D4; if() #609 Test AND if() #311 Else Start
CALLFUNC 0.2764; UsrFunc[bool __Tango_InputSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2583 ==; Test 'if'
SETV D2 1; if() #609 Body Start
STORE D2 0.0002; if() #609 Body End
LOAD D2 0.0003; if() #311 Else End AND if() #607 Body End AND if() #610 Test
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2630 ==; Test 'if'
SETR D2 GD2; if() #610 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD5; if() #312 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2623 ==; Test 'if'
PUSHR D4; unless() #611 Test AND if() #312 Body Start
CALLFUNC 0.2779; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2630 !=; Test 'unless'
SETV D2 0; unless() #611 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; unless() #611 Body End
GOTO 2630; if() #312 Body End
PUSHR D4; if() #612 Test AND if() #312 Else Start
CALLFUNC 0.2779; UsrFunc[bool __Tango_InputSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2630 ==; Test 'if'
SETV D2 2; if() #612 Body Start
STORE D2 0.0002; if() #612 Body End
LOAD D2 0.0003; if() #312 Else End AND if() #610 Body End AND if() #613 Test
ANDV D2 64
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2638 ==; Test 'if'
SETV D2 2; if() #613 Body Start
STORE D2 0.0002; if() #613 Body End
LOAD D2 0.0003; if() #614 Test
ANDV D2 16
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 2654 ==; Test 'if'
SETR D2 GD2; if() #614 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 16
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2; if() #614 Body End
LOAD D2 0.0004; if() #615 Test
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2728 ==; Test 'if'
PUSHR D4; if() #615 Body Start
PUSHV 2; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
PUSHR D4; if() #313 Test
LOAD D2 0; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9297; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 2721 ==; Test 'if'
SETV D2 1; if() #313 Body Start
STORE D2 0.0004
PUSHR D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHARGSV 1 0.0002; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start AND UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #314 Test
CALLFUNC 0.0559; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2706 ==; Test 'if'
SETV D2 1; if() #314 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 2728; if() #314 Body End
PUSHR D4; if() #616 Test AND if() #314 Else Start
CALLFUNC 0.0562; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 2728 ==; Test 'if'
SETV D2 2; if() #616 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #616 Body End
GOTO 2728; if() #314 Else End AND if() #313 Body End
PUSHR D4; if() #313 Else Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #313 Else End
LOAD D2 0.0004; if() #615 Body End AND if() #315 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2739 ==; Test 'if'
PUSHR D4; if() #315 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateActiveSlot(int)] Params End
CALLFUNC 1.2095; UsrFunc[void __Tango_UpdateActiveSlot(int)] Call
POP D4
GOTO 2762; if() #315 Body End
LOAD D2 0.0004; if() #316 Test AND if() #315 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2750 ==; Test 'if'
PUSHR D4; if() #316 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_UpdateAdvancing(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_UpdateAdvancing(int)] Params End
CALLFUNC 1.2167; UsrFunc[void __Tango_UpdateAdvancing(int)] Call
POP D4
GOTO 2762; if() #316 Body End
LOAD D2 0.0004; if() #617 Test AND if() #316 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 2762 ==; Test 'if'
PUSHR D4; if() #617 Body Start
LOAD D2 0.0003; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Params End
CALLFUNC 1.2304; UsrFunc[void __Tango_UpdateFinishedSlot(int, int)] Call
POP D4; if() #617 Body End
POPARGS D5 0.0005; if() #316 Else End AND if() #315 Else End
RETURNFUNC; Func[void __Tango_UpdateCurrentSlot()] Body End
SETR D4 SP2; Func[bool __Tango_InputSpeedup()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSpeedup()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSpeedup()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressSpeedup()] Body End
SETR D4 SP2; Func[bool __Tango_InputSuperSpeed()] Body Start
SETR D2 INPUTB; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputSuperSpeed()] Body End
SETR D4 SP2; Func[void __Tango_UnpressSuperSpeed()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
RETURNFUNC; Func[void __Tango_UnpressSuperSpeed()] Body End
SETR D4 SP2; Func[bool __Tango_InputAdvance()] Body Start
SETR D2 INPUTA; return Start
RETURNFUNC; return End AND Func[bool __Tango_InputAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAdvance()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
RETURNFUNC; Func[void __Tango_UnpressAdvance()] Body End
SETR D4 SP2; Func[void __Tango_UnpressAll()] Body Start
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSUP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSDOWN D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSLEFT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSRIGHT D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSA D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSB D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSL D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSR D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX1 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX2 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX3 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSEX4 D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSSTART D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTMAP D2
SETV D2 0
PUSHR D2
POP D2
CASTBOOLI D2
SETR INPUTPRESSMAP D2
RETURNFUNC; Func[void __Tango_UnpressAll()] Body End
PUSHARGSV 0 0.0004; Func[void Tango_Update2()] Body Start
SETR D4 SP2
PUSHV -1; InlineFunc[void screendata::SetRenderTarget(int)] Params
SETRENDERTARGET; InlineFunc[void screendata::SetRenderTarget(int)] Body Start
POP D3; InlineFunc[void screendata::SetRenderTarget(int)] Body End
STOREV 0 0.0003
STOREV 0 0.0002; for() #116 setup
LOAD D2 0.0002; for() #116 LoopTest
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 2990 ==; for() #116 TestFail?
PUSHR D4; for() #116 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_SetCurrentSlot(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_SetCurrentSlot(int)] Params End
CALLFUNC 0.2383; UsrFunc[void __Tango_SetCurrentSlot(int)] Call
PEEK D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0003
LOAD D2 0.0003; if() #408 Test
COMPAREV D2 0
GOTOCMP 2980 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 2980 ==
SETV D2 1
GOTO 2981
SETV D2 0
COMPAREV D2 0
GOTOCMP 2986 ==; Test 'if'
PUSHR D4; if() #408 Body Start
CALLFUNC 0.3058; UsrFunc[void __Tango_DrawToScreen()] Call
POP D4; if() #408 Body End
LOAD D2 0.0002; for() #116 Body End AND for() #116 LoopIncrement
ADDV D2 1
STORE D2 0.0002
GOTO 2958; for() #116 End
PUSHR D4; if() #409 Test
CALLFUNC 0.1041; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3003 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
COMPAREV D2 0
GOTOCMP 3003 >=
SETV D2 1
GOTO 3004
SETV D2 0
COMPAREV D2 0
GOTOCMP 3009 ==; Test 'if'
PUSHR D4; if() #409 Body Start
CALLFUNC 0.3225; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #409 Body End
SETR D2 GD2; if() #410 Test
PUSHR D2
POP D0
READPODARRAYV D2 13
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3041 ==; Test 'if'
ALLOCATEMEMV D2 22 0; if() #410 Body Start
WRITEPODSTRING D2 "tango.zh error logged"
STORE D2 0
PUSHV 6; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params Start
PUSHARGSV 0 0.0003
PUSHV 1
PUSHARGSV 0 0.0002
LOAD D2 0
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Params End
DRAWSTRINGR; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body Start
POPARGS D5 0.0009; InlineFunc[void screendata::DrawString(int, int, int, int, int, int, int, char32[], int)] Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 13
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 13 D2
LOAD D3 0
DEALLOCATEMEMR D3; if() #410 Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void Tango_Update2()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotData(int)] Body Start
SETR D2 GD5; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotData(int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_DrawToScreen()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0004
SETR D2 GD3
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 6
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0005
ADDV D2 7
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
PUSHR D4
CALLFUNC 0.1041; UsrFunc[bool Tango_MenuIsActive()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3109 ==
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 24
POP D3
COMPARER D3 D2
GOTOCMP 3109 !=
SETV D2 1
GOTO 3110
SETV D2 0
STORE D2 0
LOAD D2 0.0003; if() #129 Test
COMPAREV D2 1
GOTOCMP 3119 ==
LOAD D2 0.0003
COMPAREV D2 2
GOTOCMP 3119 ==
SETV D2 0
GOTO 3120
SETV D2 1
COMPAREV D2 0
GOTOCMP 3132 ==; Test 'if'
PUSHR D4; if() #129 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Params End
CALLFUNC 0.4035; UsrFunc[void __Tango_DrawColorBackdrop(int, int, int)] Call
POP D4
GOTO 3193; if() #129 Body End
LOAD D2 0.0003; if() #130 Test AND if() #129 Else Start
COMPAREV D2 3
GOTOCMP 3140 ==
LOAD D2 0.0003
COMPAREV D2 4
GOTOCMP 3140 ==
SETV D2 0
GOTO 3141
SETV D2 1
COMPAREV D2 0
GOTOCMP 3153 ==; Test 'if'
PUSHR D4; if() #130 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Params End
CALLFUNC 0.5036; UsrFunc[void __Tango_DrawTileBackdrop(int, int, int)] Call
POP D4
GOTO 3193; if() #130 Body End
LOAD D2 0.0003; if() #131 Test AND if() #130 Else Start
COMPAREV D2 5
GOTOCMP 3161 ==
LOAD D2 0.0003
COMPAREV D2 6
GOTOCMP 3161 ==
SETV D2 0
GOTO 3162
SETV D2 1
COMPAREV D2 0
GOTOCMP 3174 ==; Test 'if'
PUSHR D4; if() #131 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Params End
CALLFUNC 0.4109; UsrFunc[void __Tango_DrawComboBackdrop(int, int, int)] Call
POP D4
GOTO 3193; if() #131 Body End
LOAD D2 0.0003; if() #444 Test AND if() #131 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3193 ==; Test 'if'
PUSHR D4; if() #444 Body Start
SETR D2 GD3; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Params End
CALLFUNC 0.4168; UsrFunc[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Call
POP D4; if() #444 Body End
LOAD D2 0; if() #131 Else End AND if() #130 Else End AND if() #129 Else End AND if() #445 Test
COMPAREV D2 0
GOTOCMP 3199 ==; Test 'if'
PUSHR D4; if() #445 Body Start
CALLFUNC 0.3225; UsrFunc[void __Tango_DrawMenuCursor()] Call
POP D4; if() #445 Body End
PUSHR D4
LOAD D2 0.0005; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferText(int, int, int, int)] Params End
CALLFUNC 0.5095; UsrFunc[void __Tango_TransferText(int, int, int, int)] Call
POP D4
LOAD D2 0; if() #446 Test
COMPAREV D2 0
GOTOCMP 3220 ==; Test 'if'
PUSHR D4; if() #446 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Params End
CALLFUNC 0.4727; UsrFunc[void __Tango_DrawMenuScrollIndicators(int, int)] Call
POP D4; if() #446 Body End
PUSHR D4
CALLFUNC 0.4906; UsrFunc[void __Tango_DrawMoreIcon()] Call
POP D4
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_DrawToScreen()] Body End
SETR D4 SP2; Func[void __Tango_DrawMenuCursor()] Body Start
PUSHR D4; unless() #437 Test
CALLFUNC 0.1184; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 3268 ==; Test 'unless' AND return (Void) AND unless() #437 Body
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 16
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 18
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 19
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 17
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
PUSHV 128; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
RETURNFUNC; Func[void __Tango_DrawMenuCursor()] Body End
PUSHV 0; Func[int __Tango_AddPadding(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
LOAD D2 0.0003; if() #113 Test
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3280 ==; Test 'if'
SETV D2 12; if() #113 Body Start
STORE D2 0
GOTO 3303; if() #113 Body End
LOAD D2 0.0003; if() #114 Test AND if() #113 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3288 ==; Test 'if'
SETV D2 8; if() #114 Body Start
STORE D2 0
GOTO 3303; if() #114 Body End
LOAD D2 0.0003; if() #115 Test AND if() #114 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3296 ==; Test 'if'
SETV D2 9; if() #115 Body Start
STORE D2 0
GOTO 3303; if() #115 Body End
LOAD D2 0.0003; if() #427 Test AND if() #115 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3303 ==; Test 'if'
SETV D2 16; if() #427 Body Start
STORE D2 0; if() #427 Body End
LOAD D2 0; if() #115 Else End AND if() #114 Else End AND if() #113 Else End
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0
LOAD D2 0; for() #124 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3333 ==; for() #124 TestFail?
PUSHR D4; for() #124 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001
ADDV D2 1
STORE D2 0.0001; for() #124 Body End
LOAD D2 0; for() #124 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 3315; for() #124 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_AddPadding(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_SetChar(int, int)] Body Start
LOAD D2 0.0001; if() #592 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 3353 ==; Test 'if'
PUSHR D4; if() #592 Body Start
PUSHV 103; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4
GOTO 3362; return (Void) AND if() #592 Body End
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetChar(int, int)] Body End
PUSHV 0; Func[void __Tango_AppendMessage(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4; until() #5 Test
PUSHR D2
LOAD D2 0.0002
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 3387 !=
PUSHR D4
SETR D2 GD4; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3413; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 3387 !=
SETV D2 1
GOTO 3388
SETV D2 0
COMPAREV D2 0
GOTOCMP 3394 !=; Test 'until'
LOAD D2 0.0002; until() #5 Body Start
ADDV D2 1
STORE D2 0.0002; until() #5 Body End
GOTO 3366; until() #5 End
ALLOCATEMEMV D2 256 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[void Game::GetMessage(int, char32[])] Params Start
PUSHR D2
LOAD D2 0; InlineFunc[void Game::GetMessage(int, char32[])] Params End
POP D3; InlineFunc[void Game::GetMessage(int, char32[])] Body Start
GETMESSAGE D3 D2; InlineFunc[void Game::GetMessage(int, char32[])] Body End
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Params End
CALLFUNC 0.3452; UsrFunc[void __Tango_LoadIntoBuffer(char32[], int, int)] Call
POP D4
LOAD D3 0
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_AppendMessage(int, int)] Body End
SETR D4 SP2; Func[bool __Tango_IsSpecialDataMarker(int)] Body Start
LOAD D2 0; if() #487 Test
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3421 ==; Test 'if'
SETV D2 1; return Start AND if() #487 Body Start
GOTO 3450; return End AND if() #487 Body End
LOAD D2 0; if() #488 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3428 ==; Test 'if'
SETV D2 1; return Start AND if() #488 Body Start
GOTO 3450; return End AND if() #488 Body End
LOAD D2 0; if() #489 Test
COMPAREV D2 -100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3435 ==; Test 'if'
SETV D2 1; return Start AND if() #489 Body Start
GOTO 3450; return End AND if() #489 Body End
LOAD D2 0; if() #490 Test
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3442 ==; Test 'if'
SETV D2 1; return Start AND if() #490 Body Start
GOTO 3450; return End AND if() #490 Body End
LOAD D2 0; if() #491 Test
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3449 ==; Test 'if'
SETV D2 1; return Start AND if() #491 Body Start
GOTO 3450; return End AND if() #491 Body End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_IsSpecialDataMarker(int)] Body End
PUSHARGSV 0 0.0005; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body Start
SETR D4 SP2
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_GetStringEnd(char32[])] Params Start
PUSHR D2; UsrFunc[int __Tango_GetStringEnd(char32[])] Params End
CALLFUNC 0.6811; UsrFunc[int __Tango_GetStringEnd(char32[])] Call
POP D4
STORE D2 0.0004
ALLOCATEMEMV D2 2 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0006; while() #10 Test
PUSHR D2
LOAD D2 0.0004
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 3743 ==; Test 'while'
LOAD D2 0.0007; while() #10 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #176 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3496 ==; Test 'if'
LOAD D2 0.0007; if() #176 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I==
STORE D2 0.0001
GOTO 3498; if() #176 Body End
SETV D2 0; if() #176 Else Start
STORE D2 0.0001; if() #176 Else End
LOAD D2 0.0002; if() #177 Test
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3579 ==; Test 'if'
LOAD D2 0.0001; if() #178 Test AND if() #177 Body Start
COMPAREV D2 0
GOTOCMP 3519 ==; Test 'if'
PUSHR D4; if() #178 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 64; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 3464; if() #178 Body End
PUSHR D4; if() #492 Test AND if() #178 Else Start
LOAD D2 0.0007; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7255; UsrFunc[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3540 ==; Test 'if'
PUSHR D4; if() #492 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3743; break 1; AND if() #492 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
SETR D2 GD4; if() #493 Test
PUSHR D2
LOAD D2 0.0005
SUBV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3464 ==; Test 'if'
LOAD D2 0.0005; if() #179 Test AND if() #493 Body Start
COMPAREV D2 2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 3567 ==; Test 'if'
GOTO 3743; break 1; AND if() #179 Body Start
GOTO 3464; if() #179 Body End
SETR D2 GD4; if() #494 Test AND if() #179 Else Start
PUSHR D2
LOAD D2 0.0005
SUBV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -100
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3464 ==; Test 'if'
GOTO 3743; break 1; AND if() #494 Body
GOTO 3464; if() #179 Else End AND if() #493 Body End AND if() #178 Else End AND if() #177 Body End
LOAD D2 0.0002; if() #180 Test AND if() #177 Else Start
COMPAREV D2 0
GOTOCMP 3590 <=
LOAD D2 0.0002
COMPAREV D2 32
GOTOCMP 3590 >=
LOAD D2 0.0002
COMPAREV D2 26
GOTOCMP 3590 ==
SETV D2 1
GOTO 3591
SETV D2 0
COMPAREV D2 0
GOTOCMP 3624 ==; Test 'if'
PUSHR D4; if() #495 Test AND if() #180 Body Start
LOAD D2 0.0007; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Params End
CALLFUNC 0.7544; UsrFunc[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 3613 ==; Test 'if'
PUSHR D4; if() #495 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 3743; break 1; AND if() #495 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0006
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0005
GOTO 3464; if() #180 Body End
LOAD D2 0.0001; if() #496 Test AND if() #180 Else Start
COMPAREV D2 0
GOTOCMP 3629 ==
SETV D2 1
GOTO 3630
SETV D2 0
COMPAREV D2 0
GOTOCMP 3724 ==; Test 'if'
STOREV 0 0; if() #496 Body Start
LOAD D2 0.0002; if() #181 Test
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3641 ==; Test 'if'
SETV D2 1; if() #181 Body Start
STORE D2 0
GOTO 3684; if() #181 Body End
LOAD D2 0.0002; if() #182 Test AND if() #181 Else Start
COMPAREV D2 91
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3649 ==; Test 'if'
SETV D2 2; if() #182 Body Start
STORE D2 0
GOTO 3684; if() #182 Body End
LOAD D2 0.0002; if() #183 Test AND if() #182 Else Start
COMPAREV D2 123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3657 ==; Test 'if'
SETV D2 3; if() #183 Body Start
STORE D2 0
GOTO 3684; if() #183 Body End
LOAD D2 0.0002; if() #184 Test AND if() #183 Else Start
COMPAREV D2 60
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3665 ==; Test 'if'
SETV D2 4; if() #184 Body Start
STORE D2 0
GOTO 3684; if() #184 Body End
LOAD D2 0.0002; if() #497 Test AND if() #184 Else Start
COMPAREV D2 41
GOTOCMP 3679 ==
LOAD D2 0.0002
COMPAREV D2 93
GOTOCMP 3679 ==
LOAD D2 0.0002
COMPAREV D2 125
GOTOCMP 3679 ==
LOAD D2 0.0002
COMPAREV D2 62
GOTOCMP 3679 ==
SETV D2 0
GOTO 3680
SETV D2 1
COMPAREV D2 0
GOTOCMP 3684 ==; Test 'if'
SETV D2 -1; if() #497 Body Start
STORE D2 0; if() #497 Body End
LOAD D2 0; if() #184 Else End AND if() #183 Else End AND if() #182 Else End AND if() #181 Else End AND if() #498 Test
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 3724 ==; Test 'if'
LOAD D2 0; if() #185 Test AND if() #498 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 3711 ==; Test 'if'
PUSHR D4; if() #185 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1000; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
PEEK D4
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 2
STORE D2 0.0005
GOTO 3720; if() #185 Body End
PUSHR D4; if() #185 Else Start
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -1100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #185 Else End
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006
GOTO 3464; continue 1; AND if() #498 Body End
PUSHR D4; if() #496 Body End
LOAD D2 0.0005; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0002; if() #499 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3743 !=; Test 'if' AND break 1; AND if() #499 Body
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #180 Else End
GOTO 3464; if() #177 Else End AND while() #10 Body End AND while() #10 End
LOAD D2 0.0005; InlineFunc[int Min(int, int)] Params Start
PUSHVARGR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
PUSHVARGR D2; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0005
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_LoadIntoBuffer(char32[], int, int)] Body End
PUSHV 0; Func[void __Tango_BeginAdvancing()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
SETV D2 3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POP D5
RETURNFUNC; Func[void __Tango_BeginAdvancing()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrStyleData(int)] Body Start
SETR D2 GD3; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrStyleData(int)] Body End
SETR D4 SP2; Func[int __Tango_BoolToInt(bool)] Body Start
LOAD D2 0; if() #116 Test
COMPAREV D2 0
GOTOCMP 3848 ==; Test 'if'
SETV D2 1; return Start AND if() #116 Body Start
GOTO 3849; return End AND if() #116 Body End
SETV D2 0; return Start AND if() #116 Else Start
POP D5; return End AND if() #116 Else End
RETURNFUNC; Func[int __Tango_BoolToInt(bool)] Body End
SETR D4 SP2; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3871; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_CharacterWillFit(char32, int[], int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetCharacterWidth(char32, int[])] Body Start
LOAD D2 0; if() #141 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3885 ==; Test 'if'
LOAD D2 0; return Start AND if() #141 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 6
GOTO 3891; return End AND if() #141 Body End
LOAD D2 0; return Start AND if() #141 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 -26
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #141 Else End
RETURNFUNC; Func[int __Tango_GetCharacterWidth(char32, int[])] Body End
PUSHV 0; Func[int __Tango_GetSlotState(int)] Body Start
SETR D4 SP2
LOAD D2 0.0001
MULTV D2 24
STORE D2 0
SETR D2 GD5; return Start
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetSlotState(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetSlotFlags(int)] Body Start
SETR D4 SP2
LOAD D2 0.0002
MULTV D2 24
STORE D2 0.0001
SETR D2 GD5; if() #479 Test
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -10
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3922 ==; Test 'if'
SETV D2 0; return Start AND if() #479 Body Start
GOTO 3935; return End AND if() #479 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
MULTV D2 48
STORE D2 0
SETR D2 GD3; return Start
PUSHR D2
LOAD D2 0
ADDV D2 35
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetSlotFlags(int)] Body End
SETR D4 SP2; Func[void __Tango_ClearAlternateColor()] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV -1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_ClearAlternateColor()] Body End
SETR D4 SP2; Func[void __Tango_SetCurrSlotData(int, int)] Body Start
LOAD D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_SetCurrSlotData(int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_CountDown(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
LOAD D2 0.0002; if() #432 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 3987 ==; Test 'if'
LOAD D2 0; if() #432 Body Start
MULTV D2 5
STORE D2 0; if() #432 Body End
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params Start
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_CountDown(int)] Body End
SETR D4 SP2; Func[void __Tango_Delete(int, int)] Body Start
LOAD D2 0.0001; for() #128 LoopTest
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4033 ==; for() #128 TestFail?
SETV D2 -1; for() #128 Body Start
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #128 Body End
LOAD D2 0.0001; for() #128 LoopIncrement
ADDV D2 1
STORE D2 0.0001
GOTO 4012; for() #128 End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_Delete(int, int)] Body End
PUSHV 0; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #119 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4050 ==; Test 'if'
SETV D2 128; if() #119 Body Start
STORE D2 0
GOTO 4052; if() #119 Body End
SETV D2 64; if() #119 Else Start
STORE D2 0; if() #119 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
ADDV D2 1
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawColorBackdrop(int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #120 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4124 ==; Test 'if'
SETV D2 128; if() #120 Body Start
STORE D2 0
GOTO 4126; if() #120 Body End
SETV D2 64; if() #120 Else Start
STORE D2 0; if() #120 Else End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawComboBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0; for() #129 setup
LOAD D2 0.0004; for() #129 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4519 ==; for() #129 TestFail?
LOAD D2 0.0004; if() #121 Test AND for() #129 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 4
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4341 ==; Test 'if'
LOAD D2 0.0004; if() #122 Test AND if() #121 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
GOTOCMP 4206 ==
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 4206 ==
SETV D2 0
GOTO 4207
SETV D2 1
COMPAREV D2 0
GOTOCMP 4212 ==; Test 'if'
SETV D2 128; if() #122 Body Start
STORE D2 0.0001
GOTO 4214; if() #122 Body End
SETV D2 64; if() #122 Else Start
STORE D2 0.0001; if() #122 Else End
LOAD D2 0.0004; if() #123 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4282 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #123 Body Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4515; if() #123 Body End
PUSHV 6; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start AND if() #123 Else Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0005
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWCOMBOR; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0016; InlineFunc[void screendata::DrawCombo(int, int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End AND if() #123 Else End
GOTO 4515; if() #121 Body End
LOAD D2 0.0004; if() #124 Test AND if() #121 Else Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 6
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4456 ==; Test 'if'
LOAD D2 0.0004; if() #125 Test AND if() #124 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4362 ==; Test 'if'
SETV D2 128; if() #125 Body Start
STORE D2 0.0001
GOTO 4364; if() #125 Body End
SETV D2 64; if() #125 Else Start
STORE D2 0.0001; if() #125 Else End
PUSHV 6; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
ADDV D2 1
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
MULTV D2 16
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
LOAD D2 0.0001
PUSHR D2; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
GOTO 4515; if() #124 Body End
PUSHR D4; if() #124 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Params End
CALLFUNC 0.4521; UsrFunc[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Call
POP D4; if() #124 Else End
LOAD D2 0; if() #121 Else End AND for() #129 Body End AND for() #129 LoopIncrement
ADDV D2 7
STORE D2 0
GOTO 4172; for() #129 End
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_DrawComplexBackdrop(untyped[], int, int)] Body End
PUSHV 0; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0007; if() #126 Test
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4542 ==; Test 'if'
LOAD D2 0.0002; if() #126 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1273; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
GOTO 4561; if() #126 Body End
LOAD D2 0.0007; if() #436 Test AND if() #126 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4561 ==; Test 'if'
LOAD D2 0.0002; if() #436 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Params End
CALLFUNC 0.1273; UsrFunc[int Tango_GetStringWidth(char32[], int[])] Call
POP D4
MULTV D2 0.5000
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002; if() #436 Body End
STOREV 0 0; if() #126 Else End AND for() #130 setup
LOAD D2 0.0006; for() #130 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4601 ==; for() #130 TestFail?
LOAD D2 0.0002; for() #130 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2
PUSHV 0
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 6; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4603; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0002; for() #130 Body End
LOAD D2 0; for() #130 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 4562; for() #130 End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawFrameText(int, int[], int[], int, int, int, int)] Body End
PUSHV 0; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0008; if() #550 Test
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 4718 ==; Test 'if'
LOAD D2 0.0007; if() #218 Test AND if() #550 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 4624 ==
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
GOTOCMP 4624 ==
SETV D2 0
GOTO 4625
SETV D2 1
COMPAREV D2 0
GOTOCMP 4693 ==; Test 'if'
LOAD D2 0.0008; if() #219 Test AND if() #218 Body Start
COMPAREV D2 255
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 4657 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params Start AND if() #219 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2
LOAD D2 0.0006
MULTV D2 16
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
PUSHARGSV -1 0.0003
LOAD D2 0.0008
PUSHR D2
PUSHV 128; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Params End
DRAWCHARR; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body Start
POPARGS D5 0.0010; InlineFunc[void screendata::DrawCharacter(int, int, int, int, int, int, int, int, char32, int)] Body End
GOTO 4718; if() #219 Body End
LOAD D2 0.0007; if() #551 Test AND if() #219 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4718 ==; Test 'if'
LOAD D2 0.0007; if() #551 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
SUBV D2 256
STORE D2 0
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #551 Body End
GOTO 4718; if() #219 Else End AND if() #218 Body End
LOAD D2 0.0001; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params Start AND if() #218 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0007
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0.0004
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0008
POP D3
ADDR D2 D3
ADDV D2 -33
PUSHR D2
LOAD D2 0.0006
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Params End
FASTTILER; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastTile(int, int, int, int, int, int)] Body End AND if() #218 Else End
PUSHR D4; if() #550 Body End AND return Start
LOAD D2 0.0008; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3871; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Body End
PUSHV 0; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0
PUSHR D4; if() #438 Test
CALLFUNC 0.4826; UsrFunc[bool __Tango_MenuCanScrollUp()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4779 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #438 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 25
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 26
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 23
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 24
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #438 Body End
PUSHR D4; if() #439 Test
CALLFUNC 0.4866; UsrFunc[bool __Tango_MenuCanScrollDown()] Call
POP D4
COMPAREV D2 0
GOTOCMP 4824 ==; Test 'if'
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start AND if() #439 Body Start
LOAD D2 0.0002
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 29
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 30
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 27
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0
ADDV D2 28
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End AND if() #439 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_DrawMenuScrollIndicators(int, int)] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollUp()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #143 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #143 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4863 ==; for() #143 TestFail?
SETR D2 GD2; if() #511 Test AND for() #143 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 4859 ==; Test 'if'
SETV D2 1; return Start AND if() #511 Body Start
GOTO 4864; return End AND if() #511 Body End
LOAD D2 0; for() #143 Body End AND for() #143 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4834; for() #143 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollUp()] Body End
PUSHV 0; Func[bool __Tango_MenuCanScrollDown()] Body Start
SETR D4 SP2
SETR D2 GD2; for() #142 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #142 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 4903 ==; for() #142 TestFail?
SETR D2 GD2; if() #510 Test AND for() #142 Body Start
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 26
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 4899 ==; Test 'if'
SETV D2 1; return Start AND if() #510 Body Start
GOTO 4904; return End AND if() #510 Body End
LOAD D2 0; for() #142 Body End AND for() #142 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 4874; for() #142 End
SETV D2 0; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_MenuCanScrollDown()] Body End
PUSHARGSV 0 0.0008; Func[void __Tango_DrawMoreIcon()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0007
STOREV 0 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 35
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD5; if() #127 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4939 ==; Test 'if'
SETV D2 1; if() #127 Body Start
STORE D2 0.0006
GOTO 4968; if() #127 Body End
SETR D2 GD5; if() #440 Test AND if() #127 Else Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 4968 ==; Test 'if'
LOAD D2 0.0004; if() #441 Test AND if() #440 Body Start
ANDV D2 128
COMPAREV D2 0
GOTOCMP 4963 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 4963 !=
SETV D2 0
GOTO 4964
SETV D2 1
COMPAREV D2 0
GOTOCMP 4968 ==; Test 'if'
SETV D2 1; if() #441 Body Start
STORE D2 0.0006; if() #441 Body End
LOAD D2 0.0006; if() #440 Body End AND if() #127 Else End AND unless() #442 Test
COMPAREV D2 0
GOTOCMP 5034 ==; Test 'unless' AND return (Void) AND unless() #442 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 31
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #443 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5034 !=; Test 'if' AND return (Void) AND if() #443 Body
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 32
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 33
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0001
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0005
ADDV D2 34
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0
PUSHV 6; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHV 128; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Params End
FASTCOMBOR; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body Start
POPARGS D5 0.0006; InlineFunc[void screendata::FastCombo(int, int, int, int, int, int)] Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_DrawMoreIcon()] Body End
PUSHV 0; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body Start
SETR D4 SP2
STOREV 0 0
SETR D2 GD3; if() #128 Test
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5051 ==; Test 'if'
SETV D2 128; if() #128 Body Start
STORE D2 0
GOTO 5053; if() #128 Body End
SETV D2 64; if() #128 Else Start
STORE D2 0; if() #128 Else End
PUSHV 6; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHARGSV -1 0.0002
PUSHARGSV 0 0.0004
PUSHV 1
LOAD D2 0
PUSHR D2; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
DRAWTILER; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0015; InlineFunc[void screendata::DrawTile(int, int, int, int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_DrawTileBackdrop(int, int, int)] Body End
PUSHARGSV 0 0.0007; Func[void __Tango_TransferText(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0006
LOAD D2 0.0008
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0007
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0002
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 8
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
SETR D2 GD3
PUSHR D2
LOAD D2 0.0009
ADDV D2 9
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #597 Test
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5183 ==; Test 'if'
LOAD D2 0; if() #597 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0; if() #597 Body End
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
SETR D2 GD3; if() #598 Test
PUSHR D2
LOAD D2 0.0009
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 256
COMPAREV D2 0
GOTOCMP 5223 ==
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
GOTOCMP 5223 ==
SETV D2 1
GOTO 5224
SETV D2 0
COMPAREV D2 0
GOTOCMP 5313 ==; Test 'if'
SETR D2 GD16; if() #598 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
POP D3
ADDR D2 D3
STORE D2 0.0005
LOAD D2 0.0004
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0006
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0010
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0004
PUSHARGSV 6 0.0002; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End AND if() #598 Body End
POPARGS D5 0.0011
RETURNFUNC; Func[void __Tango_TransferText(int, int, int, int)] Body End
SETR D4 SP2; Func[int __Tango_EatSpaces(char32[], int)] Body Start
LOAD D2 0.0001; while() #6 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5329 ==; Test 'while'
LOAD D2 0; while() #6 Body Start
ADDV D2 1
STORE D2 0; while() #6 Body End
GOTO 5316; while() #6 End
LOAD D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_EatSpaces(char32[], int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FindDestStart(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0002; unless() #447 Test
COMPAREV D2 0
GOTOCMP 5344 !=; Test 'unless'
LOAD D2 0.0001; return Start AND unless() #447 Body Start
GOTO 5373; return End AND unless() #447 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
SUBV D2 1
STORE D2 0
LOAD D2 0.0001; while() #7 Test
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
GOTOCMP 5365 >=
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
GOTOCMP 5365 ==
SETV D2 1
GOTO 5366
SETV D2 0
COMPAREV D2 0
GOTOCMP 5372 ==; Test 'while'
LOAD D2 0.0001; while() #7 Body Start
ADDV D2 1
STORE D2 0.0001; while() #7 Body End
GOTO 5350; while() #7 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindDestStart(bool)] Body End
PUSHV 0; Func[int __Tango_FindSrcStart(char32[], char32)] Body Start
SETR D4 SP2
LOAD D2 0.0001; if() #448 Test
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 5384 ==; Test 'if'
SETV D2 0; return Start AND if() #448 Body Start
GOTO 5414; return End AND if() #448 Body End
STOREV 1 0; for() #131 setup
LOAD D2 0.0002; for() #131 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 5413 ==; for() #131 TestFail?
LOAD D2 0.0002; if() #449 Test AND for() #131 Body Start
PUSHR D2
LOAD D2 0
SUBV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5409 ==; Test 'if'
LOAD D2 0; return Start AND if() #449 Body Start
GOTO 5414; return End AND if() #449 Body End
LOAD D2 0; for() #131 Body End AND for() #131 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5385; for() #131 End
SETV D2 0; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_FindSrcStart(char32[], char32)] Body End
PUSHARGSV 0 0.0006; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body Start
SETR D4 SP2
STOREV 0 0.0005
STOREV 100000 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0007; if() #452 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5439 ==; Test 'if'
SETV D2 45; if() #452 Body Start
PUSHR D2
LOAD D2 0.0008
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
SETV D2 1
STORE D2 0.0005
LOAD D2 0.0007
SUBV2 0 D2
STORE D2 0.0007; if() #452 Body End
STOREV 0 0; for() #133 setup
LOAD D2 0; for() #133 LoopTest
COMPAREV D2 10
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5574 ==; for() #133 TestFail?
LOAD D2 0.0007; for() #133 Body Start
PUSHR D2
LOAD D2 0.0004
POP D3
DIVR D3 D2
SETR D2 D3
LSHIFTV D2 0
MODV D2 10
STORE D2 0.0003
LOAD D2 0.0004; if() #132 Test
COMPAREV D2 1
GOTOCMP 5462 >=
LOAD D2 0.0006
COMPAREV D2 0
GOTOCMP 5462 !=
SETV D2 0
GOTO 5463
SETV D2 1
COMPAREV D2 0
GOTOCMP 5492 ==; Test 'if'
LOAD D2 0.0003; if() #453 Test AND if() #132 Body Start
COMPAREV D2 0
GOTOCMP 5473 >
LOAD D2 0.0002
COMPAREV D2 0
GOTOCMP 5473 !=
SETV D2 0
GOTO 5474
SETV D2 1
COMPAREV D2 0
GOTOCMP 5535 ==; Test 'if'
LOAD D2 0.0003; if() #453 Body Start
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
SETV D2 1
STORE D2 0.0002; if() #453 Body End
GOTO 5535; if() #132 Body End
LOAD D2 0.0003; if() #133 Test AND if() #132 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5501 ==; Test 'if'
LOAD D2 0.0001; if() #133 Body Start
ADDV D2 1
STORE D2 0.0001
GOTO 5535; if() #133 Body End
LOAD D2 0.0001; for() #134 LoopTest AND if() #133 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5522 ==; for() #134 TestFail?
SETV D2 48; for() #134 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #134 Body End
LOAD D2 0.0001; for() #134 LoopIncrement
SUBV D2 1
STORE D2 0.0001
GOTO 5501; for() #134 End
LOAD D2 0.0003
ADDV D2 48
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #133 Else End
LOAD D2 0.0007; if() #132 Else End
PUSHR D2
LOAD D2 0.0004
POP D3
MODR D3 D2
SETR D2 D3
STORE D2 0.0007
LOAD D2 0.0004
DIVV D2 10
STORE D2 0.0004
LOAD D2 0.0004; if() #134 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5553 ==; Test 'if'
SETV D2 1; if() #134 Body Start
STORE D2 0.0002
GOTO 5570; if() #134 Body End
LOAD D2 0.0004; if() #454 Test AND if() #134 Else Start
COMPAREV D2 0.1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5570 ==; Test 'if'
SETV D2 46; if() #454 Body Start
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; if() #454 Body End
LOAD D2 0; if() #134 Else End AND for() #133 Body End AND for() #133 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5440; for() #133 End
SETV D2 0
PUSHR D2
LOAD D2 0.0008
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005; return Start
POPARGS D5 0.0009; return End
RETURNFUNC; Func[int __Tango_FloatToASCII(char32[], int, bool)] Body End
SETR D4 SP2; Func[void __Tango_FuncActivateMenu(int, int, int)] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_SetMenuFlags(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuFlags(int)] Params End
CALLFUNC 0.0388; UsrFunc[void Tango_SetMenuFlags(int)] Call
PEEK D4
CALLFUNC 0.0134; UsrFunc[void Tango_ActivateMenu()] Call
PEEK D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 -20000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params Start
PUSHR D2; UsrFunc[void Tango_SetMenuCursorPosition(int)] Params End
CALLFUNC 0.1794; UsrFunc[void Tango_SetMenuCursorPosition(int)] Call
POP D4
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncActivateMenu(int, int, int)] Body End
SETR D4 SP2; Func[void __Tango_FuncAddMenuItem(int, int)] Body Start
SETV D2 -10000
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_FuncAddMenuItem(int, int)] Body End
PUSHV 0; Func[void __Tango_FuncClose()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #455 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 5650 ==; Test 'if'
PUSHR D4; if() #455 Body Start
CALLFUNC 0.1022; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #455 Body End
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncClose()] Body End
SETR D4 SP2; Func[void __Tango_FuncGoto(int)] Body Start
PUSHR D4
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
CALLFUNC 0.3766; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_FuncGoto(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_FuncNumber(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 13 0
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0004; if() #135 Test
PUSHR D2
LOAD D2 0.0004
LSHIFTV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5690 ==; Test 'if'
LOAD D2 0.0002; InlineFunc[int itoa(char32[], int)] Params Start AND if() #135 Body Start
PUSHR D2
LOAD D2 0.0004
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0001
GOTO 5699; if() #135 Body End
PUSHR D4; if() #135 Else Start
LOAD D2 0.0002; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Params End
CALLFUNC 0.5416; UsrFunc[int __Tango_FloatToASCII(char32[], int, bool)] Call
POP D4
STORE D2 0.0001; if() #135 Else End
STOREV 0 0; for() #135 setup
LOAD D2 0; for() #135 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5728 ==; for() #135 TestFail?
LOAD D2 0.0002; for() #135 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0003
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; for() #135 Body End
LOAD D2 0; for() #135 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5700; for() #135 End
LOAD D3 0.0002
DEALLOCATEMEMR D3
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_FuncNumber(int, int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_FuncOrdinal(int, int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0005
LSHIFTV D2 0
STORE D2 0.0005
LOAD D2 0.0003; InlineFunc[int itoa(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
SETR D3 D2; InlineFunc[int itoa(char32[], int)] Params End
POP D2; InlineFunc[int itoa(char32[], int)] Body Start
ITOA D2 D3; InlineFunc[int itoa(char32[], int)] Body End
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_GetOrdinal(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetOrdinal(int)] Params End
CALLFUNC 0.5884; UsrFunc[int __Tango_GetOrdinal(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001; if() #136 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5779 ==; Test 'if'
SETV D2 115; if() #136 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 116
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5848; if() #136 Body End
LOAD D2 0.0001; if() #137 Test AND if() #136 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5804 ==; Test 'if'
SETV D2 110; if() #137 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5848; if() #137 Body End
LOAD D2 0.0001; if() #138 Test AND if() #137 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 5829 ==; Test 'if'
SETV D2 114; if() #138 Body Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 100
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 5848; if() #138 Body End
SETV D2 116; if() #138 Else Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 104
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #138 Else End
LOAD D2 0.0002; if() #137 Else End AND if() #136 Else End
ADDV D2 2
STORE D2 0.0002
STOREV 0 0; for() #136 setup
LOAD D2 0; for() #136 LoopTest
PUSHR D2
LOAD D2 0.0002
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5880 ==; for() #136 TestFail?
LOAD D2 0.0003; for() #136 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004; for() #136 Body End
LOAD D2 0; for() #136 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5852; for() #136 End
LOAD D3 0.0003
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_FuncOrdinal(int, int)] Body End
SETR D4 SP2; Func[int __Tango_GetOrdinal(int)] Body Start
LOAD D2 0; if() #477 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 5893 ==; Test 'if'
LOAD D2 0; if() #477 Body Start
SUBV2 0 D2
STORE D2 0; if() #477 Body End
LOAD D2 0
MODV D2 100
STORE D2 0
LOAD D2 0; if() #478 Test
COMPAREV D2 11
GOTOCMP 5907 ==
LOAD D2 0
COMPAREV D2 12
GOTOCMP 5907 ==
LOAD D2 0
COMPAREV D2 13
GOTOCMP 5907 ==
SETV D2 0
GOTO 5908
SETV D2 1
COMPAREV D2 0
GOTOCMP 5912 ==; Test 'if'
SETV D2 0; return Start AND if() #478 Body Start
GOTO 5914; return End AND if() #478 Body End
LOAD D2 0; return Start
MODV D2 10
POP D5; return End
RETURNFUNC; Func[int __Tango_GetOrdinal(int)] Body End
SETR D4 SP2; Func[void __Tango_FuncPressA()] Body Start
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHV 14; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
PUSHR D4
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
RETURNFUNC; Func[void __Tango_FuncPressA()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncSaveName(int)] Body Start
SETR D4 SP2
ALLOCATEMEMV D2 9 0
STORE D2 0.0001
LOAD D2 0.0001; InlineFunc[void Game::GetSaveName(char32[])] Params
GETSAVENAME D2; InlineFunc[void Game::GetSaveName(char32[])] Body
STOREV 0 0; for() #137 setup
LOAD D2 0.0001; for() #137 LoopTest
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 5964 ==; for() #137 TestFail?
LOAD D2 0.0001; for() #137 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0002
ADDV D2 1
STORE D2 0.0002; for() #137 Body End
LOAD D2 0; for() #137 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 5935; for() #137 End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncSaveName(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncString(char32[], int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #456 Test
LOAD D2 0.0003; UsrFunc[bool __Tango_ValidateString(char32[])] Params Start
PUSHR D2; UsrFunc[bool __Tango_ValidateString(char32[])] Params End
CALLFUNC 0.6032; UsrFunc[bool __Tango_ValidateString(char32[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 5993 !=; Test 'unless'
PUSHR D4; unless() #456 Body Start
PUSHV 205; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0003
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 6030; return (Void) AND unless() #456 Body End
LOAD D2 0.0003; InlineFunc[int strlen(char32[])] Params Start AND InlineFunc[int Min(int, int)] Params Start
SETR D3 D2; InlineFunc[int strlen(char32[])] Params End
STRINGLENGTH D2 D3; InlineFunc[int strlen(char32[])] Body
PUSHVARGR D2
PUSHVARGV 16; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
STORE D2 0.0001
STOREV 0 0; for() #138 setup
LOAD D2 0; for() #138 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6030 ==; for() #138 TestFail?
LOAD D2 0.0003; for() #138 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; for() #138 Body End
LOAD D2 0; for() #138 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 6001; for() #138 End
POPARGS D5 0.0004
RETURNFUNC; Func[void __Tango_FuncString(char32[], int)] Body End
SETR D4 SP2; Func[bool __Tango_ValidateString(char32[])] Body Start
LOAD D2 0; InlineFunc[bool IsValidArray(char32[])] Params AND unless() #335 Test
ISVALIDARRAY D2; InlineFunc[bool IsValidArray(char32[])] Body
COMPAREV D2 0
GOTOCMP 6040 !=; Test 'unless'
SETV D2 0; return Start AND unless() #335 Body Start
GOTO 6049; return End
GOTO 6048; unless() #335 Body End
LOAD D2 0; InlineFunc[int SizeOfArray(char32[])] Params AND if() #636 Test AND unless() #335 Else Start
ARRAYSIZE D2; InlineFunc[int SizeOfArray(char32[])] Body
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 6048 ==; Test 'if'
SETV D2 0; return Start AND if() #636 Body Start
GOTO 6049; return End AND if() #636 Body End
SETV D2 1; unless() #335 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateString(char32[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_FuncSync(int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #139 Test
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6078 ==; Test 'if'
PUSHR D4; if() #139 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1933; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0
GOTO 6099; if() #139 Body End
PUSHR D4; if() #139 Else Start
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1933; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
PEEK D4
LOAD D2 0.0002; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[bool __Tango_FindSyncingStrings(int)] Params End
CALLFUNC 0.1933; UsrFunc[bool __Tango_FindSyncingStrings(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0; if() #139 Else End
LOAD D2 0.0001; if() #140 Test
COMPAREV D2 0
GOTOCMP 6104 ==; Test 'if'
SETV D2 0; return Start AND if() #140 Body Start
GOTO 6115; return End AND if() #140 Body End
PUSHR D4; if() #140 Else Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1; return Start
POPARGS D5 0.0003; return End AND if() #140 Else End
RETURNFUNC; Func[int __Tango_FuncSync(int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_FuncTab(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_FuncTab(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrFontData(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_GetCurrFontData(int)] Body End
SETR D4 SP2; Func[int __Tango_GetCurrSlotDefData(int)] Body Start
SETR D2 GD16; return Start
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrSlotDefData(int)] Body End
PUSHV 0; Func[int __Tango_GetCurrentCSet()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 10; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #458 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6193 ==; Test 'if'
LOAD D2 0; return Start AND if() #458 Body Start
GOTO 6209; return End AND if() #458 Body End
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #459 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6208 ==; Test 'if'
PUSHR D4; if() #459 Body Start
PUSHV 10; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #459 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentCSet()] Body End
PUSHV 0; Func[int __Tango_GetCurrentColor()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 11; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #460 Test
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6225 ==; Test 'if'
LOAD D2 0; return Start AND if() #460 Body Start
GOTO 6241; return End AND if() #460 Body End
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #461 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6240 ==; Test 'if'
PUSHR D4; if() #461 Body Start
PUSHV 11; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #461 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentColor()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSFX()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 14; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #462 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6260 ==; Test 'if'
PUSHR D4; if() #462 Body Start
PUSHV 13; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0; if() #462 Body End
LOAD D2 0; return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSFX()] Body End
PUSHV 0; Func[int __Tango_GetCurrentSpeed()] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 13; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #145 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6281 ==; Test 'if'
PUSHR D4; return Start AND if() #145 Body Start
PUSHV 12; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
GOTO 6289; return End
GOTO 6288; if() #145 Body End
LOAD D2 0; if() #463 Test AND if() #145 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6288 ==; Test 'if'
SETV D2 0; return Start AND if() #463 Body Start
GOTO 6289; return End AND if() #463 Body End
LOAD D2 0; if() #145 Else End AND return Start
POP D5; return End
RETURNFUNC; Func[int __Tango_GetCurrentSpeed()] Body End
SETR D4 SP2; Func[int __Tango_GetCurrentTileOffset()] Body Start
PUSHR D4; return Start
PUSHV 12; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
RETURNFUNC; return End AND Func[int __Tango_GetCurrentTileOffset()] Body End
PUSHV 0; Func[int __Tango_GetLineHeight()] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0
LOAD D2 0; return Start
PUSHR D2
POP D0
READPODARRAYV D2 4
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 5
POP D3
ADDR D2 D3
POP D5; return End
RETURNFUNC; Func[int __Tango_GetLineHeight()] Body End
PUSHARGSV 0 0.0012; Func[int __Tango_GetNextMenuPos(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #464 Test
CALLFUNC 0.1184; UsrFunc[bool __Tango_CursorPosIsValid()] Call
POP D4
COMPAREV D2 0
GOTOCMP 6326 !=; Test 'unless'
SETV D2 0; return Start AND unless() #464 Body Start
GOTO 6749; return End AND unless() #464 Body End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 15
STORE D2 0.0011
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD2
PUSHR D2
LOAD D2 0.0011
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
STOREV -1 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
STOREV 0 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
SETR D2 GD2; for() #140 setup
PUSHR D2
POP D0
READPODARRAYV D2 23
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #140 LoopTest
COMPAREV D2 0
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 6741 ==; for() #140 TestFail?
LOAD D2 0; if() #465 Test AND for() #140 Body Start
PUSHR D2
LOAD D2 0.0011
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6737 !=; Test 'if' AND continue 1; AND if() #465 Body
SETV D2 0
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
POP D0
READPODARRAYR D2 D2
STORE D2 0.0005
SETR D2 GD2
PUSHR D2
LOAD D2 0
MULTV D2 3
ADDV D2 34
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
LOAD D2 0.0012; if() #146 Test
COMPAREV D2 0
GOTOCMP 6402 ==
LOAD D2 0.0012
COMPAREV D2 1
GOTOCMP 6402 ==
SETV D2 0
GOTO 6403
SETV D2 1
COMPAREV D2 0
GOTOCMP 6567 ==; Test 'if'
LOAD D2 0.0004; if() #466 Test AND if() #146 Body Start
PUSHR D2
LOAD D2 0.0009
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6737 !=; Test 'if' AND continue 1; AND if() #466 Body
LOAD D2 0.0005; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0003
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
LOAD D2 0.0008; if() #147 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6436 ==; Test 'if'
SETV D2 1; if() #147 Body Start
STORE D2 0.0001
GOTO 6728; if() #147 Body End
LOAD D2 0.0012; if() #148 Test AND if() #147 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6504 ==; Test 'if'
LOAD D2 0.0006; if() #149 Test AND if() #148 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6475 ==; Test 'if'
LOAD D2 0.0002; if() #467 Test AND if() #149 Body Start
COMPAREV D2 0
GOTOCMP 6469 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6469 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6467 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6469 <
SETV D2 0
GOTO 6470
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #467 Body Start
STORE D2 0.0001; if() #467 Body End
GOTO 6728; if() #149 Body End
LOAD D2 0.0002; if() #468 Test AND if() #149 Else Start
COMPAREV D2 0
GOTOCMP 6484 >=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6498 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6496 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6498 <
SETV D2 0
GOTO 6499
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #468 Body Start
STORE D2 0.0001; if() #468 Body End
GOTO 6728; if() #149 Else End AND if() #148 Body End
LOAD D2 0.0006; if() #150 Test AND if() #148 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6538 ==; Test 'if'
LOAD D2 0.0002; if() #469 Test AND if() #150 Body Start
COMPAREV D2 0
GOTOCMP 6532 >
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6532 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6530 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6532 <
SETV D2 0
GOTO 6533
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #469 Body Start
STORE D2 0.0001; if() #469 Body End
GOTO 6728; if() #150 Body End
LOAD D2 0.0002; if() #470 Test AND if() #150 Else Start
COMPAREV D2 0
GOTOCMP 6547 <=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6561 <
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6559 !=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6561 <
SETV D2 0
GOTO 6562
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #470 Body Start
STORE D2 0.0001; if() #470 Body End
GOTO 6728; if() #150 Else End AND if() #148 Else End AND if() #147 Else End AND if() #146 Body End
LOAD D2 0.0005; if() #471 Test AND if() #146 Else Start
PUSHR D2
LOAD D2 0.0010
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6737 !=; Test 'if' AND continue 1; AND if() #471 Body
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0010
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0003
LOAD D2 0.0004; InlineFunc[int Abs(int)] Params Start
PUSHR D2
LOAD D2 0.0009
POP D3
SUBR D3 D2
SETR D2 D3; InlineFunc[int Abs(int)] Params End
ABS D2; InlineFunc[int Abs(int)] Body
STORE D2 0.0002
LOAD D2 0.0008; if() #151 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6598 ==; Test 'if'
SETV D2 1; if() #151 Body Start
STORE D2 0.0001
GOTO 6728; if() #151 Body End
LOAD D2 0.0012; if() #152 Test AND if() #151 Else Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6666 ==; Test 'if'
LOAD D2 0.0007; if() #153 Test AND if() #152 Body Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 6637 ==; Test 'if'
LOAD D2 0.0003; if() #472 Test AND if() #153 Body Start
COMPAREV D2 0
GOTOCMP 6631 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6631 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6629 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6631 <
SETV D2 0
GOTO 6632
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #472 Body Start
STORE D2 0.0001; if() #472 Body End
GOTO 6728; if() #153 Body End
LOAD D2 0.0003; if() #473 Test AND if() #153 Else Start
COMPAREV D2 0
GOTOCMP 6646 >=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6660 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6658 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6660 <
SETV D2 0
GOTO 6661
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #473 Body Start
STORE D2 0.0001; if() #473 Body End
GOTO 6728; if() #153 Else End AND if() #152 Body End
LOAD D2 0.0007; if() #154 Test AND if() #152 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6700 ==; Test 'if'
LOAD D2 0.0003; if() #474 Test AND if() #154 Body Start
COMPAREV D2 0
GOTOCMP 6694 >
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6694 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6692 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6694 <
SETV D2 0
GOTO 6695
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #474 Body Start
STORE D2 0.0001; if() #474 Body End
GOTO 6728; if() #154 Body End
LOAD D2 0.0003; if() #475 Test AND if() #154 Else Start
COMPAREV D2 0
GOTOCMP 6709 <=
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6723 <
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0007
POP D3
COMPARER D3 D2
GOTOCMP 6721 !=
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0006
POP D3
COMPARER D3 D2
GOTOCMP 6723 <
SETV D2 0
GOTO 6724
SETV D2 1
COMPAREV D2 0
GOTOCMP 6728 ==; Test 'if'
SETV D2 1; if() #475 Body Start
STORE D2 0.0001; if() #475 Body End
LOAD D2 0.0001; if() #154 Else End AND if() #152 Else End AND if() #151 Else End AND if() #146 Else End AND if() #476 Test
COMPAREV D2 0
GOTOCMP 6737 ==; Test 'if'
LOAD D2 0; if() #476 Body Start
STORE D2 0.0008
LOAD D2 0.0003
STORE D2 0.0007
LOAD D2 0.0002
STORE D2 0.0006; if() #476 Body End
LOAD D2 0; for() #140 Body End AND for() #140 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 6362; for() #140 End
LOAD D2 0.0008; if() #155 Test
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6748 ==; Test 'if'
LOAD D2 0.0008; return Start AND if() #155 Body Start
GOTO 6749; return End AND if() #155 Body End
LOAD D2 0.0011; return Start AND if() #155 Else Start
POPARGS D5 0.0013; return End AND if() #155 Else End
RETURNFUNC; Func[int __Tango_GetNextMenuPos(int)] Body End
SETR D4 SP2; Func[int __Tango_GetNumSCCArgs(int)] Body Start
LOAD D2 0; if() #156 Test
COMPAREV D2 9
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6801 ==; Test 'if'
LOAD D2 0; if() #157 Test AND if() #156 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6764 ==; Test 'if'
SETV D2 2; return Start AND if() #157 Body Start
GOTO 6809; return End AND if() #157 Body End
LOAD D2 0; if() #158 Test AND if() #157 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6771 ==; Test 'if'
SETV D2 1; return Start AND if() #158 Body Start
GOTO 6809; return End AND if() #158 Body End
LOAD D2 0; if() #159 Test AND if() #158 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6778 ==; Test 'if'
SETV D2 3; return Start AND if() #159 Body Start
GOTO 6809; return End AND if() #159 Body End
LOAD D2 0; if() #160 Test AND if() #159 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6785 ==; Test 'if'
SETV D2 2; return Start AND if() #160 Body Start
GOTO 6809; return End AND if() #160 Body End
LOAD D2 0; if() #161 Test AND if() #160 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6792 ==; Test 'if'
SETV D2 2; return Start AND if() #161 Body Start
GOTO 6809; return End AND if() #161 Body End
LOAD D2 0; if() #162 Test AND if() #161 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6799 ==; Test 'if'
SETV D2 3; return Start AND if() #162 Body Start
GOTO 6809; return End AND if() #162 Body End
SETV D2 3; return Start AND if() #162 Else Start
GOTO 6809; return End AND if() #162 Else End AND if() #161 Else End AND if() #160 Else End AND if() #159 Else End AND if() #158 Else End AND if() #157 Else End AND if() #156 Body End
LOAD D2 0; if() #163 Test AND if() #156 Else Start
COMPAREV D2 17
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6808 ==; Test 'if'
SETV D2 2; return Start AND if() #163 Body Start
GOTO 6809; return End AND if() #163 Body End
SETV D2 1; return Start AND if() #163 Else Start
POP D5; return End AND if() #163 Else End AND if() #156 Else End
RETURNFUNC; Func[int __Tango_GetNumSCCArgs(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetStringEnd(char32[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; while() #8 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6839 ==; Test 'while'
LOAD D2 0.0002; if() #480 Test AND while() #8 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 32
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 6835 ==; Test 'if'
LOAD D2 0; if() #480 Body Start
STORE D2 0.0001; if() #480 Body End
LOAD D2 0
ADDV D2 1
STORE D2 0; while() #8 Body End
GOTO 6815; while() #8 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetStringEnd(char32[])] Body End
SETR D4 SP2; Func[int __Tango_GetTargetOffset()] Body Start
PUSHR D4; return Start
PUSHV 5; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6164; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
PUSHV 4; UsrFunc[int __Tango_GetCurrFontData(int)] Params
CALLFUNC 0.6150; UsrFunc[int __Tango_GetCurrFontData(int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
PUSHR D4
PUSHV 9; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
RETURNFUNC; return End AND Func[int __Tango_GetTargetOffset()] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetVar(int)] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0002; if() #481 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 6885 ==; Test 'if'
SETV D2 1; if() #481 Body Start
STORE D2 0
LOAD D2 0.0002
SUBV2 0 D2
STORE D2 0.0002; if() #481 Body End
LOAD D2 0.0002; if() #164 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6896 ==; Test 'if'
PUSHR D4; if() #164 Body Start
PUSHV 22; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #164 Body End
LOAD D2 0.0002; if() #165 Test AND if() #164 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6907 ==; Test 'if'
PUSHR D4; if() #165 Body Start
PUSHV 23; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #165 Body End
LOAD D2 0.0002; if() #166 Test AND if() #165 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6917 ==; Test 'if'
PUSHR D4; if() #166 Body Start
CALLFUNC 0.6179; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #166 Body End
LOAD D2 0.0002; if() #167 Test AND if() #166 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6927 ==; Test 'if'
PUSHR D4; if() #167 Body Start
CALLFUNC 0.6211; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #167 Body End
LOAD D2 0.0002; if() #168 Test AND if() #167 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6937 ==; Test 'if'
PUSHR D4; if() #168 Body Start
CALLFUNC 0.6263; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #168 Body End
LOAD D2 0.0002; if() #169 Test AND if() #168 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6947 ==; Test 'if'
PUSHR D4; if() #169 Body Start
CALLFUNC 0.6243; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #169 Body End
LOAD D2 0.0002; if() #170 Test AND if() #169 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6958 ==; Test 'if'
PUSHR D4; if() #170 Body Start
PUSHV 0; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #170 Body End
LOAD D2 0.0002; if() #171 Test AND if() #170 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6969 ==; Test 'if'
PUSHR D4; if() #171 Body Start
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #171 Body End
LOAD D2 0.0002; if() #172 Test AND if() #171 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6980 ==; Test 'if'
PUSHR D4; return Start AND if() #172 Body Start
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
GOTO 7023; return End
GOTO 7016; if() #172 Body End
LOAD D2 0.0002; if() #173 Test AND if() #172 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6991 ==; Test 'if'
PUSHR D4; if() #173 Body Start
PUSHV 18; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
STORE D2 0.0001
GOTO 7016; if() #173 Body End
LOAD D2 0.0002; if() #174 Test AND if() #173 Else Start
COMPAREV D2 57.0513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 6999 ==; Test 'if'
SETV D2 -1; if() #174 Body Start
STORE D2 0.0001
GOTO 7016; if() #174 Body End
LOAD D2 0.0002; if() #175 Test AND if() #174 Else Start
COMPAREV D2 7.5754
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7010 ==; Test 'if'
SETR D2 GD2; if() #175 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 10
STORE D2 0.0001
GOTO 7016; if() #175 Body End
PUSHR D4; if() #175 Else Start
LOAD D2 0.0002; UsrFunc[int Tango_GetCustomVar(int)] Params Start
PUSHR D2; UsrFunc[int Tango_GetCustomVar(int)] Params End
CALLFUNC 0.1214; UsrFunc[int Tango_GetCustomVar(int)] Call
POP D4
STORE D2 0.0001; if() #175 Else End
LOAD D2 0; if() #174 Else End AND if() #173 Else End AND if() #172 Else End AND if() #171 Else End AND if() #170 Else End AND if() #169 Else End AND if() #168 Else End AND if() #167 Else End AND if() #166 Else End AND if() #165 Else End AND if() #164 Else End AND if() #482 Test
COMPAREV D2 0
GOTOCMP 7022 ==; Test 'if'
LOAD D2 0.0001; if() #482 Body Start
SUBV2 0 D2
STORE D2 0.0001; if() #482 Body End
LOAD D2 0.0001; return Start
POPARGS D5 0.0003; return End
RETURNFUNC; Func[int __Tango_GetVar(int)] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_GetWordWidth(int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; while(true) #9 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #483 Test
COMPAREV D2 0
GOTOCMP 7046 ==
LOAD D2 0
COMPAREV D2 32
GOTOCMP 7046 ==
LOAD D2 0
COMPAREV D2 26
GOTOCMP 7046 ==
SETV D2 0
GOTO 7047
SETV D2 1
COMPAREV D2 0
GOTOCMP 7080 !=; Test 'if' AND break 1; AND if() #483 Body
LOAD D2 0; if() #484 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7066 ==; Test 'if'
LOAD D2 0.0001; if() #484 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3871; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0001; if() #484 Body End
PUSHR D4; if() #485 Test
LOAD D2 0; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Params End
CALLFUNC 0.3413; UsrFunc[bool __Tango_IsSpecialDataMarker(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7076 ==; Test 'if'
LOAD D2 0.0003; if() #485 Body Start
ADDV D2 1
STORE D2 0.0003; if() #485 Body End
LOAD D2 0.0003
ADDV D2 1
STORE D2 0.0003; while(true) #9 Body [Opt:AlwaysOn] End
GOTO 7029; while() #9 End
LOAD D2 0.0001; return Start
POPARGS D5 0.0004; return End
RETURNFUNC; Func[int __Tango_GetWordWidth(int, int[])] Body End
PUSHV 0; Func[void __Tango_InitializeMenu(int)] Body Start
SETR D4 SP2
SETV D2 -214747.9999
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 15 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 23 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 16 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 17 D2
PUSHR D4
SETR D2 GD3; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Params End
CALLFUNC 0.0109; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 18 D2
PUSHR D4
SETR D2 GD3; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHV 1
PUSHV 20; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Params End
CALLFUNC 0.0109; UsrFunc[untyped Clamp(untyped, untyped, untyped)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 19 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 20
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 20 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 21
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 21 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 24 D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
PUSHV 7; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 25 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 25
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0001
ADDV D2 9
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0
PUSHR D2
POP D0
READPODARRAYV D2 4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 26 D2
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 33 D2
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_InitializeMenu(int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0002
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #199 Test
COMPAREV D2 48
GOTOCMP 7273 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7273 >
SETV D2 1
GOTO 7274
SETV D2 0
COMPAREV D2 0
GOTOCMP 7303 ==; Test 'if'
PUSHR D4; if() #199 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9203; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7516; if() #199 Body End
LOAD D2 0.0001; if() #200 Test AND if() #199 Else Start
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7396 ==; Test 'if'
PUSHR D4; if() #200 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; unless() #526 Test
COMPAREV D2 48
GOTOCMP 7331 <
LOAD D2 0.0001
COMPAREV D2 57
GOTOCMP 7331 >
SETV D2 1
GOTO 7332
SETV D2 0
COMPAREV D2 0
GOTOCMP 7342 !=; Test 'unless'
PUSHR D4; unless() #526 Body Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7542; return End AND unless() #526 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 1
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9203; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #201 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7387 ==; Test 'if'
PUSHR D4; if() #201 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0004
ADDV D2 1
STORE D2 0.0004
GOTO 7516; if() #201 Body End
PUSHR D4; if() #201 Else Start
PUSHV 106; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7542; return End AND if() #201 Else End
GOTO 7516; if() #200 Body End
LOAD D2 0.0001; if() #202 Test AND if() #200 Else Start
COMPAREV D2 97
GOTOCMP 7404 <
LOAD D2 0.0001
COMPAREV D2 122
GOTOCMP 7404 >
SETV D2 1
GOTO 7405
SETV D2 0
COMPAREV D2 0
GOTOCMP 7508 ==; Test 'if'
PUSHR D4; if() #202 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8801; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #203 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7499 ==; Test 'if'
PUSHR D4; if() #203 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8873; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
PEEK D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #527 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8927; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 7470 ==; Test 'if'
SETV D2 1; return Start AND if() #527 Body Start
GOTO 7542; return End AND if() #527 Body End
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3269; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 7516; if() #203 Body End
PUSHR D4; if() #203 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7542; return End AND if() #203 Else End
GOTO 7516; if() #202 Body End
PUSHR D4; if() #202 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7542; return End AND if() #202 Else End
LOAD D2 0.0004; if() #200 Else End AND if() #199 Else End AND if() #528 Test
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7529 ==; Test 'if'
SETV D2 1; return Start AND if() #528 Body Start
GOTO 7542; return End AND if() #528 Body End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseTopLevelCode(char32[], int, int, int[])] Body End
PUSHARGSV 0 0.0004; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6751; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0002
STOREV 0 0.0001
LOAD D2 0.0002; for() #141 LoopTest
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7691 ==; for() #141 TestFail?
LOAD D2 0.0007; for() #141 Body Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
SUBV D2 1
STORE D2 0.0001
LOAD D2 0.0001; if() #186 Test
COMPAREV D2 -1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7600 ==; Test 'if'
PUSHR D4; if() #186 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7704; return End
GOTO 7608; if() #186 Body End
LOAD D2 0.0001; if() #505 Test AND if() #186 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7608 ==; Test 'if'
LOAD D2 0.0001; if() #505 Body Start
ADDV D2 256
STORE D2 0.0001; if() #505 Body End
LOAD D2 0.0006; if() #186 Else End
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0007; if() #506 Test
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -1
GOTOCMP 7627 ==
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
COMPAREV D2 255
GOTOCMP 7627 ==
SETV D2 0
GOTO 7628
SETV D2 1
COMPAREV D2 0
GOTOCMP 7675 ==; Test 'if'
LOAD D2 0.0007; if() #506 Body Start
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #187 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7652 ==; Test 'if'
PUSHR D4; if() #187 Body Start
PUSHV 107; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0006
ADDV D2 1
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 7704; return End
GOTO 7660; if() #187 Body End
LOAD D2 0; if() #507 Test AND if() #187 Else Start
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 7660 ==; Test 'if'
LOAD D2 0; if() #507 Body Start
ADDV D2 256
STORE D2 0; if() #507 Body End
LOAD D2 0.0001; if() #187 Else End
PUSHR D2
LOAD D2 0
MULTV D2 254
SETV D2 254
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0001
LOAD D2 0.0006
ADDV D2 2
STORE D2 0.0006; if() #506 Body End
LOAD D2 0.0001
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #141 Body End
LOAD D2 0.0002; for() #141 LoopIncrement
SUBV D2 1
STORE D2 0.0002
GOTO 7574; for() #141 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[bool __Tango_LoadStringControlCode(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[bool __Tango_ValidateMessage(int)] Body Start
LOAD D2 0; if() #626 Test
COMPAREV D2 0
GOTOCMP 7719 <=
LOAD D2 0
PUSHR D2
LOAD D2 0
LSHIFTV D2 0
POP D3
COMPARER D3 D2
GOTOCMP 7719 !=
SETV D2 0
GOTO 7720
SETV D2 1
COMPAREV D2 0
GOTOCMP 7724 ==; Test 'if'
SETV D2 0; return Start AND if() #626 Body Start
GOTO 7725; return End AND if() #626 Body End
SETV D2 1; return Start
POP D5; return End
RETURNFUNC; Func[bool __Tango_ValidateMessage(int)] Body End
PUSHV 0; Func[void __Tango_MenuSelect(int)] Body Start
SETR D4 SP2
SETR D2 GD2; if() #514 Test
PUSHR D2
POP D0
READPODARRAYV D2 33
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7745 ==; Test 'if'
PUSHR D4; if() #514 Body Start
SETR D2 GD2; UsrFunc[void Tango_SaveMenuState(int[])] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 33
PUSHR D2; UsrFunc[void Tango_SaveMenuState(int[])] Params End
CALLFUNC 0.1476; UsrFunc[void Tango_SaveMenuState(int[])] Call
POP D4; if() #514 Body End
LOAD D2 0.0001
MULTV D2 3
ADDV D2 34
STORE D2 0
SETR D2 GD2
PUSHR D2
LOAD D2 0
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 10 D2
SETR D2 GD2; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 21; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 8
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
SETR D2 GD2; if() #515 Test
PUSHR D2
POP D0
READPODARRAYV D2 14
ANDV D2 2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7787 ==; Test 'if'
PUSHR D4; if() #515 Body Start
CALLFUNC 0.1136; UsrFunc[void Tango_DeactivateMenu()] Call
POP D4; if() #515 Body End
POPARGS D5 0.0002
RETURNFUNC; Func[void __Tango_MenuSelect(int)] Body End
PUSHARGSV 0 0.0010; Func[bool __Tango_NeedsNewLine(int, int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0008
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0007
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0006
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 6
STORE D2 0.0005
SETR D2 GD5
PUSHR D2
LOAD D2 0.0008
ADDV D2 4
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0007
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 8
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0.0009; if() #188 Test
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7906 ==; Test 'if'
SETR D2 GD4; if() #188 Body Start
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0004
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0006
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
STORE D2 0.0004
LOAD D2 0.0009; if() #516 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 7882 ==; Test 'if'
PUSHR D4; if() #516 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 2
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009; if() #516 Body End
LOAD D2 0.0009; if() #189 Test
COMPAREV D2 33
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7903 ==; Test 'if'
PUSHR D4; return Start AND if() #189 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8626; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7996; return End
GOTO 7913; if() #189 Body End
SETV D2 1; return Start AND if() #189 Else Start
GOTO 7996; return End AND if() #189 Else End
GOTO 7913; if() #188 Body End
LOAD D2 0.0009; if() #517 Test AND if() #188 Else Start
COMPAREV D2 32
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 7913 ==; Test 'if'
SETV D2 0; return Start AND if() #517 Body Start
GOTO 7996; return End AND if() #517 Body End
PUSHR D4; if() #188 Else End AND unless() #518 Test
LOAD D2 0.0009; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Params End
CALLFUNC 0.3851; UsrFunc[bool __Tango_CharacterWillFit(char32, int[], int, int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 7928 !=; Test 'unless'
SETV D2 1; return Start AND unless() #518 Body Start
GOTO 7996; return End AND unless() #518 Body End
STOREV 0 0.0002
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0001
LOAD D2 0.0010; for() #145 setup
SUBV D2 1
STORE D2 0
LOAD D2 0; for() #145 LoopTest
PUSHR D2
LOAD D2 0.0001
POP D3
COMPARER D3 D2
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 7978 ==; for() #145 TestFail?
SETR D2 GD4; for() #145 Body Start
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
STORE D2 0.0009
LOAD D2 0.0009; if() #190 Test
COMPAREV D2 32
GOTOCMP 7959 ==
LOAD D2 0.0009
COMPAREV D2 -10000
GOTOCMP 7959 ==
SETV D2 0
GOTO 7960
SETV D2 1
COMPAREV D2 0
GOTOCMP 7966 ==; Test 'if'
SETV D2 1; if() #190 Body Start
STORE D2 0.0002
GOTO 7978; break 1;
GOTO 7974; if() #190 Body End
LOAD D2 0.0009; if() #519 Test AND if() #190 Else Start
COMPAREV D2 33
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 7974 ==; Test 'if'
SETV D2 0; if() #519 Body Start
STORE D2 0.0002
GOTO 7978; break 1; AND if() #519 Body End
LOAD D2 0; if() #190 Else End AND for() #145 Body End AND for() #145 LoopIncrement
SUBV D2 1
STORE D2 0
GOTO 7937; for() #145 End
LOAD D2 0.0002; if() #520 Test
COMPAREV D2 0
GOTOCMP 7995 ==; Test 'if'
PUSHR D4; return Start AND if() #520 Body Start
LOAD D2 0.0010; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Params End
CALLFUNC 0.8626; UsrFunc[bool __Tango_WordWillFit(int, int[], int, int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
GOTO 7996; return End AND if() #520 Body End
SETV D2 0; return Start
POPARGS D5 0.0012; return End
RETURNFUNC; Func[bool __Tango_NeedsNewLine(int, int)] Body End
PUSHARGSV 0 0.0009; Func[int __Tango_RunFunction(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0008
STOREV 2 0.0007
STOREV 0 0.0006
ALLOCATEMEMV D2 4 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0,0}
POP D2
STORE D2 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
LOAD D2 0.0008; if() #565 Test
COMPAREV D2 0
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8027 ==; Test 'if'
SETV D2 1; if() #565 Body Start
STORE D2 0.0001
LOAD D2 0.0008
SUBV2 0 D2
STORE D2 0.0008; if() #565 Body End
STOREV 0 0; for() #149 setup
SETV D2 1; for() #149 LoopTest
COMPAREV D2 0
GOTOCMP 8088 ==; for() #149 TestFail?
PUSHR D4; for() #149 Body Start
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1457; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0006
LOAD D2 0.0006; if() #566 Test
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8088 !=; Test 'if' AND break 1; AND if() #566 Body
LOAD D2 0; if() #567 Test
COMPAREV D2 4
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 8061 ==; Test 'if'
LOAD D2 0; if() #568 Test AND if() #567 Body Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8084 ==; Test 'if'
PUSHR D4; if() #568 Body Start
PUSHV 204; UsrFunc[void __Tango_LogError(int)] Params
CALLFUNC 0.0164; UsrFunc[void __Tango_LogError(int)] Call
POP D4; if() #568 Body End
GOTO 8084; continue 1; AND if() #567 Body End
PUSHR D4
LOAD D2 0.0010; UsrFunc[int __Tango_ReadArg(int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1413; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007
PUSHR D2
LOAD D2 0.0006
POP D3
ADDR D2 D3
STORE D2 0.0007; for() #149 Body End
LOAD D2 0; for() #149 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 8028; for() #149 End
LOAD D2 0.0009; if() #569 Test
COMPAREV D2 0
GOTOCMP 8102 ==; Test 'if'
PUSHR D4; if() #569 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0010
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4011; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #569 Body End
SETV D2 1
STORE D2 0.0002
LOAD D2 0.0008; if() #242 Test
COMPAREV D2 0.4513
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8247 ==; Test 'if'
LOAD D2 0.0008; if() #243 Test AND if() #242 Body Start
COMPAREV D2 0.0081
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8127 ==; Test 'if'
LOAD D2 0.0004; if() #243 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 8601; if() #243 Body End
LOAD D2 0.0008; if() #244 Test AND if() #243 Else Start
COMPAREV D2 0.0123
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8153 ==; Test 'if'
PUSHR D4; if() #244 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8147 !=
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8147 !=
SETV D2 0
GOTO 8148
SETV D2 1
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #244 Body End
LOAD D2 0.0008; if() #245 Test AND if() #244 Else Start
COMPAREV D2 0.0151
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8179 ==; Test 'if'
PUSHR D4; if() #245 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
GOTOCMP 8173 ==
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
COMPAREV D2 0
GOTOCMP 8173 ==
SETV D2 1
GOTO 8174
SETV D2 0
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #245 Body End
LOAD D2 0.0008; if() #246 Test AND if() #245 Else Start
COMPAREV D2 0.0811
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8196 ==; Test 'if'
PUSHR D4; if() #246 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
COMPAREV D2 0
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #246 Body End
LOAD D2 0.0008; if() #247 Test AND if() #246 Else Start
COMPAREV D2 0.0989
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8210 ==; Test 'if'
PUSHR D4; if() #247 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncTab(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncTab(int)] Params End
CALLFUNC 0.6117; UsrFunc[void __Tango_FuncTab(int)] Call
POP D4
GOTO 8601; if() #247 Body End
LOAD D2 0.0008; if() #248 Test AND if() #247 Else Start
COMPAREV D2 0.1446
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8228 ==; Test 'if'
LOAD D2 0.0004; if() #248 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0010
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 8601; if() #248 Body End
LOAD D2 0.0008; if() #249 Test AND if() #248 Else Start
COMPAREV D2 0.3291
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8244 ==; Test 'if'
PUSHR D4; if() #249 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #249 Body End
SETV D2 0; if() #249 Else Start
STORE D2 0.0002; if() #249 Else End
GOTO 8601; if() #248 Else End AND if() #247 Else End AND if() #246 Else End AND if() #245 Else End AND if() #244 Else End AND if() #243 Else End AND if() #242 Body End
LOAD D2 0.0008; if() #250 Test AND if() #242 Else Start
COMPAREV D2 6.1058
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8376 ==; Test 'if'
LOAD D2 0.0008; if() #251 Test AND if() #250 Body Start
COMPAREV D2 0.4513
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8275 ==; Test 'if'
PUSHR D4; if() #251 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I<
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #251 Body End
LOAD D2 0.0008; if() #252 Test AND if() #251 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8290 ==; Test 'if'
PUSHR D4; if() #252 Body Start
PUSHV 0.5235; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1535; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 8601; if() #252 Body End
LOAD D2 0.0008; if() #253 Test AND if() #252 Else Start
COMPAREV D2 0.6325
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8310 ==; Test 'if'
PUSHR D4; if() #253 Body Start
LOAD D2 0.0004; UsrFunc[int Rand(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[int Rand(int, int)] Params End
CALLFUNC 0.0043; UsrFunc[int Rand(int, int)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #253 Body End
LOAD D2 0.0008; if() #254 Test AND if() #253 Else Start
COMPAREV D2 0.7843
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8322 ==; Test 'if'
PUSHR D4; if() #254 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_FuncSync(int[])] Params Start
PUSHR D2; UsrFunc[int __Tango_FuncSync(int[])] Params End
CALLFUNC 0.6051; UsrFunc[int __Tango_FuncSync(int[])] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #254 Body End
LOAD D2 0.0008; if() #255 Test AND if() #254 Else Start
COMPAREV D2 1.1939
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8339 ==; Test 'if'
PUSHR D4; if() #255 Body Start
PUSHV 2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #255 Body End
LOAD D2 0.0008; if() #256 Test AND if() #255 Else Start
COMPAREV D2 1.2192
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8350 ==; Test 'if'
PUSHR D4; if() #256 Body Start
CALLFUNC 0.5636; UsrFunc[void __Tango_FuncClose()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #256 Body End
LOAD D2 0.0008; if() #257 Test AND if() #256 Else Start
COMPAREV D2 1.8884
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8373 ==; Test 'if'
PUSHR D4; if() #257 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I==
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #257 Body End
SETV D2 0; if() #257 Else Start
STORE D2 0.0002; if() #257 Else End
GOTO 8601; if() #256 Else End AND if() #255 Else End AND if() #254 Else End AND if() #253 Else End AND if() #252 Else End AND if() #251 Else End AND if() #250 Body End
LOAD D2 0.0008; if() #258 Test AND if() #250 Else Start
COMPAREV D2 208.0657
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 8509 ==; Test 'if'
LOAD D2 0.0008; if() #259 Test AND if() #258 Body Start
COMPAREV D2 6.1058
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8401 ==; Test 'if'
PUSHR D4; if() #259 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_AppendMessage(int, int)] Params Start
PUSHR D2
LOAD D2 0.0007
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_AppendMessage(int, int)] Params End
CALLFUNC 0.3364; UsrFunc[void __Tango_AppendMessage(int, int)] Call
POP D4
GOTO 8601; if() #259 Body End
LOAD D2 0.0008; if() #260 Test AND if() #259 Else Start
COMPAREV D2 7.5241
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8417 ==; Test 'if'
PUSHR D4; if() #260 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Params End
CALLFUNC 0.5614; UsrFunc[void __Tango_FuncAddMenuItem(int, int)] Call
POP D4
GOTO 8601; if() #260 Body End
LOAD D2 0.0008; if() #261 Test AND if() #260 Else Start
COMPAREV D2 10.8066
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8440 ==; Test 'if'
PUSHR D4; if() #261 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Params End
CALLFUNC 0.5586; UsrFunc[void __Tango_FuncActivateMenu(int, int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #261 Body End
LOAD D2 0.0008; if() #262 Test AND if() #261 Else Start
COMPAREV D2 29.0329
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8456 ==; Test 'if'
PUSHR D4; if() #262 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncNumber(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncNumber(int, int)] Params End
CALLFUNC 0.5668; UsrFunc[void __Tango_FuncNumber(int, int)] Call
POP D4
GOTO 8601; if() #262 Body End
LOAD D2 0.0008; if() #263 Test AND if() #262 Else Start
COMPAREV D2 31.4910
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8467 ==; Test 'if'
PUSHR D4; if() #263 Body Start
CALLFUNC 0.5916; UsrFunc[void __Tango_FuncPressA()] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #263 Body End
LOAD D2 0.0008; if() #264 Test AND if() #263 Else Start
COMPAREV D2 37.4073
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8483 ==; Test 'if'
PUSHR D4; if() #264 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncString(char32[], int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncString(char32[], int)] Params End
CALLFUNC 0.5968; UsrFunc[void __Tango_FuncString(char32[], int)] Call
POP D4
GOTO 8601; if() #264 Body End
LOAD D2 0.0008; if() #265 Test AND if() #264 Else Start
COMPAREV D2 113.9450
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8506 ==; Test 'if'
PUSHR D4; if() #265 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #265 Body End
SETV D2 0; if() #265 Else Start
STORE D2 0.0002; if() #265 Else End
GOTO 8601; if() #264 Else End AND if() #263 Else End AND if() #262 Else End AND if() #261 Else End AND if() #260 Else End AND if() #259 Else End AND if() #258 Body End
LOAD D2 0.0008; if() #266 Test AND if() #258 Else Start
COMPAREV D2 208.0657
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8525 ==; Test 'if'
PUSHR D4; if() #266 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_FuncOrdinal(int, int)] Params End
CALLFUNC 0.5732; UsrFunc[void __Tango_FuncOrdinal(int, int)] Call
POP D4
GOTO 8601; if() #266 Body End
LOAD D2 0.0008; if() #267 Test AND if() #266 Else Start
COMPAREV D2 209.6041
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8536 ==; Test 'if'
LOAD D2 0.0004; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #267 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 8601; if() #267 Body End
LOAD D2 0.0008; if() #268 Test AND if() #267 Else Start
COMPAREV D2 263.9732
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8552 ==; Test 'if'
PUSHR D4; if() #268 Body Start
SETR D2 GD2; UsrFunc[void Tango_SuspendSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_SuspendSlot(int)] Params End
CALLFUNC 0.1897; UsrFunc[void Tango_SuspendSlot(int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #268 Body End
LOAD D2 0.0008; if() #269 Test AND if() #268 Else Start
COMPAREV D2 1158.8044
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8565 ==; Test 'if'
PUSHR D4; if() #269 Body Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 5; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETV D2 1
STORE D2 0.0003
GOTO 8601; if() #269 Body End
LOAD D2 0.0008; if() #270 Test AND if() #269 Else Start
COMPAREV D2 1364.9361
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8588 ==; Test 'if'
PUSHR D4; if() #270 Body Start
LOAD D2 0.0004; UsrFunc[int __Tango_BoolToInt(bool)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
LOAD D2 0.0004
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I!=
PUSHR D2; UsrFunc[int __Tango_BoolToInt(bool)] Params End
CALLFUNC 0.3842; UsrFunc[int __Tango_BoolToInt(bool)] Call
POP D4
STORE D2 0.0003
GOTO 8601; if() #270 Body End
LOAD D2 0.0008; if() #271 Test AND if() #270 Else Start
COMPAREV D2 1615.1672
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8599 ==; Test 'if'
PUSHR D4; if() #271 Body Start
LOAD D2 0.0010; UsrFunc[void __Tango_FuncSaveName(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_FuncSaveName(int)] Params End
CALLFUNC 0.5928; UsrFunc[void __Tango_FuncSaveName(int)] Call
POP D4
GOTO 8601; if() #271 Body End
SETV D2 0; if() #271 Else Start
STORE D2 0.0002; if() #271 Else End
LOAD D2 0.0002; if() #270 Else End AND if() #269 Else End AND if() #268 Else End AND if() #267 Else End AND if() #266 Else End AND if() #258 Else End AND if() #250 Else End AND if() #242 Else End AND unless() #570 Test
COMPAREV D2 0
GOTOCMP 8612 !=; Test 'unless'
PUSHR D4; unless() #570 Body Start
LOAD D2 0.0008; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Params End
CALLFUNC 1.1526; UsrFunc[int __Tango_RunCustomFunction(int, int[])] Call
POP D4
STORE D2 0.0003; unless() #570 Body End
LOAD D2 0.0001; if() #571 Test
COMPAREV D2 0
GOTOCMP 8618 ==; Test 'if'
LOAD D2 0.0003; if() #571 Body Start
SUBV2 0 D2
STORE D2 0.0003; if() #571 Body End
LOAD D2 0.0003; return Start
LOAD D3 0.0004
DEALLOCATEMEMR D3
GOTO 8624; return End
LOAD D3 0.0004
DEALLOCATEMEMR D3
POPARGS D5 0.0011
RETURNFUNC; Func[int __Tango_RunFunction(int, bool)] Body End
SETR D4 SP2; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body Start
LOAD D2 0; return Start
PUSHR D2
LOAD D2 0.0001
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_GetWordWidth(int, int[])] Params End
CALLFUNC 0.7025; UsrFunc[int __Tango_GetWordWidth(int, int[])] Call
POP D4
POP D3
COMPARER D3 D2
SETCMP D2 I>=
POPARGS D5 0.0004; return End
RETURNFUNC; Func[bool __Tango_WordWillFit(int, int[], int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body Start
SETR D4 SP2
LOAD D2 0.0004
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Params End
CALLFUNC 0.8801; UsrFunc[int __Tango_ReadIdentifier(char32[], int, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006; if() #191 Test
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
COMPAREV D2 40
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8756 ==; Test 'if'
PUSHR D4; if() #191 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetStartMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetStartMarker(int, int)] Params End
CALLFUNC 0.8873; UsrFunc[void __Tango_SetStartMarker(int, int)] Call
POP D4
LOAD D2 0.0003; if() #192 Test
COMPAREV D2 0
GOTOCMP 8700 ==; Test 'if'
PUSHR D4; if() #192 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8708; if() #192 Body End
PUSHR D4; if() #192 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #192 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
PUSHR D4; if() #521 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Params End
CALLFUNC 0.8927; UsrFunc[bool __Tango_ParseArguments(char32[], int, int, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 8727 ==; Test 'if'
SETV D2 1; return Start AND if() #521 Body Start
GOTO 8799; return End AND if() #521 Body End
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0005
LOAD D2 0.0002
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_SetEndMarker(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[int __Tango_SetEndMarker(int, int)] Params End
CALLFUNC 0.9150; UsrFunc[int __Tango_SetEndMarker(int, int)] Call
POP D4
STORE D2 0.0004
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_AddPadding(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0004
PUSHR D2; UsrFunc[int __Tango_AddPadding(int, int, int)] Params End
CALLFUNC 0.3269; UsrFunc[int __Tango_AddPadding(int, int, int)] Call
POP D4
STORE D2 0.0004
GOTO 8786; if() #191 Body End
PUSHR D4; if() #191 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -200; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0003; if() #193 Test
COMPAREV D2 0
GOTOCMP 8775 ==; Test 'if'
PUSHR D4; if() #193 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8783; if() #193 Body End
PUSHR D4; if() #193 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #193 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004; if() #191 Else End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Body End
PUSHARGSV 0 0.0002; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0001
STOREV 0 0
LOAD D2 0.0004; while(true) #13 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0003
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #225 Test
COMPAREV D2 97
GOTOCMP 8819 <
LOAD D2 0
COMPAREV D2 122
GOTOCMP 8819 >
SETV D2 1
GOTO 8820
SETV D2 0
COMPAREV D2 0
GOTOCMP 8835 ==; Test 'if'
LOAD D2 0.0001; if() #225 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 1
SUBV D2 97
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8860; if() #225 Body End
LOAD D2 0; if() #226 Test AND if() #225 Else Start
COMPAREV D2 48
GOTOCMP 8843 <
LOAD D2 0
COMPAREV D2 57
GOTOCMP 8843 >
SETV D2 1
GOTO 8844
SETV D2 0
COMPAREV D2 0
GOTOCMP 8864 ==; Test 'if'
LOAD D2 0.0001; if() #226 Body Start
MULTV D2 7
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
ADDV D2 27
SUBV D2 48
DIVV D2 10000
POP D3
ADDR D2 D3
STORE D2 0.0001
GOTO 8860; if() #226 Body End
GOTO 8864; break 1; AND if() #226 Else
LOAD D2 0.0003; if() #225 Else End
ADDV D2 1
STORE D2 0.0003; while(true) #13 Body [Opt:AlwaysOn] End
GOTO 8805; while() #13 End
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0001; return Start
POPARGS D5 0.0005; return End
RETURNFUNC; Func[int __Tango_ReadIdentifier(char32[], int, int[])] Body End
SETR D4 SP2; Func[void __Tango_SetStartMarker(int, int)] Body Start
LOAD D2 0; if() #298 Test
COMPAREV D2 0.0069
GOTOCMP 8891 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 8891 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 8891 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 8891 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 8891 ==
SETV D2 0
GOTO 8892
SETV D2 1
COMPAREV D2 0
GOTOCMP 8901 ==; Test 'if'
PUSHR D4; if() #298 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -600; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8925; if() #298 Body End
LOAD D2 0; if() #299 Test AND if() #298 Else Start
COMPAREV D2 0.0986
GOTOCMP 8909 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 8909 ==
SETV D2 0
GOTO 8910
SETV D2 1
COMPAREV D2 0
GOTOCMP 8919 ==; Test 'if'
PUSHR D4; if() #299 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -300; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
GOTO 8925; if() #299 Body End
PUSHR D4; if() #299 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -400; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #299 Else End
POPARGS D5 0.0002; if() #298 Else End
RETURNFUNC; Func[void __Tango_SetStartMarker(int, int)] Body End
PUSHARGSV 0 0.0003; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0002
STOREV 0 0.0001
PUSHR D4; while(true) #11 Body [Opt:AlwaysOn] Start
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #194 Test
COMPAREV D2 41
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 8966 ==; Test 'if'
LOAD D2 0.0005; if() #194 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0001; if() #522 Test
COMPAREV D2 0
GOTOCMP 9135 ==; Test 'if'
PUSHR D4; if() #522 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9148; return End AND if() #522 Body End
GOTO 9135; break 1;
GOTO 8931; if() #194 Body End
LOAD D2 0.0002; if() #195 Test AND if() #194 Else Start
COMPAREV D2 64
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9035 ==; Test 'if'
LOAD D2 0.0005; if() #195 Body Start
ADDV D2 1
STORE D2 0.0005
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; unless() #523 Test
COMPAREV D2 97
GOTOCMP 8988 <
LOAD D2 0.0002
COMPAREV D2 122
GOTOCMP 8988 >
SETV D2 1
GOTO 8989
SETV D2 0
COMPAREV D2 0
GOTOCMP 8999 !=; Test 'unless'
PUSHR D4; unless() #523 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9148; return End AND unless() #523 Body End
PUSHR D4; if() #524 Test
LOAD D2 0.0006; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0.0003
PUSHR D2; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Params End
CALLFUNC 0.8646; UsrFunc[bool __Tango_ParseArgumentCode(char32[], int, int, bool, int[])] Call
POP D4
COMPAREV D2 0
GOTOCMP 9016 ==; Test 'if'
SETV D2 1; return Start AND if() #524 Body Start
GOTO 9148; return End AND if() #524 Body End
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 1
STORE D2 0.0004
SETV D2 0
STORE D2 0.0001
GOTO 8931; if() #195 Body End
LOAD D2 0.0002; if() #196 Test AND if() #195 Else Start
COMPAREV D2 48
GOTOCMP 9041 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9046 <=
LOAD D2 0.0002
COMPAREV D2 46
GOTOCMP 9046 ==
SETV D2 0
GOTO 9047
SETV D2 1
COMPAREV D2 0
GOTOCMP 9104 ==; Test 'if'
PUSHR D4; if() #196 Body Start
LOAD D2 0.0006; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params Start
PUSHR D2
LOAD D2 0.0005
PUSHR D2
PUSHV 0
LOAD D2 0.0003
PUSHR D2; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Params End
CALLFUNC 0.9203; UsrFunc[int __Tango_ReadNumber(char32[], int, bool, int[])] Call
POP D4
STORE D2 0
PUSHR D4
LOAD D2 0.0006; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params Start
PUSHR D2
LOAD D2 0.0003
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[int __Tango_EatSpaces(char32[], int)] Params End
CALLFUNC 0.5315; UsrFunc[int __Tango_EatSpaces(char32[], int)] Call
POP D4
STORE D2 0.0005
PUSHR D4
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -100; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; if() #197 Test
COMPAREV D2 0
GOTOCMP 9092 ==; Test 'if'
PUSHR D4; if() #197 Body Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
SUBV2 0 D2
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
SETV D2 0
STORE D2 0.0001
GOTO 9100; if() #197 Body End
PUSHR D4; if() #197 Else Start
LOAD D2 0.0004; UsrFunc[void __Tango_SetChar(int, int)] Params Start
ADDV D2 1
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4; if() #197 Else End
LOAD D2 0.0004
ADDV D2 2
STORE D2 0.0004
GOTO 8931; if() #196 Body End
LOAD D2 0.0002; if() #198 Test AND if() #196 Else Start
COMPAREV D2 45
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9126 ==; Test 'if'
LOAD D2 0.0001; if() #525 Test AND if() #198 Body Start
COMPAREV D2 0
GOTOCMP 9120 ==; Test 'if'
PUSHR D4; if() #525 Body Start
PUSHV 105; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9148; return End AND if() #525 Body End
SETV D2 1
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
GOTO 8931; if() #198 Body End
PUSHR D4; if() #198 Else Start
PUSHV 104; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0005
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4
SETV D2 1; return Start
GOTO 9148; return End AND if() #198 Else End
GOTO 8931; if() #196 Else End AND if() #195 Else End AND if() #194 Else End AND while(true) #11 Body [Opt:AlwaysOn] End AND while() #11 End
LOAD D2 0.0005
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0.0003
SETR D0 D2
POP D2
WRITEPODARRAYVR 1 D2
SETV D2 0; return Start
POPARGS D5 0.0007; return End
RETURNFUNC; Func[bool __Tango_ParseArguments(char32[], int, int, int[])] Body End
SETR D4 SP2; Func[int __Tango_SetEndMarker(int, int)] Body Start
LOAD D2 0; if() #296 Test
COMPAREV D2 0.0069
GOTOCMP 9168 ==
LOAD D2 0
COMPAREV D2 0.2441
GOTOCMP 9168 ==
LOAD D2 0
COMPAREV D2 11.9678
GOTOCMP 9168 ==
LOAD D2 0
COMPAREV D2 5.8497
GOTOCMP 9168 ==
LOAD D2 0
COMPAREV D2 13486.5225
GOTOCMP 9168 ==
SETV D2 0
GOTO 9169
SETV D2 1
COMPAREV D2 0
GOTOCMP 9180 ==; Test 'if'
PUSHR D4; if() #296 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -700; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
GOTO 9201; return End AND if() #296 Body End
LOAD D2 0; if() #297 Test AND if() #296 Else Start
COMPAREV D2 0.0986
GOTOCMP 9188 ==
LOAD D2 0
COMPAREV D2 0.0542
GOTOCMP 9188 ==
SETV D2 0
GOTO 9189
SETV D2 1
COMPAREV D2 0
GOTOCMP 9193 ==; Test 'if'
LOAD D2 0.0001; return Start AND if() #297 Body Start
GOTO 9201; return End AND if() #297 Body End
PUSHR D4; if() #297 Else Start
LOAD D2 0.0001; UsrFunc[void __Tango_SetChar(int, int)] Params Start
PUSHR D2
PUSHV -500; UsrFunc[void __Tango_SetChar(int, int)] Params End
CALLFUNC 0.3336; UsrFunc[void __Tango_SetChar(int, int)] Call
POP D4
LOAD D2 0.0001; return Start
ADDV D2 1
POPARGS D5 0.0002; return End AND if() #297 Else End AND if() #296 Else End
RETURNFUNC; Func[int __Tango_SetEndMarker(int, int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body Start
SETR D4 SP2
STOREV 0 0.0003
STOREV 0 0.0002
STOREV 0 0.0001
STOREV 0.1000 0
LOAD D2 0.0007; while(true) #14 Body [Opt:AlwaysOn] Start
PUSHR D2
LOAD D2 0.0006
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
LOAD D2 0.0002; if() #227 Test
COMPAREV D2 48
GOTOCMP 9223 <
LOAD D2 0.0002
COMPAREV D2 57
GOTOCMP 9223 >
SETV D2 1
GOTO 9224
SETV D2 0
COMPAREV D2 0
GOTOCMP 9262 ==; Test 'if'
LOAD D2 0.0001; unless() #228 Test AND if() #227 Body Start
COMPAREV D2 0
GOTOCMP 9240 !=; Test 'unless'
LOAD D2 0.0003; unless() #228 Body Start
MULTV D2 10
STORE D2 0.0003
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
POP D3
ADDR D2 D3
STORE D2 0.0003
GOTO 9284; unless() #228 Body End
LOAD D2 0.0003; unless() #228 Else Start
PUSHR D2
LOAD D2 0.0002
SUBV D2 48
PUSHR D2
LOAD D2 0
POP D3
MULTR D2 D3
POP D3
ADDR D2 D3
STORE D2 0.0003
LOAD D2 0; if() #229 Test
COMPAREV D2 0.0001
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9258 ==; Test 'if'
GOTO 9288; break 1; AND if() #229 Body Start
GOTO 9284; if() #229 Body End
LOAD D2 0; if() #229 Else Start
DIVV D2 10
STORE D2 0; if() #229 Else End
GOTO 9284; unless() #228 Else End AND if() #227 Body End
LOAD D2 0.0002; if() #230 Test AND if() #227 Else Start
COMPAREV D2 46
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9288 ==; Test 'if'
LOAD D2 0.0005; if() #231 Test AND if() #230 Body Start
COMPAREV D2 0
GOTOCMP 9275 !=
LOAD D2 0.0001
COMPAREV D2 0
GOTOCMP 9275 !=
SETV D2 0
GOTO 9276
SETV D2 1
COMPAREV D2 0
GOTOCMP 9280 ==; Test 'if'
GOTO 9288; break 1; AND if() #231 Body Start
GOTO 9284; if() #231 Body End
SETV D2 1; if() #231 Else Start
STORE D2 0.0001; if() #231 Else End
GOTO 9284; if() #230 Body End
GOTO 9288; break 1; AND if() #230 Else
LOAD D2 0.0006; if() #227 Else End
ADDV D2 1
STORE D2 0.0006; while(true) #14 Body [Opt:AlwaysOn] End
GOTO 9209; while() #14 End
LOAD D2 0.0006
PUSHR D2
LOAD D2 0.0004
SETR D0 D2
POP D2
WRITEPODARRAYVR 0 D2
LOAD D2 0.0003; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_ReadNumber(char32[], int, bool, int[])] Body End
SETR D4 SP2; Func[bool __Tango_PressAdvance(int)] Body Start
LOAD D2 0; if() #204 Test
COMPAREV D2 90
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9305 ==; Test 'if'
SETR D2 INPUTA; return Start AND if() #204 Body Start
GOTO 9306; return End AND if() #204 Body End
SETR D2 INPUTPRESSA; return Start AND if() #204 Else Start
POP D5; return End AND if() #204 Else End
RETURNFUNC; Func[bool __Tango_PressAdvance(int)] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuCancel()] Body Start
SETR D2 INPUTPRESSB; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuCancel()] Body End
SETR D4 SP2; Func[bool __Tango_PressMenuSelect()] Body Start
SETR D2 INPUTPRESSA; return Start
RETURNFUNC; return End AND Func[bool __Tango_PressMenuSelect()] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_PrintNextChar(int, char32, int[])] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0001; if() #205 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9342 ==; Test 'if'
PUSHR D4; if() #205 Body Start
PUSHV 4; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6164; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
PUSHR D4
PUSHV 6; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6164; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0
GOTO 9349; if() #205 Body End
SETR D2 GD5; if() #205 Else Start
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0; if() #205 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
LOAD D2 0.0003; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
PUSHR D4
CALLFUNC 0.6179; UsrFunc[int __Tango_GetCurrentCSet()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6211; UsrFunc[int __Tango_GetCurrentColor()] Call
POP D4
PUSHR D2
PUSHR D4
CALLFUNC 0.6291; UsrFunc[int __Tango_GetCurrentTileOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Params End
CALLFUNC 0.4603; UsrFunc[int __Tango_PutChar(int, int[], int, int, int, int, int, int)] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0005
RETURNFUNC; Func[void __Tango_PrintNextChar(int, char32, int[])] Body End
PUSHARGSV 0 0.0018; Func[void __Tango_Process(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 0
STORE D2 0.0017
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0016
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
STOREV 0 0.0014
PUSHR D4
LOAD D2 0.0017; UsrFunc[int Tango_GetSlotVar(int, int)] Params Start
PUSHR D2
PUSHV 3; UsrFunc[int Tango_GetSlotVar(int, int)] Params End
CALLFUNC 0.1251; UsrFunc[int Tango_GetSlotVar(int, int)] Call
POP D4
STORE D2 0.0013
SETR D2 GD4
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0017
MULTV D2 7
STORE D2 0.0011
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
STOREV 0 0.0009
STOREV 0 0.0008
STOREV 0 0.0007
STOREV 0 0.0006
STOREV 0 0.0005
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
STOREV 0 0.0003
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
LOAD D2 0.0014; until() #12 Test
COMPAREV D2 0
GOTOCMP 10080 !=; Test 'until'
SETV D2 0; until() #12 Body Start
STORE D2 0.0009
SETV D2 0
STORE D2 0.0008
SETV D2 0
STORE D2 0.0003
LOAD D2 0.0012; if() #206 Test
COMPAREV D2 32
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 9548 ==; Test 'if'
SETR D2 GD5; if() #530 Test AND if() #206 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
POP D0
READPODARRAYR D2 D2
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9510 ==; Test 'if'
SETV D2 0; if() #530 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #530 Body End
LOAD D2 0.0012
COMPAREV D2 32
SETCMP D2 I==
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0016; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params Start
PUSHR D2
LOAD D2 0.0012
PUSHR D2
LOAD D2 0.0010
PUSHR D2; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Params End
CALLFUNC 0.9314; UsrFunc[void __Tango_PrintNextChar(int, char32, int[])] Call
POP D4
LOAD D2 0.0012; if() #531 Test
COMPAREV D2 32
GOTOCMP 9537 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9537 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9537 ==
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9537 !=
SETV D2 1
GOTO 9538
SETV D2 0
COMPAREV D2 0
GOTOCMP 9544 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #531 Body Start
CALLFUNC 0.6243; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #531 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9864; if() #206 Body End
LOAD D2 0.0012; if() #207 Test AND if() #206 Else Start
COMPAREV D2 26
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9559 ==; Test 'if'
SETV D2 1; if() #207 Body Start
STORE D2 0.0009
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9864; if() #207 Body End
LOAD D2 0.0012; if() #208 Test AND if() #207 Else Start
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9575 ==; Test 'if'
LOAD D2 0.0013; if() #208 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0013; UsrFunc[int __Tango_RunStringControlCode(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunStringControlCode(int)] Params End
CALLFUNC 1.0099; UsrFunc[int __Tango_RunStringControlCode(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0.0013
GOTO 9864; if() #208 Body End
LOAD D2 0.0012; if() #209 Test AND if() #208 Else Start
COMPAREV D2 -300
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9626 ==; Test 'if'
PUSHR D4; if() #209 Body Start
LOAD D2 0.0013; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0700; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 6
STORE D2 0.0013
SETR D2 GD2; if() #532 Test
PUSHR D2
POP D0
READPODARRAYV D2 12
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9864 ==; Test 'if'
SETR D2 GD2; if() #532 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 5
STORE D2 0.0015
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 5
POP D0
READPODARRAYR D2 D2
STORE D2 0.0010
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 32
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0004
SETV D2 0
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2; if() #532 Body End
GOTO 9864; if() #209 Body End
LOAD D2 0.0012; if() #210 Test AND if() #209 Else Start
COMPAREV D2 -1000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9645 ==; Test 'if'
PUSHR D4; if() #210 Body Start
SETR D2 GD4; UsrFunc[void __Tango_SetAlternateColor(int)] Params Start
PUSHR D2
LOAD D2 0.0013
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void __Tango_SetAlternateColor(int)] Params End
CALLFUNC 1.0769; UsrFunc[void __Tango_SetAlternateColor(int)] Call
POP D4
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9864; if() #210 Body End
LOAD D2 0.0012; if() #211 Test AND if() #210 Else Start
COMPAREV D2 -1100
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9657 ==; Test 'if'
PUSHR D4; if() #211 Body Start
CALLFUNC 0.3937; UsrFunc[void __Tango_ClearAlternateColor()] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
GOTO 9864; if() #211 Body End
LOAD D2 0.0012; if() #212 Test AND if() #211 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9683 ==; Test 'if'
PUSHR D4; if() #212 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 1; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #533 Test
COMPAREV D2 0
GOTOCMP 9677 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9677 !=
SETV D2 1
GOTO 9678
SETV D2 0
COMPAREV D2 0
GOTOCMP 9864 ==; Test 'if'
SETV D2 1; if() #533 Body Start
STORE D2 0.0014; if() #533 Body End
GOTO 9864; if() #212 Body End
LOAD D2 0.0012; if() #213 Test AND if() #212 Else Start
COMPAREV D2 -600
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9708 ==; Test 'if'
PUSHR D4; if() #213 Body Start
LOAD D2 0.0013; UsrFunc[int __Tango_RunFlowControl(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_RunFlowControl(int)] Params End
CALLFUNC 1.0803; UsrFunc[int __Tango_RunFlowControl(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #534 Test
COMPAREV D2 0
GOTOCMP 9702 <=
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9702 !=
SETV D2 1
GOTO 9703
SETV D2 0
COMPAREV D2 0
GOTOCMP 9864 ==; Test 'if'
SETV D2 1; if() #534 Body Start
STORE D2 0.0014; if() #534 Body End
GOTO 9864; if() #213 Body End
LOAD D2 0.0012; if() #214 Test AND if() #213 Else Start
COMPAREV D2 -10000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9765 ==; Test 'if'
LOAD D2 0.0007; unless() #535 Test AND if() #214 Body Start
COMPAREV D2 0
GOTOCMP 9723 !=; Test 'unless'
PUSHR D4; unless() #535 Body Start
LOAD D2 0.0015; UsrFunc[void __Tango_InitializeMenu(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_InitializeMenu(int)] Params End
CALLFUNC 0.7083; UsrFunc[void __Tango_InitializeMenu(int)] Call
POP D4
SETV D2 1
STORE D2 0.0007; unless() #535 Body End
PUSHR D4
LOAD D2 0.0013; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0011
PUSHR D2
LOAD D2 0.0016
PUSHR D2
LOAD D2 0.0015
PUSHR D2; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Params End
CALLFUNC 1.1084; UsrFunc[void __Tango_ReadChoice(int, int, int, int)] Call
POP D4
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0015
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0006
ADDV D2 1
STORE D2 0.0006
LOAD D2 0.0013
ADDV D2 2
STORE D2 0.0013
GOTO 9864; if() #214 Body End
LOAD D2 0.0012; if() #215 Test AND if() #214 Else Start
COMPAREV D2 -20000
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9792 ==; Test 'if'
PUSHR D4; if() #215 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1184; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 21
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 10080; break 1;
GOTO 9864; if() #215 Body End
LOAD D2 0.0012; if() #216 Test AND if() #215 Else Start
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9850 ==; Test 'if'
PUSHR D4; if() #216 Body Start
LOAD D2 0.0016; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0007
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1184; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
POP D4
SETV D2 2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD3; InlineFunc[void Audio::PlaySound(int)] Params Start
PUSHR D2
LOAD D2 0.0015
ADDV D2 14
POP D0
READPODARRAYR D2 D2; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
SETR D2 GD3; if() #536 Test
PUSHR D2
LOAD D2 0.0015
ADDV D2 35
POP D0
READPODARRAYR D2 D2
ANDV D2 4
COMPAREV D2 0
GOTOCMP 9835 ==
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9835 ==
SETV D2 1
GOTO 9836
SETV D2 0
COMPAREV D2 0
GOTOCMP 10080 ==; Test 'if'
SETV D2 90; if() #536 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #536 Body End
GOTO 10080; break 1;
GOTO 9864; if() #216 Body End
LOAD D2 0.0012; if() #537 Test AND if() #216 Else Start
COMPAREV D2 -1
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 9861 ==; Test 'if'
PUSHR D4; if() #537 Body Start
PUSHV 201; UsrFunc[void __Tango_LogError(int, untyped)] Params Start
LOAD D2 0.0012
PUSHR D2; UsrFunc[void __Tango_LogError(int, untyped)] Params End
CALLFUNC 0.1468; UsrFunc[void __Tango_LogError(int, untyped)] Call
POP D4; if() #537 Body End
LOAD D2 0.0013
ADDV D2 1
STORE D2 0.0013; if() #216 Else End
SETR D2 GD4; if() #215 Else End AND if() #214 Else End AND if() #213 Else End AND if() #212 Else End AND if() #211 Else End AND if() #210 Else End AND if() #209 Else End AND if() #208 Else End AND if() #207 Else End AND if() #206 Else End
PUSHR D2
LOAD D2 0.0013
POP D0
READPODARRAYR D2 D2
STORE D2 0.0012
LOAD D2 0.0012; if() #538 Test
COMPAREV D2 33
GOTOCMP 9878 >=
LOAD D2 0.0012
COMPAREV D2 32
GOTOCMP 9878 ==
SETV D2 0
GOTO 9879
SETV D2 1
COMPAREV D2 0
GOTOCMP 9897 ==; Test 'if'
LOAD D2 0.0018; if() #539 Test AND if() #538 Body Start
COMPAREV D2 2
GOTOCMP 9892 ==
LOAD D2 0.0007
COMPAREV D2 0
GOTOCMP 9892 !=
LOAD D2 0.0004
COMPAREV D2 0
GOTOCMP 9892 !=
SETV D2 1
GOTO 9893
SETV D2 0
COMPAREV D2 0
GOTOCMP 9897 ==; Test 'if'
SETV D2 1; if() #539 Body Start
STORE D2 0.0008; if() #539 Body End
LOAD D2 0.0009; if() #538 Body End AND unless() #540 Test
COMPAREV D2 0
GOTOCMP 9908 !=; Test 'unless'
PUSHR D4; unless() #540 Body Start
LOAD D2 0.0017; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params Start
PUSHR D2
LOAD D2 0.0013
PUSHR D2; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Params End
CALLFUNC 0.7789; UsrFunc[bool __Tango_NeedsNewLine(int, int)] Call
POP D4
STORE D2 0.0009; unless() #540 Body End
LOAD D2 0.0009; if() #541 Test
COMPAREV D2 0
GOTOCMP 10043 ==; Test 'if'
LOAD D2 0.0003; if() #542 Test AND if() #541 Body Start
COMPAREV D2 0
GOTOCMP 9939 ==; Test 'if'
SETR D2 GD5; if() #542 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
PUSHV 32; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params Start
LOAD D2 0.0010
PUSHR D2; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Params End
CALLFUNC 0.3871; UsrFunc[int __Tango_GetCharacterWidth(char32, int[])] Call
POP D4
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #542 Body End
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_StartNewLine(bool)] Params Start
PUSHR D2; UsrFunc[int __Tango_StartNewLine(bool)] Params End
CALLFUNC 1.1309; UsrFunc[int __Tango_StartNewLine(bool)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #543 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 10038 ==; Test 'if'
LOAD D2 0.0007; if() #217 Test AND if() #543 Body Start
COMPAREV D2 0
GOTOCMP 9958 !=
LOAD D2 0.0018
COMPAREV D2 2
GOTOCMP 9958 ==
SETV D2 0
GOTO 9959
SETV D2 1
COMPAREV D2 0
GOTOCMP 10026 ==; Test 'if'
SETR D2 GD5; if() #544 Test AND if() #217 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 9998 ==; Test 'if'
SETR D2 GD5; if() #544 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #544 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0005
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0007; if() #545 Test
COMPAREV D2 0
GOTOCMP 10038 ==; Test 'if'
PUSHR D4; if() #545 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_ShiftMenuUp(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuUp(int)] Params End
CALLFUNC 1.1371; UsrFunc[void __Tango_ShiftMenuUp(int)] Call
POP D4; if() #545 Body End
GOTO 10038; if() #217 Body End
LOAD D2 0.0005; if() #217 Else Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1
STORE D2 0.0014; if() #217 Else End
LOAD D2 0.0004; if() #543 Body End AND if() #546 Test
COMPAREV D2 0
GOTOCMP 10043 ==; Test 'if'
SETV D2 1; if() #546 Body Start
STORE D2 0.0008; if() #546 Body End
LOAD D2 0.0008; if() #541 Body End AND if() #547 Test
COMPAREV D2 0
GOTOCMP 9461 ==; Test 'if'
SETR D2 GD5; if() #547 Body Start
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6263; UsrFunc[int __Tango_GetCurrentSpeed()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5; if() #548 Test
PUSHR D2
LOAD D2 0.0016
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 9461 ==; Test 'if'
SETV D2 1; if() #548 Body Start
STORE D2 0.0014; if() #548 Body End
GOTO 9461; if() #547 Body End AND until() #12 Body End AND until() #12 End
LOAD D2 0.0004; if() #549 Test
COMPAREV D2 0
GOTOCMP 10087 ==; Test 'if'
PUSHR D4; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #549 Body Start
CALLFUNC 0.6243; UsrFunc[int __Tango_GetCurrentSFX()] Call
POP D4; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body AND if() #549 Body End
LOAD D2 0.0013
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0016
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0019
RETURNFUNC; Func[void __Tango_Process(int)] Body End
PUSHARGSV 0 0.0005; Func[int __Tango_RunStringControlCode(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
STORE D2 0.0004
PUSHR D4
LOAD D2 0.0004; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetNumSCCArgs(int)] Params End
CALLFUNC 0.6751; UsrFunc[int __Tango_GetNumSCCArgs(int)] Call
POP D4
STORE D2 0.0003
ALLOCATEMEMV D2 3 0
PUSHR D2
WRITEPODARRAY D2 {0,0,0}
POP D2
STORE D2 0.0001
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005
STOREV 0 0; for() #150 setup
LOAD D2 0; for() #150 LoopTest
PUSHR D2
LOAD D2 0.0003
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10150 ==; for() #150 TestFail?
SETR D2 GD4; for() #150 Body Start
PUSHR D2
LOAD D2 0.0005
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
LOAD D2 0
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0005
ADDV D2 1
STORE D2 0.0005; for() #150 Body End
LOAD D2 0; for() #150 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 10122; for() #150 End
LOAD D2 0.0004; if() #272 Test
COMPAREV D2 11
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 10394 ==; Test 'if'
LOAD D2 0.0004; if() #273 Test AND if() #272 Body Start
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10178 ==; Test 'if'
PUSHR D4; if() #273 Body Start
PUSHV 0.2015; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1535; UsrFunc[void __Tango_SetVar(int, int)] Call
PEEK D4
PUSHV 1.3059; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1535; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10691; if() #273 Body End
LOAD D2 0.0004; if() #274 Test AND if() #273 Else Start
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10193 ==; Test 'if'
PUSHR D4; if() #274 Body Start
PUSHV 5.1391; UsrFunc[void __Tango_SetVar(int, int)] Params Start
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1535; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
GOTO 10691; if() #274 Body End
LOAD D2 0.0004; if() #275 Test AND if() #274 Else Start
COMPAREV D2 4
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10224 ==; Test 'if'
LOAD D2 0.0001; if() #574 Test AND if() #275 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 SDD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #574 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #574 Body End
GOTO 10691; if() #275 Body End
LOAD D2 0.0004; if() #276 Test AND if() #275 Else Start
COMPAREV D2 5
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10248 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Rand(int)] Params Start AND if() #575 Test AND if() #276 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
SETR D3 D2; InlineFunc[int Rand(int)] Params End
RNDR D2 D3; InlineFunc[int Rand(int)] Body
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #575 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #575 Body End
GOTO 10691; if() #276 Body End
LOAD D2 0.0004; if() #277 Test AND if() #276 Else Start
COMPAREV D2 6
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10271 ==; Test 'if'
LOAD D2 0.0001; if() #576 Test AND if() #277 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 LINKITEMD
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #576 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #576 Body End
GOTO 10691; if() #277 Body End
LOAD D2 0.0004; if() #278 Test AND if() #277 Else Start
COMPAREV D2 7
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10302 ==; Test 'if'
LOAD D2 0.0001; if() #577 Test AND if() #278 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #577 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #577 Body End
GOTO 10691; if() #278 Body End
LOAD D2 0.0004; if() #279 Test AND if() #278 Else Start
COMPAREV D2 8
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10345 ==; Test 'if'
LOAD D2 0.0001; if() #578 Test AND if() #279 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
POP D3
DIVR D3 D2
SETR D2 D3
MULTV D2 100
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #578 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 2
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #578 Body End
GOTO 10691; if() #279 Body End
LOAD D2 0.0004; if() #280 Test AND if() #279 Else Start
COMPAREV D2 9
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10371 ==; Test 'if'
LOAD D2 0.0001; if() #579 Test AND if() #280 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMELITEMSD
ANDV D2 1
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #579 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #579 Body End
GOTO 10691; if() #280 Body End
PUSHR D4; if() #580 Test AND if() #280 Else Start
PUSHV 8; UsrFunc[int NumTriforcePieces(int)] Params
CALLFUNC 0.0080; UsrFunc[int NumTriforcePieces(int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
PUSHR D4; if() #580 Body Start
LOAD D2 0.0001; UsrFunc[void __Tango_FuncGoto(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2; UsrFunc[void __Tango_FuncGoto(int)] Params End
CALLFUNC 0.5657; UsrFunc[void __Tango_FuncGoto(int)] Call
POP D4; if() #580 Body End
GOTO 10691; if() #280 Else End AND if() #279 Else End AND if() #278 Else End AND if() #277 Else End AND if() #276 Else End AND if() #275 Else End AND if() #274 Else End AND if() #273 Else End AND if() #272 Body End
LOAD D2 0.0004; if() #281 Test AND if() #272 Else Start
COMPAREV D2 11
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10432 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start AND if() #281 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #281 Body End
LOAD D2 0.0004; if() #282 Test AND if() #281 Else Start
COMPAREV D2 12
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10464 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start AND if() #282 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #282 Body End
LOAD D2 0.0004; if() #283 Test AND if() #282 Else Start
COMPAREV D2 13
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10495 ==; Test 'if'
PUSHR D4; if() #283 Body Start
LOAD D2 0.0001; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 1
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0055; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #283 Body End
LOAD D2 0.0004; if() #284 Test AND if() #283 Else Start
COMPAREV D2 14
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10547 ==; Test 'if'
LOAD D2 0.0001; if() #284 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Min(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHVARGR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHVARGR GAMEMCOUNTERD; InlineFunc[int Min(int, int)] Params End
MINVARG; InlineFunc[int Min(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #284 Body End
LOAD D2 0.0004; if() #285 Test AND if() #284 Else Start
COMPAREV D2 15
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10593 ==; Test 'if'
LOAD D2 0.0001; if() #285 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
LOAD D2 0.0001; InlineFunc[int Max(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMECOUNTERD
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
PUSHVARGR D3
PUSHVARGV 0; InlineFunc[int Max(int, int)] Params End
MAXVARG; InlineFunc[int Max(int, int)] Body
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #285 Body End
LOAD D2 0.0004; if() #286 Test AND if() #285 Else Start
COMPAREV D2 16
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10638 ==; Test 'if'
LOAD D2 0.0001; if() #286 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
SETR D2 GAMEMCOUNTERD
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 1
POP D3
MULTR D2 D3
DIVV D2 100
LSHIFTV D2 0
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[int Clamp(int, int, int)] Params Start
PUSHR D2
PUSHV 0
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
PUSHR GAMEMCOUNTERD; UsrFunc[int Clamp(int, int, int)] Params End
CALLFUNC 0.0055; UsrFunc[int Clamp(int, int, int)] Call
POP D4
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR GAMECOUNTERD D2
GOTO 10691; if() #286 Body End
LOAD D2 0.0004; if() #287 Test AND if() #286 Else Start
COMPAREV D2 17
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10654 ==; Test 'if'
SETV D2 1; if() #287 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10691; if() #287 Body End
LOAD D2 0.0004; if() #288 Test AND if() #287 Else Start
COMPAREV D2 18
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10670 ==; Test 'if'
SETV D2 0; if() #288 Body Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
POP D0
POP D2
SETR LINKITEMD D2
GOTO 10691; if() #288 Body End
LOAD D2 0.0004; if() #289 Test AND if() #288 Else Start
COMPAREV D2 21
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10681 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlaySound(int)] Params Start AND if() #289 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlaySound(int)] Params End
PLAYSOUNDR D2; InlineFunc[void Audio::PlaySound(int)] Body
GOTO 10691; if() #289 Body End
LOAD D2 0.0004; if() #581 Test AND if() #289 Else Start
COMPAREV D2 22
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10691 ==; Test 'if'
LOAD D2 0.0001; InlineFunc[void Audio::PlayMIDI(int)] Params Start AND if() #581 Body Start
PUSHR D2
POP D0
READPODARRAYV D2 0; InlineFunc[void Audio::PlayMIDI(int)] Params End
PLAYMIDIR D2; InlineFunc[void Audio::PlayMIDI(int)] Body AND if() #581 Body End
LOAD D2 0.0003; if() #289 Else End AND if() #288 Else End AND if() #287 Else End AND if() #286 Else End AND if() #285 Else End AND if() #284 Else End AND if() #283 Else End AND if() #282 Else End AND if() #281 Else End AND if() #272 Else End AND return Start
ADDV D2 1
LOAD D3 0.0001
DEALLOCATEMEMR D3
GOTO 10698; return End
LOAD D3 0.0001
DEALLOCATEMEMR D3
POPARGS D5 0.0006
RETURNFUNC; Func[int __Tango_RunStringControlCode(int)] Body End
PUSHARGSV 0 0.0004; Func[void __Tango_RunSetter(int, bool)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD4
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0002
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1457; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0001
PUSHR D4
LOAD D2 0.0005; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 4
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1413; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
STORE D2 0
LOAD D2 0.0003; if() #572 Test
COMPAREV D2 0.0542
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10745 ==; Test 'if'
LOAD D2 0; if() #572 Body Start
PUSHR D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6871; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
POP D3
ADDR D2 D3
STORE D2 0; if() #572 Body End
PUSHR D4
LOAD D2 0.0002; UsrFunc[void __Tango_SetVar(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_SetVar(int, int)] Params End
CALLFUNC 1.1535; UsrFunc[void __Tango_SetVar(int, int)] Call
POP D4
LOAD D2 0.0004; if() #573 Test
COMPAREV D2 0
GOTOCMP 10767 ==; Test 'if'
PUSHR D4; if() #573 Body Start
LOAD D2 0.0005; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4011; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #573 Body End
POPARGS D5 0.0006
RETURNFUNC; Func[void __Tango_RunSetter(int, bool)] Body End
SETR D4 SP2; Func[void __Tango_SetAlternateColor(int)] Body Start
PUSHR D4
PUSHV 10; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 35
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 11; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 39
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
PEEK D4
PUSHV 12; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHR D4
LOAD D2 0; UsrFunc[int __Tango_GetCurrStyleData(int)] Params Start
ADDV D2 43
PUSHR D2; UsrFunc[int __Tango_GetCurrStyleData(int)] Params End
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
POP D5
RETURNFUNC; Func[void __Tango_SetAlternateColor(int)] Body End
PUSHARGSV 0 0.0007; Func[int __Tango_RunFlowControl(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0007
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0.0006
STOREV 0 0.0005
STOREV 1 0.0004
STOREV 0 0.0003
STOREV 0 0.0002
LOAD D2 0.0006; if() #559 Test
COMPAREV D2 0.2441
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 10837 ==; Test 'if'
PUSHR D4; if() #559 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArgLength(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArgLength(int)] Params End
CALLFUNC 1.1457; UsrFunc[int __Tango_ReadArgLength(int)] Call
POP D4
STORE D2 0.0003
PUSHR D4
LOAD D2 0.0007; UsrFunc[int __Tango_ReadArg(int)] Params Start
ADDV D2 2
PUSHR D2; UsrFunc[int __Tango_ReadArg(int)] Params End
CALLFUNC 1.1413; UsrFunc[int __Tango_ReadArg(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I!=
STORE D2 0.0002; if() #559 Body End
LOAD D2 0.0006; if() #233 Test
COMPAREV D2 0.0069
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10895 ==; Test 'if'
LOAD D2 0.0002; if() #234 Test AND if() #233 Body Start
COMPAREV D2 0
GOTOCMP 10889 ==; Test 'if'
PUSHR D4; if() #234 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #235 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10877 ==; Test 'if'
PUSHR D4; if() #235 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11055; if() #235 Body End
PUSHR D4; if() #235 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0700; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #235 Else End
GOTO 11055; if() #234 Body End
PUSHR D4; if() #234 Else Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4; if() #234 Else End
GOTO 11055; if() #233 Body End
LOAD D2 0.0006; if() #236 Test AND if() #233 Else Start
COMPAREV D2 11.9678
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10958 ==; Test 'if'
LOAD D2 0.0002; if() #560 Test AND if() #236 Body Start
COMPAREV D2 0
GOTOCMP 10911 ==
PUSHR D4
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 10911 !=
SETV D2 1
GOTO 10912
SETV D2 0
COMPAREV D2 0
GOTOCMP 11055 ==; Test 'if'
PUSHR D4; if() #560 Body Start
PUSHV 20; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
PUSHV 1; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
SETR D2 GD4; if() #237 Test
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10946 ==; Test 'if'
PUSHR D4; if() #237 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11055; if() #237 Body End
PUSHR D4; if() #237 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0700; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #237 Else End
GOTO 11055; if() #560 Body End AND if() #236 Body End
LOAD D2 0.0006; if() #238 Test AND if() #236 Else Start
COMPAREV D2 0.2441
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10998 ==; Test 'if'
PUSHR D4; if() #561 Test AND if() #238 Body Start
PUSHV 20; UsrFunc[int __Tango_GetCurrSlotData(int)] Params
CALLFUNC 0.3043; UsrFunc[int __Tango_GetCurrSlotData(int)] Call
POP D4
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11055 ==; Test 'if'
SETR D2 GD4; if() #239 Test AND if() #561 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 10990 ==; Test 'if'
PUSHR D4; if() #239 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
STORE D2 0.0005
GOTO 11055; if() #239 Body End
PUSHR D4; if() #239 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0700; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #239 Else End
GOTO 11055; if() #561 Body End AND if() #238 Body End
LOAD D2 0.0006; if() #240 Test AND if() #238 Else Start
COMPAREV D2 5.8497
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11048 ==; Test 'if'
LOAD D2 0.0002; if() #562 Test AND if() #240 Body Start
COMPAREV D2 0
GOTOCMP 11055 ==; Test 'if'
SETR D2 GD4; if() #241 Test AND if() #562 Body Start
PUSHR D2
LOAD D2 0.0007
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11032 ==; Test 'if'
PUSHR D4; if() #241 Body Start
LOAD D2 0.0007; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11043; if() #241 Body End
PUSHR D4; if() #241 Else Start
LOAD D2 0.0007; UsrFunc[void __Tango_RunSetter(int, bool)] Params Start
ADDV D2 2
PUSHR D2
LOAD D2 0.0003
POP D3
ADDR D2 D3
PUSHR D2
PUSHV 0; UsrFunc[void __Tango_RunSetter(int, bool)] Params End
CALLFUNC 1.0700; UsrFunc[void __Tango_RunSetter(int, bool)] Call
POP D4; if() #241 Else End
SETV D2 1
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; if() #562 Body End
GOTO 11055; if() #240 Body End
LOAD D2 0.0002; unless() #563 Test AND if() #240 Else Start
COMPAREV D2 0
GOTOCMP 11055 !=; Test 'unless'
SETV D2 1; unless() #563 Body Start
STORE D2 0.0005
SETV D2 0
STORE D2 0.0004; unless() #563 Body End
LOAD D2 0.0004; if() #240 Else End AND if() #238 Else End AND if() #236 Else End AND if() #233 Else End AND if() #564 Test
COMPAREV D2 0
GOTOCMP 11081 ==; Test 'if'
LOAD D2 0.0007; if() #564 Body Start
ADDV D2 4
STORE D2 0
SETR D2 GD4; while() #15 Test
PUSHR D2
LOAD D2 0
POP D0
READPODARRAYR D2 D2
COMPAREV D2 -700
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 11074 ==; Test 'while'
LOAD D2 0; while() #15 Body Start
ADDV D2 1
STORE D2 0; while() #15 Body End
GOTO 11061; while() #15 End
PUSHR D4
LOAD D2 0.0007; UsrFunc[void __Tango_Delete(int, int)] Params Start
PUSHR D2
LOAD D2 0
PUSHR D2; UsrFunc[void __Tango_Delete(int, int)] Params End
CALLFUNC 0.4011; UsrFunc[void __Tango_Delete(int, int)] Call
POP D4; if() #564 Body End
LOAD D2 0.0005; return Start
POPARGS D5 0.0008; return End
RETURNFUNC; Func[int __Tango_RunFlowControl(int)] Body End
PUSHARGSV 0 0.0003; Func[void __Tango_ReadChoice(int, int, int, int)] Body Start
SETR D4 SP2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 3
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0002
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 7
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD3
PUSHR D2
LOAD D2 0.0003
ADDV D2 7
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 5
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0005
ADDV D2 4
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0004
ADDV D2 15
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
STORE D2 0.0001
SETR D2 GD4
PUSHR D2
LOAD D2 0.0006
ADDV D2 1
POP D0
READPODARRAYR D2 D2
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Params End
CALLFUNC 0.0565; UsrFunc[void Tango_AddMenuChoice(int, int, int)] Call
POP D4
POPARGS D5 0.0007
RETURNFUNC; Func[void __Tango_ReadChoice(int, int, int, int)] Body End
PUSHARGSV 0 0.0006; Func[void __Tango_TransferCenteredLine(int, bool)] Body Start
SETR D4 SP2
PUSHR D4
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0005
LOAD D2 0.0005; if() #595 Test
ANDV D2 256
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11307 !=; Test 'if' AND return (Void) AND if() #595 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0.0004
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD16
PUSHR D2
LOAD D2 0.0004
ADDV D2 6
POP D0
READPODARRAYR D2 D2
POP D3
ADDR D2 D3
SUBV D2 16
STORE D2 0.0002
PUSHR D4
PUSHV 8; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0.0001
LOAD D2 0.0001
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0003
POP D3
SUBR D3 D2
SETR D2 D3
POP D3
SUBR D3 D2
SETR D2 D3
DIVV D2 2
STORE D2 0
PUSHV 0; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params Start
PUSHV 6
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
LOAD D2 0.0003
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0007
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0001
PUSHR D2
PUSHV 16
PUSHV 0
PUSHV 1; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Params End
BITMAPR; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::DrawBitmap(int, int, int, int, int, int, int, int, int, int, int, bool)] Body End
PUSHV 0; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params Start
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0002
PUSHR D2
LOAD D2 0.0003
PUSHR D2
LOAD D2 0.0001
POP D3
ADDR D2 D3
PUSHR D2
LOAD D2 0.0002
ADDV D2 16
PUSHR D2
PUSHV 0
PUSHV -1
PUSHARGSV 0 0.0003
PUSHV 1
PUSHV 128; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Params End
RECTR; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body Start
POPARGS D5 0.0012; InlineFunc[void screendata::Rectangle(int, int, int, int, int, int, int, int, int, int, bool, int)] Body End
LOAD D2 0.0006; if() #596 Test
COMPAREV D2 0
GOTOCMP 11307 ==; Test 'if'
PUSHR D4; if() #596 Body Start
LOAD D2 0; UsrFunc[void __Tango_ShiftMenuRight(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_ShiftMenuRight(int)] Params End
CALLFUNC 1.2035; UsrFunc[void __Tango_ShiftMenuRight(int)] Call
POP D4; if() #596 Body End
POPARGS D5 0.0008
RETURNFUNC; Func[void __Tango_TransferCenteredLine(int, bool)] Body End
PUSHV 0; Func[int __Tango_StartNewLine(bool)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0
PUSHR D4
LOAD D2 0; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params Start
PUSHR D2
LOAD D2 0.0001
PUSHR D2; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Params End
CALLFUNC 1.1184; UsrFunc[void __Tango_TransferCenteredLine(int, bool)] Call
PEEK D4
PUSHV 3; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6164; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
POP D0
READPODARRAYR D2 D2
PUSHR D2
PUSHR D4
CALLFUNC 0.6297; UsrFunc[int __Tango_GetLineHeight()] Call
POP D4
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4; return Start
CALLFUNC 0.6842; UsrFunc[int __Tango_GetTargetOffset()] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
SUBR D3 D2
SETR D2 D3
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_StartNewLine(bool)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuUp(int)] Body Start
SETR D4 SP2
STOREV 35 0.0001
STOREV 0 0; for() #155 setup
LOAD D2 0; for() #155 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 11411 ==; for() #155 TestFail?
SETR D2 GD2; for() #155 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #155 Body End
LOAD D2 0; for() #155 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 11375; for() #155 End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuUp(int)] Body End
PUSHV 0; Func[int __Tango_ReadArg(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
STORE D2 0
LOAD D2 0; if() #220 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11433 ==; Test 'if'
PUSHR D4; return Start AND if() #220 Body Start
LOAD D2 0.0001; UsrFunc[int __Tango_RunFunction(int, bool)] Params Start
PUSHR D2
PUSHV 0; UsrFunc[int __Tango_RunFunction(int, bool)] Params End
CALLFUNC 0.7998; UsrFunc[int __Tango_RunFunction(int, bool)] Call
POP D4
GOTO 11455; return End AND if() #220 Body End
LOAD D2 0; if() #221 Test AND if() #220 Else Start
COMPAREV D2 -200
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11449 ==; Test 'if'
PUSHR D4; return Start AND if() #221 Body Start
SETR D2 GD4; UsrFunc[int __Tango_GetVar(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[int __Tango_GetVar(int)] Params End
CALLFUNC 0.6871; UsrFunc[int __Tango_GetVar(int)] Call
POP D4
GOTO 11455; return End AND if() #221 Body End
SETR D2 GD4; return Start AND if() #221 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
POPARGS D5 0.0002; return End AND if() #221 Else End AND if() #220 Else End
RETURNFUNC; Func[int __Tango_ReadArg(int)] Body End
PUSHARGSV 0 0.0004; Func[int __Tango_ReadArgLength(int)] Body Start
SETR D4 SP2
SETR D2 GD4
PUSHR D2
LOAD D2 0.0004
POP D0
READPODARRAYR D2 D2
STORE D2 0.0003
LOAD D2 0.0003; if() #222 Test
COMPAREV D2 -100
GOTOCMP 11473 ==
LOAD D2 0.0003
COMPAREV D2 -200
GOTOCMP 11473 ==
SETV D2 0
GOTO 11474
SETV D2 1
COMPAREV D2 0
GOTOCMP 11478 ==; Test 'if'
SETV D2 2; return Start AND if() #222 Body Start
GOTO 11524; return End AND if() #222 Body End
LOAD D2 0.0003; if() #223 Test AND if() #222 Else Start
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11523 ==; Test 'if'
STOREV 0 0.0002; if() #223 Body Start
STOREV 0 0.0001
STOREV 0 0
SETR D2 GD4; do-while() #1 Body Start
PUSHR D2
LOAD D2 0.0004
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
POP D0
READPODARRAYR D2 D2
STORE D2 0.0001
LOAD D2 0.0001; if() #224 Test
COMPAREV D2 -400
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11505 ==; Test 'if'
LOAD D2 0.0002; if() #224 Body Start
ADDV D2 1
STORE D2 0.0002
GOTO 11513; if() #224 Body End
LOAD D2 0.0001; if() #552 Test AND if() #224 Else Start
COMPAREV D2 -500
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11513 ==; Test 'if'
LOAD D2 0.0002; if() #552 Body Start
SUBV D2 1
STORE D2 0.0002; if() #552 Body End
LOAD D2 0; if() #224 Else End
ADDV D2 1
STORE D2 0; do-while() #1 Body End
LOAD D2 0.0002; do-while() #1 Test
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 11486 !=; Test 'while'
LOAD D2 0; return Start
GOTO 11524; return End AND if() #223 Body End
SETV D2 0; return Start AND if() #223 Else Start
POPARGS D5 0.0005; return End AND if() #223 Else End AND if() #222 Else End
RETURNFUNC; Func[int __Tango_ReadArgLength(int)] Body End
SETR D4 SP2; Func[int __Tango_RunCustomFunction(int, int[])] Body Start
PUSHR D4
LOAD D2 0.0001; UsrFunc[void Tango_LogUndefinedFunction(int)] Params Start
PUSHR D2; UsrFunc[void Tango_LogUndefinedFunction(int)] Params End
CALLFUNC 0.1459; UsrFunc[void Tango_LogUndefinedFunction(int)] Call
POP D4
SETV D2 0; return Start
POPARGS D5 0.0002; return End
RETURNFUNC; Func[int __Tango_RunCustomFunction(int, int[])] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_SetVar(int, int)] Body Start
SETR D4 SP2
LOAD D2 0.0003; if() #300 Test
COMPAREV D2 0.0034
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11549 ==; Test 'if'
PUSHR D4; if() #300 Body Start
PUSHV 22; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #300 Body End
LOAD D2 0.0003; if() #301 Test AND if() #300 Else Start
COMPAREV D2 0.0035
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11561 ==; Test 'if'
PUSHR D4; if() #301 Body Start
PUSHV 23; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #301 Body End
LOAD D2 0.0003; if() #302 Test AND if() #301 Else Start
COMPAREV D2 0.2015
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11573 ==; Test 'if'
PUSHR D4; if() #302 Body Start
PUSHV 8; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #302 Body End
LOAD D2 0.0003; if() #303 Test AND if() #302 Else Start
COMPAREV D2 1.3059
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11585 ==; Test 'if'
PUSHR D4; if() #303 Body Start
PUSHV 9; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #303 Body End
LOAD D2 0.0003; if() #304 Test AND if() #303 Else Start
COMPAREV D2 5.1391
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11597 ==; Test 'if'
PUSHR D4; if() #304 Body Start
PUSHV 13; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #304 Body End
LOAD D2 0.0003; if() #305 Test AND if() #304 Else Start
COMPAREV D2 0.0997
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11609 ==; Test 'if'
PUSHR D4; if() #305 Body Start
PUSHV 14; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #305 Body End
LOAD D2 0.0003; if() #306 Test AND if() #305 Else Start
COMPAREV D2 5.3793
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11660 ==; Test 'if'
PUSHR D4; if() #306 Body Start
PUSHV 35; UsrFunc[int __Tango_GetCurrStyleData(int)] Params
CALLFUNC 0.3827; UsrFunc[int __Tango_GetCurrStyleData(int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #593 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11626 ==; Test 'if'
PUSHR D4; if() #593 Body Start
CALLFUNC 0.1022; UsrFunc[void __Tango_DecScreenFreeze()] Call
POP D4; if() #593 Body End
PUSHR D4
PUSHV 0; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
LOAD D2 0.0002
MULTV D2 48
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 5 D2
SETV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 12 D2
PUSHR D4
LOAD D2 0.0002; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params Start
PUSHR D2
PUSHV 35; UsrFunc[int Tango_GetStyleAttribute(int, int)] Params End
CALLFUNC 0.1334; UsrFunc[int Tango_GetStyleAttribute(int, int)] Call
POP D4
STORE D2 0
LOAD D2 0; if() #594 Test
ANDV D2 512
COMPAREV D2 0
GOTOCMP 11703 ==; Test 'if'
PUSHR D4; if() #594 Body Start
CALLFUNC 0.0540; UsrFunc[void __Tango_IncScreenFreeze()] Call
POP D4; if() #594 Body End
GOTO 11703; if() #306 Body End
LOAD D2 0.0003; if() #307 Test AND if() #306 Else Start
COMPAREV D2 0.0024
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11672 ==; Test 'if'
PUSHR D4; if() #307 Body Start
PUSHV 6; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #307 Body End
LOAD D2 0.0003; if() #308 Test AND if() #307 Else Start
COMPAREV D2 0.0025
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11684 ==; Test 'if'
PUSHR D4; if() #308 Body Start
PUSHV 7; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #308 Body End
LOAD D2 0.0003; if() #309 Test AND if() #308 Else Start
COMPAREV D2 0.5235
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11696 ==; Test 'if'
PUSHR D4; if() #309 Body Start
PUSHV 18; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params Start
LOAD D2 0.0002
PUSHR D2; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Params End
CALLFUNC 0.3952; UsrFunc[void __Tango_SetCurrSlotData(int, int)] Call
POP D4
GOTO 11703; if() #309 Body End
PUSHR D4; if() #309 Else Start
LOAD D2 0.0003; UsrFunc[void Tango_SetCustomVar(int, int)] Params Start
PUSHR D2
LOAD D2 0.0002
PUSHR D2; UsrFunc[void Tango_SetCustomVar(int, int)] Params End
CALLFUNC 0.1763; UsrFunc[void Tango_SetCustomVar(int, int)] Call
POP D4; if() #309 Else End
POPARGS D5 0.0004; if() #308 Else End AND if() #307 Else End AND if() #306 Else End AND if() #305 Else End AND if() #304 Else End AND if() #303 Else End AND if() #302 Else End AND if() #301 Else End AND if() #300 Else End
RETURNFUNC; Func[void __Tango_SetVar(int, int)] Body End
PUSHARGSV 0 0.0002; Func[bool __Tango_Scroll(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
LOAD D2 0.0002; if() #290 Test
COMPAREV D2 2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11792 ==; Test 'if'
SETR D2 GD5; if() #290 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #584 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11761 ==; Test 'if'
SETR D2 GD5; if() #584 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #584 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 12033; return End AND if() #290 Body End
STOREV 4 0; if() #290 Else Start
LOAD D2 0.0002; if() #585 Test
COMPAREV D2 1
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11801 ==; Test 'if'
LOAD D2 0; if() #585 Body Start
MULTV D2 5
STORE D2 0; if() #585 Body End
SETR D2 GD5; if() #291 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
COMPARER D3 D2
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 11889 ==; Test 'if'
SETR D2 GD5; if() #291 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
STORE D2 0
SETR D2 GD5; if() #586 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11858 ==; Test 'if'
SETR D2 GD5; if() #586 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #586 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 1; return Start
GOTO 12033; return End AND if() #291 Body End
SETR D2 GD5; if() #292 Test AND if() #291 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
POP D0
READPODARRAYR D2 D2
COMPAREV D2 3
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11956 ==; Test 'if'
SETR D2 GD5; if() #587 Test AND if() #292 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I>=
COMPAREV D2 0
GOTOCMP 11936 ==; Test 'if'
SETR D2 GD5; if() #587 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #587 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12012; if() #292 Body End
SETR D2 GD5; if() #588 Test AND if() #292 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
POP D3
COMPARER D3 D2
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 11993 ==; Test 'if'
SETR D2 GD5; if() #588 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #588 Body End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #292 Else End
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0
POP D3
SUBR D3 D2
SETR D2 D3
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0; return Start
POPARGS D5 0.0003; return End AND if() #291 Else End AND if() #290 Else End
RETURNFUNC; Func[bool __Tango_Scroll(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_ShiftMenuRight(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 32
MULTV D2 3
ADDV D2 34
STORE D2 0.0001
SETR D2 GD2; for() #154 setup
PUSHR D2
POP D0
READPODARRAYV D2 32
STORE D2 0
LOAD D2 0; for() #154 LoopTest
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
POP D3
COMPARER D3 D2
SETCMP D2 I<
COMPAREV D2 0
GOTOCMP 12084 ==; for() #154 TestFail?
SETR D2 GD2; for() #154 Body Start
PUSHR D2
LOAD D2 0.0001
POP D0
READPODARRAYR D2 D2
PUSHR D2
LOAD D2 0.0002
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
PUSHR D2
LOAD D2 0.0001
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
LOAD D2 0.0001
ADDV D2 3
STORE D2 0.0001; for() #154 Body End
LOAD D2 0; for() #154 LoopIncrement
ADDV D2 1
STORE D2 0
GOTO 12049; for() #154 End
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 23
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 32 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_ShiftMenuRight(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateActiveSlot(int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 1 0
SETR D2 GD5; if() #599 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12130 ==; Test 'if'
PUSHR D4; if() #599 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3971; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #600 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12130 ==; Test 'if'
SETV D2 0; if() #600 Body Start
STORE D2 0; if() #600 Body End
SETR D2 GD5; if() #599 Body End AND if() #601 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12157 ==; Test 'if'
PUSHR D4; if() #601 Body Start
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1705; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
SETR D2 GD5; if() #602 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12157 ==; Test 'if'
SETV D2 0; if() #602 Body Start
STORE D2 0; if() #602 Body End
LOAD D2 0; if() #601 Body End AND if() #603 Test
COMPAREV D2 0
GOTOCMP 12165 ==; Test 'if'
PUSHR D4; if() #603 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_Process(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_Process(int)] Params End
CALLFUNC 0.9398; UsrFunc[void __Tango_Process(int)] Call
POP D4; if() #603 Body End
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateActiveSlot(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateAdvancing(int)] Body Start
SETR D4 SP2
PUSHR D4; unless() #605 Test AND if(true) #604 [Opt:AlwaysOn]
LOAD D2 0.0002; UsrFunc[bool __Tango_Scroll(int)] Params Start
PUSHR D2; UsrFunc[bool __Tango_Scroll(int)] Params End
CALLFUNC 1.1705; UsrFunc[bool __Tango_Scroll(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12302 ==; Test 'unless' AND return (Void) AND unless() #605 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 3
STORE D2 0
PUSHR D4
SETR D2 GD2; UsrFunc[void Tango_LoadMessage(int, int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[void Tango_LoadMessage(int, int)] Params End
CALLFUNC 0.1448; UsrFunc[void Tango_LoadMessage(int, int)] Call
POP D4
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
PUSHV 1; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Params
CALLFUNC 0.6164; UsrFunc[int __Tango_GetCurrSlotDefData(int)] Call
POP D4
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 3
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 3
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 4
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETR D2 GD16
PUSHR D2
LOAD D2 0
ADDV D2 4
POP D0
READPODARRAYR D2 D2
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 5
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 15
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 16
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
SETV D2 0
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 17
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
PUSHR D4
SETR D2 GD2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void __Tango_ClearSlotBitmap(int)] Params End
CALLFUNC 0.0474; UsrFunc[void __Tango_ClearSlotBitmap(int)] Call
POP D4
SETV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 1
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
POPARGS D5 0.0003
RETURNFUNC; Func[void __Tango_UpdateAdvancing(int)] Body End
PUSHARGSV 0 0.0002; Func[void __Tango_UpdateFinishedSlot(int, int)] Body Start
SETR D4 SP2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 4
STORE D2 0.0001
STOREV 0 0
LOAD D2 0.0003; if() #318 Test
ANDV D2 4
COMPAREV D2 0
SETCMP D2 I!=
COMPAREV D2 0
GOTOCMP 12349 ==; Test 'if'
SETR D2 GD5; if() #319 Test AND if() #318 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I>
COMPAREV D2 0
GOTOCMP 12346 ==; Test 'if'
PUSHR D4; if() #319 Body Start
LOAD D2 0.0002; UsrFunc[void __Tango_CountDown(int)] Params Start
PUSHR D2; UsrFunc[void __Tango_CountDown(int)] Params End
CALLFUNC 0.3971; UsrFunc[void __Tango_CountDown(int)] Call
POP D4
SETR D2 GD5; if() #619 Test
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12421 ==; Test 'if'
SETV D2 1; if() #619 Body Start
STORE D2 0; if() #619 Body End
GOTO 12421; if() #319 Body End
SETV D2 1; if() #319 Else Start
STORE D2 0; if() #319 Else End
GOTO 12421; if() #318 Body End
PUSHR D4; if() #320 Test AND if() #318 Else Start
SETR D2 GD5; UsrFunc[bool __Tango_PressAdvance(int)] Params Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
PUSHR D2; UsrFunc[bool __Tango_PressAdvance(int)] Params End
CALLFUNC 0.9297; UsrFunc[bool __Tango_PressAdvance(int)] Call
POP D4
COMPAREV D2 0
GOTOCMP 12405 ==; Test 'if'
SETV D2 1; if() #320 Body Start
STORE D2 0
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 8
ORV D2 4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 8 D2
PUSHR D4; if() #321 Test AND if(true) #620 [Opt:AlwaysOn]
CALLFUNC 0.0559; UsrFunc[bool __Tango_PressSpeedup()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12389 ==; Test 'if'
SETV D2 1; if() #321 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2
GOTO 12421; if() #321 Body End
PUSHR D4; if() #621 Test AND if() #321 Else Start
CALLFUNC 0.0562; UsrFunc[bool __Tango_PressSuperSpeed()] Call
POP D4
COMPAREV D2 0
GOTOCMP 12421 ==; Test 'if'
SETV D2 2; if() #621 Body Start
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 19
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #621 Body End
GOTO 12421; if() #321 Else End AND if() #320 Body End
SETR D2 GD5; if() #320 Else Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
POP D0
READPODARRAYR D2 D2
ADDV D2 1
PUSHR D2
SETR D2 GD5
PUSHR D2
LOAD D2 0.0001
ADDV D2 2
SETR D3 D2
POP D0
POP D2
WRITEPODARRAYRR D3 D2; if() #320 Else End
LOAD D2 0; if() #318 Else End AND if() #622 Test
COMPAREV D2 0
GOTOCMP 12452 ==; Test 'if'
SETR D2 GD5; if() #322 Test AND if() #622 Body Start
PUSHR D2
LOAD D2 0.0001
ADDV D2 18
POP D0
READPODARRAYR D2 D2
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12449 ==; Test 'if'
LOAD D2 0.0003; if() #623 Test AND if() #322 Body Start
ANDV D2 128
COMPAREV D2 0
SETCMP D2 I==
COMPAREV D2 0
GOTOCMP 12452 ==; Test 'if'
PUSHR D4; if() #623 Body Start
SETR D2 GD2; UsrFunc[void Tango_ClearSlot(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 0
PUSHR D2; UsrFunc[void Tango_ClearSlot(int)] Params End
CALLFUNC 0.0698; UsrFunc[void Tango_ClearSlot(int)] Call
POP D4; if() #623 Body End
GOTO 12452; if() #322 Body End
PUSHR D4; if() #322 Else Start
CALLFUNC 0.3766; UsrFunc[void __Tango_BeginAdvancing()] Call
POP D4; if() #322 Else End
POPARGS D5 0.0004; if() #622 Body End
RETURNFUNC; Func[void __Tango_UpdateFinishedSlot(int, int)] Body End
SETR D4 SP2; Func[void __Tango_UpdateCursorMovement()] Body Start
SETR D2 GD2; if() #618 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12540 !=; Test 'if' AND return (Void) AND if() #618 Body
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 31
SUBV D2 1
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 31 D2
SETR D2 GD2; if() #317 Test
PUSHR D2
POP D0
READPODARRAYV D2 31
COMPAREV D2 0
SETCMP D2 I<=
COMPAREV D2 0
GOTOCMP 12508 ==; Test 'if'
PUSHR D4; if() #317 Body Start
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceX(int)] Params End
CALLFUNC 0.1561; UsrFunc[int __Tango_GetMenuChoiceX(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
PUSHR D4
SETR D2 GD2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params Start
PUSHR D2
POP D0
READPODARRAYV D2 15
PUSHR D2; UsrFunc[int __Tango_GetMenuChoiceY(int)] Params End
CALLFUNC 0.1571; UsrFunc[int __Tango_GetMenuChoiceY(int)] Call
POP D4
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2
GOTO 12540; if() #317 Body End
SETR D2 GD2; if() #317 Else Start
PUSHR D2
POP D0
READPODARRAYV D2 27
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 29
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 27 D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 28
PUSHR D2
SETR D2 GD2
PUSHR D2
POP D0
READPODARRAYV D2 30
POP D3
ADDR D2 D3
PUSHR D2
SETR D2 GD2
SETR D0 D2
POP D2
WRITEPODARRAYVR 28 D2; if() #317 Else End
RETURNFUNC; Func[void __Tango_UpdateCursorMovement()] Body End
