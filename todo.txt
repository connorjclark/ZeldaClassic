To-Do

Fix bitmap->GetPixel: Make it a drawing function.
Make it a Unary Opcode
Return the value.

Add bitmap->DrawLayer* functions similar to DrawScreenSOlid, &c.
Test 'char' as an enum.

palette
Add userpalette struct to ffscript.h
Create function to replicate allegro make_colour()
palette->SetColours(int array)
palette->GetColours(int array)
palette Game->LoadPalette(int id)
palette->Load() : Loads to the current palette, calling allegro load_palette()


Change bitmap functions so that passing a value >= 10000 uses an internal bitmap,
	freeing the values 0.0001 -> 0.0006
	



Export WAV files and MIDI files from a quest in ZQuest.
Play external WAV file by script.
Play external MIDI file by script.

Add Input->JoyControls[] for configuration of joypad buttons.

Allow decimal values in item editor power and attributes fields.

Add freeze, freezeexcept, and such as script instructions.

->GetByUID(int script-uid) : A way to get the current screen index 
	of objects using their script_UID. 
	
Graphics->LoadESP
Graphics->LoadBossPal

DrawCombo--CSet2 rendering

Bitmap->ScriptDrawingFunctions()

Tie beamhearts to any counter

Add tooltips to the Quest Rev abd Min ZRev fields of the Quest Header dialogue. 

Make Clamp and vbound internal zscript functions, so that they are faster. 

-------------
*** FLAGS ***
-------------

Over/Under (Horizontal; scripted)
Over/Under (Vertical; scripted)

------------
*** NPCS ***
------------

Flag: Vulnerable to clocks.

Defence: TRANSFORM
Add magic powder, and an npc var: transform.
The 'transform' var can be an enemy defence (as can split, tribble)!

MOVE the code from zq_custom.cpp that populates custom weapon
sprites for npcs, into the quest loader.
	THEN, make the weapon sprite a pulldown, offset by +1
	so, the list can hav e NONE as case 0, which is translated
	to a value of -1 for the field.
	Read the field and adjust it by 1 when the dialogue opens. 


npc defence stun, no stunlock

npc WEAPON Sizing

npc hunger for floaters, fliers, wizzrobes, and such.

npc->Parent (for segmented npcs that are not cores)

Extra dropsets: stun dropset, frozen dropset.

MISSING: npcdata->FireSound; npc->FireSound
NEEDED: npc-Defence for LW_SPARKLE.
NEEDED npc->FrozenTile offsets for facing dir, or something so that ZC chooses the
	tile based on the same tile offset as the npc has before being frozen.
	e.g. If they are facing left, on the third tile of a 4-tile animation,
	the frozen tile should be the same offset. 
	NOT simply setting a static tile. 


Enemy flag to block brangs if the npc is already stunned.
...or just a defence type, stun(no stunlock). 


------------
*** LINK ***
------------
Link->HitWidth, HitHeight, HitZHeight (possibly)

Link->WarpEx()

Manually position minimap link dot; subscr.cpp, 
	putdot(dest,(((get_homescr()&15)-xoff)<<3)+x+(large?34:18)+(maptile?8:0),((get_homescr()&0xF0)>>1)+y+11,linkcolor);
	if(show_subscreen_dmap_dots&&has_item(itype_compass, get_dlevel()))
	putdot(dest,((get_homescr()&15)<<2)+x+9,((get_homescr()&0xF0)>>2)+y+8,linkcolor);
	
	
Link->Colour (int linkcolor in subscr.cpp; in drawdmap())

Both of the above are ugly, and very low-priority.

---------------
*** WEAPONS ***
---------------
Item Editor Weapons?

Weapon -> Defence Redirection / Weapon Editor Stuff
 -> This requires some changes that I am not sure that we are keeping, so I may leave it out of 2.54. 
 
item editor wpnsprite size: adjust all hardcoded sprite usage so that they use += ( n * tilewidth ) and += ( n * tileheight )

--------------
*** FFCORE ***
--------------
FFCore ButtonRules: A (use item), B (use item), 
	L (inventory left), R (inventory right)
	Disable / enable by script.
Tooltips for all new stuff. Try to improve extant tooltips
and provide tooltip chains.

-----------------
*** DATATYPES ***
-----------------
Set new refs to -1 on bad load, and wrap the macros so that if the
ref is -1, they do not try to access data members.
e.g. ri->shopsref = -1
( if ri->shopsref != -1 ) 
This will prevent the user from loading data from ref 0, without
causing crashes. 

Datatypes:
rgbdata
palette

------------
*** SCCs ***
------------

BUG TO FIX: Setting a goto SCC string ID to 0 can cause ZC to hang. 

Re-implement SCCs for Warp, SetDMapScreenD, GetDMapScreenD, SetScreenD, 
	and TriggerSecret (specific) . 
Add a Misc SCC, that works as \Misc\Instruction\Arg1\Arg2\...
	Instead of \Instruction\arg1\arg2, this will be a catchall for a new instruction 
	set that allows ~31 possible instructions--or would it be 255?
	
	I may prefer that we reserve three of these misc instruction values for future use. 
	
	Can SCC args be negative? if so, we can set up some defaults:
	Warp format should be \warp-code\dmap\screen\x\y\type\effect\sound
		where -1 for dmap would be the current dmap, -1 for scereen would be the current screen
		-1 through -4 for x and y would be the warp returns 1-4, -5 would be the current position. 
		
		Otherwise, we'd use 0 for current x and Y, and 1-4 for the warp return, to simulate
		pit warps and dest warps, respectively.
		
		The syntax for this, would be \warp-code\dmap\screen\warp_return\type\effect\sound
		the values for warp_return are 0-4. 
		
The SCCs to manipulate screen D should be matched: One to use with GetScreenD \set_d_code\reg\values
	and a new pair for Set/GetDMapScreenD as:
		\set_dmap_d_code\dmap\screen\reg\value
		\get_dmap_d_code\dmap\screen\reg

Trigger secrets would target a specific secret type on the current screen:
	\trigger_secret_code\secret_types

Item Pickup Flags may also be viable. I'm not sure how best to approach this one, as determining what item to target might be 
tricky. 
	It might be mandatory to set the pickup flags for all screen items to the same value, for an SCC that does this:
		\set_item_pickup_code\pickup_flag\ ( 0 or 1 for enable or disable ? ) 
		--or just a raw pickup type
		\set_item_pickup_code\pickup_types

Another possibly useful code, would be 'run ffc script'
	\run_ffc_code\ffc_id\script_id\combo_id
		The user would need to set the combo_id > 0. 
		
		
	

------------
*** MISC ***
------------
Combo editor types lists

Subscreen scrolling speed variable. 

-------------
*** RULES ***
-------------
Forward QRs to Items
qr_NOBOMBPALFLASH (may be better as a QR)
qr_LADDERANYWHERE(perhaps better by per-dmap basis?)

Implement Itemdata-based rule behaviour

Forward QRs to Combos
qr_NONBUBBLEFAIRIES //"Fairy Combos" as in flag 7. -V

Forward QRs to enemeies
qr_MEANTRAPS
qr_MEANPLACEDTRAPS
qr_PHANTOMPLACEDTRAPS
qr_SHADOWS
qr_TRANSSHADOWS
qr_SHADOWSFLICKER
qr_NOGUYPOOF
qr_WALLFLIERS
qr_ENEMIESFLICKER
qr_PEAHATCLOCKVULN
qr_BROKENSTATUES
qr_BRKNSHLDTILES

Implement Enemy based QR behaviour

Forward QRs to visual effects
qr_FFCSCROLL
qr_SMOOTHVERTICALSCROLLING
qr_NOSCROLLCONTINUE
qr_NOBORDER
qr_SUBSCREENOVERSPRITES
qr_OVALWIPE
qr_TRIANGLEWIPE
qr_SMASWIPE
qr_VERYFASTSCROLLING

Forward rules to ffscript or dmaps:
qr_NOSAVE
qr_NOCONTINUE
qr_NOGUYPOOF
qr_SELECTAWPN
qr_DROWN
qr_INSTABURNFLAGS
qr_ITEMSINPASSAGEWAYS
qr_LADDERANYWHERE(or per-item basis?)
qr_NOFAIRYGUYFIRES
qr_NOSOLIDDAMAGECOMBOS
qr_OFFSCREENWEAPONS(should this be per-weapon?)
qr_NOSCRIPTSDURINGSCROLL
qr_SHORTDGNWALK

Misc
qr_REFLECTROCKS
qr_OFFSETEWPNCOLLISIONFIX
qr_FIREPROOFLINK2 (Invincible Link is not hurt by his own fire)

------------
*** DONE ***
------------

Add CORE attribute to npcs and flag it for multi-segment cores.  [[DONE]]

//Done (Probably)
->GreyscaleOn() and GreyscaleOff() should be Greyscale(bool on)
->WavyIn, WavyOut, ZapIn(), and ZapOut() shoul dbe Way(bool out), and Zap(bool out)

Link->Pushing [[DONE]]
New ZScript Vars, Functions, and Types
ZDefs merge
Quest Loading Code
Saving Code
Script Drawing ( BitmapEx )
Greyscale code
Link No FLicker
Link Hurt Sound
Prevent Active Subscreen
DMAp Palette Code
Combo editor map flags lists,
New fonts
made global special types and arrays legal.
Added comment blocks to ZScript. 
Enemy Editor Sizing
ZQuest Editors: Enemy Editor Defences
Guys
Enemy Defence Code (new defence outcomes, only!)
Enemy Editor Enemy Sizing (Seems as if it should be fine.)
qr_RAFTLENS
qr_LENSSEESENEMIES(may be  better on a per-npc basis, 'Seen by Lens').
qr_FIREPROOFLINK
qr_TEMPCANDLELIGHT
qr_OUCHBOMBS
qr_BRANGPICKUP
qr_NONBUBBLEMEDICINE
qr_NONBUBBLETRIFORCE
qr_NODIVING 
qr_Z3BRANG_HSHOT
qr_QUICKSWORD	
qr_RINGAFFECTDAMAGE
qr_SLASHFLIPFIX
qr_NOITEMMELEE
qr_NOWANDMELEE
qr_WHIRLWINDMIRROR
qr_SWORDMIRROR
qr_SLOWCHARGINGWALK
Add Input->Modifiers for allegro keyboard modifier key flags.
Add Input->KeyControls[] for configuration of keyboard keys.
DrawScreen, Drawlayer--Fix CSet2 rendering
bitmap->Blit()
Whistle defence category.--huzzah, we need an extra page, defs 4!!
Defence type: Split --seems feasible. 

lw->, ew->, npc->Scale : Scale sprites and hitboxes around a specific value.

Might Do:

