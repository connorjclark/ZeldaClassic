// This file is generated by scripts/generate_protocol.py

#ifndef _ZQ_PROTOCOL_IMPL_H_
#define _ZQ_PROTOCOL_IMPL_H_

#include <string>
#include <vector>

namespace protocol {
namespace types {
	struct Widget {
		std::string name;
		std::string type;
		int width;
		int height;
	};
	struct Item {
		int id;
		std::string name;
		int tile;
	};
}
}


namespace protocol {
namespace commands {
	enum class type {
		none,
		show_message,
		quit,
		load_quest,
		get_items,
		get_item_names,
		click_screen,
	};

	namespace show_message {
		struct params {
			std::string type;
			std::string title;
			std::string content;
		};
		struct result {
		};
		result handle(params params);
	}

	namespace quit {
		struct params {
		};
		struct result {
		};
		result handle(params params);
	}

	namespace load_quest {
		struct params {
			std::string path;
			bool show_progress;
		};
		struct result {
			bool success;
			int error_code;
		};
		result handle(params params);
	}

	namespace get_items {
		struct params {
		};
		struct result {
			std::vector<protocol::types::Item> items;
		};
		result handle(params params);
	}

	namespace get_item_names {
		struct params {
		};
		struct result {
			std::vector<std::string> names;
		};
		result handle(params params);
	}

	namespace click_screen {
		struct params {
			int x;
			int y;
		};
		struct result {
		};
		result handle(params params);
	}

}
}

namespace protocol {
namespace events {
	enum class type {
		none,
		quest_loaded,
		quest_saved,
		dialog_opened,
	};

	namespace quest_loaded {
		struct params {
			std::string path;
		};
		void emit(params params);
	}

	namespace quest_saved {
		struct params {
			std::string path;
		};
		void emit(params params);
	}

	namespace dialog_opened {
		struct params {
			std::vector<protocol::types::Widget> widgets;
		};
		void emit(params params);
	}

}
}

#endif
